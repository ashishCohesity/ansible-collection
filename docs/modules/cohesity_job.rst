.. _cohesity_job_module:


cohesity_job -- Management of Cohesity Protection Jobs
======================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Ansible Module used to register, remove, start, and stop the Cohesity Protection Job on a Cohesity Cluster.

When executed in a playbook, the Cohesity Protection Job will be validated and the appropriate state action

will be applied.



Requirements
------------
The below requirements are needed on the host that executes this module.

- python >= 3.6
- cohesity_management_sdk >= 1.6.0



Parameters
----------

  append_to_existing (optional, bool, False)
    Specifies when job is already available and new list of virtual machines needs to be added to existing list.

    If not specified new list of vms will replace the existing vms available in the Protection job.

    Optional and only valid when (environment=VMware)


  cancel_active (optional, bool, False)
    Specifies if Current Running Backup Job should be canceled.  If False, active jobs will not be stopped

    and a failure will be raised.

    Optional and only valid when *state=stopped*


  cluster (optional, str, None)
    IP or FQDN for the Cohesity Cluster


  cohesity_admin (optional, str, None)
    Username with which Ansible will connect to the Cohesity Cluster. Domain Specific credentails can be configured in following formats

    AD.domain.com/username

    AD.domain.com/username@tenant

    LOCAL/username@tenant


  cohesity_password (optional, str, None)
    Password belonging to the selected Username.  This parameter will not be logged.


  delete_backups (optional, bool, False)
    Specifies if Snapshots generated by the Protection Job should also be deleted when the Job is deleted.

    Optional and only valid when *state=absent*


  delete_sources (optional, bool, False)
    Specifies job is already available, if source available in Protection Job needs to be removed.

    Optional and only valid when (environment=Physical, PhysicalFiles, GenericNas)


  description (optional, str, None)
    Optional Description to assign to the Protection Job


  disable_indexing (optional, bool, False)
    Enabling this will disable indexing while creating/updating the backup jobs.


  environment (False, str, PhysicalFiles)
    Specifies the environment type (such as VMware or SQL) of the Protection Source this Job

    is protecting. Supported environment types include 'PhysicalFiles', 'VMware'


  exclude (optional, list, None)
    Specifies the list of VMs to be exclude.

    Applicable only when environment is set to VMware.


  exclude_tags (optional, list, None)
    Specifies the list of VMware tags to be exclude.

    Applicable only when environment is set to VMware.

    Yet to be implemented.


  include (optional, list, None)
    Specifies the list of VMs to be included.

    Applicable only when environment is set to VMware.


  include_tags (optional, list, None)
    Specifies the list of VMware tags to be included.

    Applicable only when environment is set to VMware.

    Yet to be implemented.


  indexing (optional, dict, None)
    Specifies the list of allowed and denied indexing prefixes

    Applicable only when disable_indexing is set to false.

    allowed_prefix contains list of prefixes to be allowed while indexing.

    denied_prefix contains list of prefixes to be denied while indexing.


  name (True, str, None)
    Name to assign to the Protection Job


  ondemand_run_type (optional, str, Regular)
    Specifies the type of OnDemand Backup.


  protection_policy (optional, str, Bronze)
    Valid policy name or ID for andexisting Protection Policy to be assigned to the job.

    Required when *state=present*.


  protection_sources (optional, list, None)
    A list of dictionaries with endpoints and paths to backup. Required when *state=present*.

    (valid only for physical sources and file based protection jobs)

    protection_sources contains list of dicts(endpoint(str), paths(dict))

    excludeFilePaths - (List, defaults to empty list [], optional field) - String

    includeFilePath  - (String, default / for linux machines, required field for windows machines)

    skipNestedVolumes - True (Boolean, defaults to True)


  start_time (optional, str, None)
    Specifies the registered start time for the Protection Job.  Format must be 24hr time in either HHMM or HH:MM style.

    If not configured then the Cluster will automatically select a time.


  state (optional, str, present)
    Determines the state of the Protection Job


  storage_domain (optional, str, DefaultStorageDomain)
    Existing Storage Domain to which the Protection Job will be associated. Required when *state=present*.


  time_zone (optional, str, America/Los_Angeles)
    Specifies the timezone to use when calculating time for this Protection Job such as the Job start time.


  validate_certs (optional, bool, False)
    Switch determines if SSL Validation should be enabled.


  view_name (optional, str, )
    Specifies the name of view to be protected.

    Required when environment is set to View.





Notes
-----

.. note::
   - Currently, the Ansible Module requires Full Cluster Administrator access.




Examples
--------

.. code-block:: yaml+jinja

    
    # Create a new Physical Server Protection Job
    - cohesity_job:
        cluster: cohesity.lab
        username: admin
        password: password
        state: present
        name: myhost
        environment: PhysicalFiles
        protection_sources:
          - myhost.domain.lab
        protection_policy: Bronze
        storage_domain: Default

    # Create a new VMware Server Protection Job
    - cohesity_job:
        cluster: cohesity.lab
        username: admin
        password: password
        state: present
        name: myvcenter
        environment: VMware
        protection_sources:
          - myvcenter.domain.lab
        protection_policy: Gold
        storage_domain: Default

    # Remove an existing VMware Server Protection Job
    - cohesity_job:
        cluster: cohesity.lab
        username: admin
        password: password
        state: absent
        name: myvcenter
        environment: VMware

    # Remove an existing VMware Server Protection Job and remove all Backups
    - cohesity_job:
        cluster: cohesity.lab
        username: admin
        password: password
        state: absent
        name: myvcenter
        environment: VMware
        delete_backups: True

    # Start an existing VMware Server Protection Job
    - cohesity_job:
        cluster: cohesity.lab
        username: admin
        password: password
        state: started
        name: myvcenter
        environment: VMware

    # Stop an actively running VMware Server Protection Job
    - cohesity_job:
        cluster: cohesity.lab
        username: admin
        password: password
        state: stopped
        name: myvcenter
        environment: VMware





Status
------





Authors
~~~~~~~

- Naveena (@naveena-maplelabs)

