# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from alerts.master.stub import master_service_pb2 as alerts_dot_master_dot_stub_dot_master__service__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in alerts/master/stub/master_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RpcServiceStub(object):
    """-----------------------------------------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterAlerts = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/RegisterAlerts',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.RegisterAlertsArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.RegisterAlertsResult.FromString,
                _registered_method=True)
        self.SendAlerts = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/SendAlerts',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.SendAlertsArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.SendAlertsResult.FromString,
                _registered_method=True)
        self.GetAlertMetadata = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/GetAlertMetadata',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.GetAlertMetadataArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.GetAlertMetadataResult.FromString,
                _registered_method=True)
        self.QueryAlerts = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/QueryAlerts',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryAlertsArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryAlertsResult.FromString,
                _registered_method=True)
        self.ResolveAlerts = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/ResolveAlerts',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.ResolveAlertsArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.ResolveAlertsResult.FromString,
                _registered_method=True)
        self.QueryResolutions = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/QueryResolutions',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryResolutionsArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryResolutionsResult.FromString,
                _registered_method=True)
        self.DeleteResolutions = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/DeleteResolutions',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteResolutionsArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteResolutionsResult.FromString,
                _registered_method=True)
        self.CreateSuppressions = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/CreateSuppressions',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.CreateSuppressionsArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.CreateSuppressionsResult.FromString,
                _registered_method=True)
        self.DeleteSuppressions = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/DeleteSuppressions',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteSuppressionsArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteSuppressionsResult.FromString,
                _registered_method=True)
        self.QuerySuppressions = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/QuerySuppressions',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QuerySuppressionsArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QuerySuppressionsResult.FromString,
                _registered_method=True)
        self.UpdateDedupParams = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/UpdateDedupParams',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDedupParamsArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDedupParamsResult.FromString,
                _registered_method=True)
        self.QueryDedupParams = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/QueryDedupParams',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDedupParamsArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDedupParamsResult.FromString,
                _registered_method=True)
        self.UpdateDeliveryRules = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/UpdateDeliveryRules',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDeliveryRulesArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDeliveryRulesResult.FromString,
                _registered_method=True)
        self.QueryDeliveryRules = channel.unary_unary(
                '/cohesity.alerts.master.RpcService/QueryDeliveryRules',
                request_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDeliveryRulesArg.SerializeToString,
                response_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDeliveryRulesResult.FromString,
                _registered_method=True)


class RpcServiceServicer(object):
    """-----------------------------------------------------------------------------

    """

    def RegisterAlerts(self, request, context):
        """Register a new alert type with the alerts master.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendAlerts(self, request, context):
        """RPC alerts agent uses to send alerts to the master.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlertMetadata(self, request, context):
        """Get alert metadata from alerts master.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryAlerts(self, request, context):
        """Query alerts that match the requested criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResolveAlerts(self, request, context):
        """Mark one or more alerts as resolved.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryResolutions(self, request, context):
        """Query resolutions matching the input criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteResolutions(self, request, context):
        """Delete resolutions matching the input criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSuppressions(self, request, context):
        """Suppress notification for any future alerts matching the input criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSuppressions(self, request, context):
        """Delete previously created suppressions. In other words, resume
        notifications for any future alerts matching the input criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySuppressions(self, request, context):
        """Query suppression rules matching the input criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDedupParams(self, request, context):
        """Update dedup config.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryDedupParams(self, request, context):
        """Query dedup parameters matching the input criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDeliveryRules(self, request, context):
        """Update delivery rules.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryDeliveryRules(self, request, context):
        """Query delivery rules matching the input criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterAlerts': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterAlerts,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.RegisterAlertsArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.RegisterAlertsResult.SerializeToString,
            ),
            'SendAlerts': grpc.unary_unary_rpc_method_handler(
                    servicer.SendAlerts,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.SendAlertsArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.SendAlertsResult.SerializeToString,
            ),
            'GetAlertMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlertMetadata,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.GetAlertMetadataArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.GetAlertMetadataResult.SerializeToString,
            ),
            'QueryAlerts': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryAlerts,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryAlertsArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryAlertsResult.SerializeToString,
            ),
            'ResolveAlerts': grpc.unary_unary_rpc_method_handler(
                    servicer.ResolveAlerts,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.ResolveAlertsArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.ResolveAlertsResult.SerializeToString,
            ),
            'QueryResolutions': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryResolutions,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryResolutionsArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryResolutionsResult.SerializeToString,
            ),
            'DeleteResolutions': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteResolutions,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteResolutionsArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteResolutionsResult.SerializeToString,
            ),
            'CreateSuppressions': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSuppressions,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.CreateSuppressionsArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.CreateSuppressionsResult.SerializeToString,
            ),
            'DeleteSuppressions': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSuppressions,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteSuppressionsArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteSuppressionsResult.SerializeToString,
            ),
            'QuerySuppressions': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySuppressions,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QuerySuppressionsArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QuerySuppressionsResult.SerializeToString,
            ),
            'UpdateDedupParams': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDedupParams,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDedupParamsArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDedupParamsResult.SerializeToString,
            ),
            'QueryDedupParams': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryDedupParams,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDedupParamsArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDedupParamsResult.SerializeToString,
            ),
            'UpdateDeliveryRules': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDeliveryRules,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDeliveryRulesArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDeliveryRulesResult.SerializeToString,
            ),
            'QueryDeliveryRules': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryDeliveryRules,
                    request_deserializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDeliveryRulesArg.FromString,
                    response_serializer=alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDeliveryRulesResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.alerts.master.RpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.alerts.master.RpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RpcService(object):
    """-----------------------------------------------------------------------------

    """

    @staticmethod
    def RegisterAlerts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/RegisterAlerts',
            alerts_dot_master_dot_stub_dot_master__service__pb2.RegisterAlertsArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.RegisterAlertsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendAlerts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/SendAlerts',
            alerts_dot_master_dot_stub_dot_master__service__pb2.SendAlertsArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.SendAlertsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAlertMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/GetAlertMetadata',
            alerts_dot_master_dot_stub_dot_master__service__pb2.GetAlertMetadataArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.GetAlertMetadataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryAlerts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/QueryAlerts',
            alerts_dot_master_dot_stub_dot_master__service__pb2.QueryAlertsArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.QueryAlertsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResolveAlerts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/ResolveAlerts',
            alerts_dot_master_dot_stub_dot_master__service__pb2.ResolveAlertsArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.ResolveAlertsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryResolutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/QueryResolutions',
            alerts_dot_master_dot_stub_dot_master__service__pb2.QueryResolutionsArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.QueryResolutionsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteResolutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/DeleteResolutions',
            alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteResolutionsArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteResolutionsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateSuppressions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/CreateSuppressions',
            alerts_dot_master_dot_stub_dot_master__service__pb2.CreateSuppressionsArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.CreateSuppressionsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteSuppressions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/DeleteSuppressions',
            alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteSuppressionsArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.DeleteSuppressionsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QuerySuppressions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/QuerySuppressions',
            alerts_dot_master_dot_stub_dot_master__service__pb2.QuerySuppressionsArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.QuerySuppressionsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDedupParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/UpdateDedupParams',
            alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDedupParamsArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDedupParamsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryDedupParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/QueryDedupParams',
            alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDedupParamsArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDedupParamsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDeliveryRules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/UpdateDeliveryRules',
            alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDeliveryRulesArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.UpdateDeliveryRulesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryDeliveryRules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.alerts.master.RpcService/QueryDeliveryRules',
            alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDeliveryRulesArg.SerializeToString,
            alerts_dot_master_dot_stub_dot_master__service__pb2.QueryDeliveryRulesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
