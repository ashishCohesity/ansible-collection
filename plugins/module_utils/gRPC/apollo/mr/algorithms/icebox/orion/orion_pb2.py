# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: apollo/mr/algorithms/icebox/orion/orion.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from bridge.base import cloud_pb2 as bridge_dot_base_dot_cloud__pb2
from bridge.blob_store import blob_store_pb2 as bridge_dot_blob__store_dot_blob__store__pb2
from bridge.icebox.base import icebox_pb2 as bridge_dot_icebox_dot_base_dot_icebox__pb2
from bridge.s3_portal.base import s3_metadata_pb2 as bridge_dot_s3__portal_dot_base_dot_s3__metadata__pb2
from bridge.snap_tree import snap_tree_pb2 as bridge_dot_snap__tree_dot_snap__tree__pb2
from bridge.snap_fs import snap_fs_metadata_pb2 as bridge_dot_snap__fs_dot_snap__fs__metadata__pb2
from bridge.vault.base import worm_pb2 as bridge_dot_vault_dot_base_dot_worm__pb2
from bridge.view_keeper import view_usage_pb2 as bridge_dot_view__keeper_dot_view__usage__pb2
from configs import cluster_config_pb2 as configs_dot_cluster__config__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n-apollo/mr/algorithms/icebox/orion/orion.proto\x12\x1d\x63ohesity.apollo.mr.algorithms\x1a\x17\x62ridge/base/cloud.proto\x1a\"bridge/blob_store/blob_store.proto\x1a\x1f\x62ridge/icebox/base/icebox.proto\x1a\'bridge/s3_portal/base/s3_metadata.proto\x1a bridge/snap_tree/snap_tree.proto\x1a%bridge/snap_fs/snap_fs_metadata.proto\x1a\x1c\x62ridge/vault/base/worm.proto\x1a#bridge/view_keeper/view_usage.proto\x1a\x1c\x63onfigs/cluster_config.proto\"g\n\x17\x43loudDomainNodePtrProto\x12\x11\n\tdomain_id\x18\x01 \x01(\x03\x12\x39\n\rcloud_node_id\x18\x02 \x01(\x0b\x32\".cohesity.bridge.CloudNodePtrProto\"`\n\x15\x43loudDomainNodePtrVec\x12G\n\x07ptr_vec\x18\x01 \x03(\x0b\x32\x36.cohesity.apollo.mr.algorithms.CloudDomainNodePtrProto\"\x9c\t\n\x1bOrionHealerContextDataProto\x12\x42\n\x14\x63luster_config_proto\x18\x01 \x01(\x0b\x32$.cohesity.configs.ClusterConfigProto\x12+\n#apollo_mr_enable_orion_healer_algos\x18\x02 \x01(\x08\x12\x15\n\rdomain_id_vec\x18\x03 \x03(\x03\x12!\n\x19max_view_snap_tree_height\x18\x04 \x01(\x05\x12!\n\x19max_blob_snap_tree_height\x18\x05 \x01(\x05\x12\x15\n\rview_box_name\x18\x06 \x01(\t\x12\x11\n\tview_name\x18\x07 \x01(\t\x12\x0f\n\x07\x66s_name\x18\x08 \x01(\t\x12\x12\n\ncluster_id\x18\t \x01(\x03\x12\x17\n\x0flist_from_vault\x18\n \x01(\x08\x12\x31\n)approx_per_shard_cm_table_cleanup_size_kb\x18\x0b \x01(\x05\x12\x35\n-apollo_mr_orion_enable_chunk_metadata_cleaner\x18\x0c \x01(\x08\x12)\n!apollo_mr_orion_enable_ccfm_fixer\x18\r \x01(\x08\x12r\n\x16\x64omain_to_epoch_id_map\x18\x0e \x03(\x0b\x32R.cohesity.apollo.mr.algorithms.OrionHealerContextDataProto.DomainToEpochIdMapEntry\x12.\n&apollo_mr_orion_enable_cloud_domain_gc\x18\x0f \x01(\x08\x12\x33\n+apollo_mr_orion_enable_cloud_domain_tiering\x18\x10 \x01(\x08\x12\x34\n,apollo_mr_orion_ccfm_double_scan_to_validate\x18\x11 \x01(\x08\x12\x32\n*apollo_mr_orion_skip_csr_gc_for_domain_ids\x18\x12 \x01(\t\x12\x32\n*apollo_mr_orion_skip_ccr_gc_for_domain_ids\x18\x13 \x01(\t\x12\x32\n*apollo_mr_orion_validate_cloud_chunk_files\x18\x14 \x01(\x08\x12:\n2apollo_mr_orion_gc_validate_dangling_minion_bricks\x18\x15 \x01(\x08\x12\x35\n-apollo_mr_orion_gc_cache_refs_to_cloud_chunks\x18\x16 \x01(\x08\x12)\n!apollo_mr_orion_gc_add_scan_order\x18\x17 \x01(\x08\x12.\n&apollo_mr_orion_gc_enable_worm_domains\x18\x19 \x01(\x08\x1a\x39\n\x17\x44omainToEpochIdMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"\xce\x03\n\x1bOrionHealerVaultSourceProto\x12:\n\x04node\x18\x01 \x01(\x0b\x32,.cohesity.bridge.snap_tree.SnapTreeNodeProto\x12\x42\n\tvst_value\x18\x03 \x01(\x0b\x32/.cohesity.bridge.snap_fs.ViewSnapTreeValueProto\x12<\n\nbrick_meta\x18\x04 \x01(\x0b\x32(.cohesity.bridge.blob.BrickMetadataProto\x12I\n\x11s3object_st_value\x18\x08 \x01(\x0b\x32..cohesity.bridge.s3.S3ObjectSnapTreeValueProto\x12<\n\x0f\x63loud_object_id\x18\x05 \x01(\x0b\x32#.cohesity.bridge.CloudObjectIdProto\x12\x10\n\x08\x65poch_id\x18\x06 \x01(\x03\x12=\n\ttree_type\x18\x07 \x01(\x0e\x32*.cohesity.bridge.icebox.IceboxSnapTreeTypeJ\x04\x08\x02\x10\x03R\x11is_view_snap_tree\"\x8a\x02\n\x13OrionHealerKeyProto\x12N\n\x0e\x63loud_node_ptr\x18\x01 \x01(\x0b\x32\x36.cohesity.apollo.mr.algorithms.CloudDomainNodePtrProto\x12\x19\n\x11snap_tree_node_id\x18\x02 \x01(\x03\x12<\n\x0f\x63loud_object_id\x18\x03 \x01(\x0b\x32#.cohesity.bridge.CloudObjectIdProto\x12\x17\n\x0f\x63loud_domain_id\x18\x04 \x01(\x03\x12\x15\n\ris_csr_object\x18\x05 \x01(\x08\x12\x1a\n\x12is_validate_action\x18\x06 \x01(\x08\"\x96\x14\n\x15OrionHealerValueProto\x12\x16\n\x0enum_references\x18\x01 \x01(\x03\x12V\n\x18\x63loud_child_node_ptr_vec\x18\x04 \x01(\x0b\x32\x34.cohesity.apollo.mr.algorithms.CloudDomainNodePtrVec\x12<\n\x0f\x63loud_object_id\x18\x05 \x01(\x0b\x32#.cohesity.bridge.CloudObjectIdProto\x12O\n\x11live_node_ptr_vec\x18\x06 \x01(\x0b\x32\x34.cohesity.apollo.mr.algorithms.CloudDomainNodePtrVec\x12H\n\x17live_cloud_chunk_id_vec\x18\x08 \x03(\x0b\x32\'.cohesity.bridge.blob.CloudChunkIdProto\x12\x13\n\x0b\x63hunk_count\x18\t \x01(\x05\x12\x12\n\nnode_count\x18\n \x01(\x05\x12h\n\x13\x65xtension_stats_map\x18\x0b \x03(\x0b\x32K.cohesity.apollo.mr.algorithms.OrionHealerValueProto.ExtensionStatsMapEntry\x12\x1a\n\x12scribe_row_version\x18\x0c \x01(\x03\x12\x10\n\x08\x65poch_id\x18\r \x01(\x03\x12\x17\n\x0fparent_epoch_id\x18\x0e \x01(\x03\x12\x15\n\rutility_score\x18\x0f \x01(\x05\x12\x1f\n\x17latest_expiry_time_days\x18\x10 \x01(\x05\x12\x14\n\x0cis_leaf_node\x18\x11 \x01(\x08\x12\x14\n\x0cis_root_node\x18\x12 \x01(\x08\x12 \n\x18referred_local_nodes_vec\x18: \x03(\x05\x12\x1c\n\x14\x64\x65\x61\x64_local_nodes_vec\x18\x15 \x03(\x05\x12<\n\nbrick_meta\x18\x16 \x01(\x0b\x32(.cohesity.bridge.blob.BrickMetadataProto\x12\x17\n\x0flast_touch_secs\x18\x18 \x01(\x03\x12\x13\n\x0bnum_cm_rows\x18\x19 \x01(\x03\x12G\n\x1a\x64\x65lete_cloud_object_id_vec\x18\x1a \x03(\x0b\x32#.cohesity.bridge.CloudObjectIdProto\x12<\n\nchunk_meta\x18\x1b \x01(\x0b\x32(.cohesity.bridge.blob.ChunkMetadataProto\x12\x38\n\x0c\x63hunk_id_vec\x18\x1c \x03(\x0b\x32\".cohesity.bridge.blob.ChunkIdProto\x12\x18\n\x10proto_size_bytes\x18\x1d \x01(\x05\x12\x1c\n\x14\x62rick_meta_reference\x18\x1e \x01(\x08\x12\x1f\n\x17\x63m_table_entry_expected\x18\x1f \x01(\x08\x12\x1e\n\x16\x63m_table_entry_present\x18  \x01(\x08\x12 \n\x18validate_local_nodes_vec\x18! \x03(\x03\x12G\n\x16\x61ll_cloud_chunk_id_vec\x18\" \x03(\x0b\x32\'.cohesity.bridge.blob.CloudChunkIdProto\x12(\n skip_ccfm_chunk_count_validation\x18# \x01(\x08\x12$\n\x1cpost_scan_scribe_row_version\x18$ \x01(\x03\x12O\n\x1e\x63m_referred_cloud_chunk_id_vec\x18% \x03(\x0b\x32\'.cohesity.bridge.blob.CloudChunkIdProto\x12R\n!brick_referred_cloud_chunk_id_vec\x18& \x03(\x0b\x32\'.cohesity.bridge.blob.CloudChunkIdProto\x12\x1c\n\x14\x63m_unlikely_to_dedup\x18\' \x01(\x08\x12K\n\ttier_type\x18( \x01(\x0b\x32\x38.cohesity.configs.ClusterConfigProto.Vault.CloudTierType\x12\x19\n\x11\x63urrent_tier_rank\x18) \x01(\x05\x12\x19\n\x11\x64o_not_partial_gc\x18* \x01(\x08\x12\x12\n\ndo_not_lcm\x18+ \x01(\x08\x12,\n$is_forwarded_from_prev_level_reducer\x18, \x01(\x08\x12\x16\n\x0e\x66ound_in_vault\x18- \x01(\x08\x12=\n\ttree_type\x18. \x01(\x0e\x32*.cohesity.bridge.icebox.IceboxSnapTreeType\x12\x1d\n\x15num_scribe_references\x18/ \x01(\x03\x12\x1b\n\x13validate_ccr_object\x18\x30 \x01(\x08\x12+\n#last_file_existence_validation_secs\x18\x31 \x01(\x03\x12,\n$last_chunk_existence_validation_secs\x18\x32 \x01(\x03\x12\'\n\x1flast_chunk_data_validation_secs\x18\x33 \x01(\x03\x12%\n\x1dvalidate_cloud_chunk_checksum\x18\x34 \x01(\x08\x12\x1c\n\x14is_minion_brick_node\x18\x35 \x01(\x08\x12\x1a\n\x12not_found_in_vault\x18\x36 \x01(\x08\x12W\n\x19\x63loud_parent_node_ptr_vec\x18\x37 \x01(\x0b\x32\x34.cohesity.apollo.mr.algorithms.CloudDomainNodePtrVec\x12\x17\n\x0fin_archive_tier\x18\x38 \x01(\x08\x12\x36\n\x0bworm_params\x18\x39 \x01(\x0b\x32!.cohesity.bridge.vault.WORMParams\x12`\n!worm_retention_extendability_info\x18; \x01(\x0b\x32\x35.cohesity.bridge.vault.WORMRetentionExtendabilityInfo\x12\x19\n\x11\x63loud_object_size\x18< \x01(\x03\x1ar\n\x16\x45xtensionStatsMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12G\n\x05value\x18\x02 \x01(\x0b\x32\x38.cohesity.bridge.view.ViewUsageProto.ExtensionStatsProto:\x02\x38\x01J\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04J\x04\x08\x07\x10\x08J\x04\x08\x13\x10\x14J\x04\x08\x14\x10\x15J\x04\x08\x17\x10\x18R\x16is_view_snap_tree_node')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'apollo.mr.algorithms.icebox.orion.orion_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_ORIONHEALERCONTEXTDATAPROTO_DOMAINTOEPOCHIDMAPENTRY']._loaded_options = None
  _globals['_ORIONHEALERCONTEXTDATAPROTO_DOMAINTOEPOCHIDMAPENTRY']._serialized_options = b'8\001'
  _globals['_ORIONHEALERVALUEPROTO_EXTENSIONSTATSMAPENTRY']._loaded_options = None
  _globals['_ORIONHEALERVALUEPROTO_EXTENSIONSTATSMAPENTRY']._serialized_options = b'8\001'
  _globals['_CLOUDDOMAINNODEPTRPROTO']._serialized_start=385
  _globals['_CLOUDDOMAINNODEPTRPROTO']._serialized_end=488
  _globals['_CLOUDDOMAINNODEPTRVEC']._serialized_start=490
  _globals['_CLOUDDOMAINNODEPTRVEC']._serialized_end=586
  _globals['_ORIONHEALERCONTEXTDATAPROTO']._serialized_start=589
  _globals['_ORIONHEALERCONTEXTDATAPROTO']._serialized_end=1769
  _globals['_ORIONHEALERCONTEXTDATAPROTO_DOMAINTOEPOCHIDMAPENTRY']._serialized_start=1712
  _globals['_ORIONHEALERCONTEXTDATAPROTO_DOMAINTOEPOCHIDMAPENTRY']._serialized_end=1769
  _globals['_ORIONHEALERVAULTSOURCEPROTO']._serialized_start=1772
  _globals['_ORIONHEALERVAULTSOURCEPROTO']._serialized_end=2234
  _globals['_ORIONHEALERKEYPROTO']._serialized_start=2237
  _globals['_ORIONHEALERKEYPROTO']._serialized_end=2503
  _globals['_ORIONHEALERVALUEPROTO']._serialized_start=2506
  _globals['_ORIONHEALERVALUEPROTO']._serialized_end=5088
  _globals['_ORIONHEALERVALUEPROTO_EXTENSIONSTATSMAPENTRY']._serialized_start=4914
  _globals['_ORIONHEALERVALUEPROTO_EXTENSIONSTATSMAPENTRY']._serialized_end=5028
# @@protoc_insertion_point(module_scope)
