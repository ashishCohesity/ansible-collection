# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from apollo.stub import apollo_pb2 as apollo_dot_stub_dot_apollo__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in apollo/stub/apollo_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RpcServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartTask = channel.unary_unary(
                '/cohesity.apollo.stub.RpcService/StartTask',
                request_serializer=apollo_dot_stub_dot_apollo__pb2.StartTaskArg.SerializeToString,
                response_deserializer=apollo_dot_stub_dot_apollo__pb2.StartTaskResult.FromString,
                _registered_method=True)
        self.Probe = channel.unary_unary(
                '/cohesity.apollo.stub.RpcService/Probe',
                request_serializer=apollo_dot_stub_dot_apollo__pb2.ProbeArg.SerializeToString,
                response_deserializer=apollo_dot_stub_dot_apollo__pb2.ProbeResult.FromString,
                _registered_method=True)
        self.NotifyMapperStatusForReduce = channel.unary_unary(
                '/cohesity.apollo.stub.RpcService/NotifyMapperStatusForReduce',
                request_serializer=apollo_dot_stub_dot_apollo__pb2.NotifyMapperStatusForReduceArg.SerializeToString,
                response_deserializer=apollo_dot_stub_dot_apollo__pb2.NotifyMapperStatusForReduceResult.FromString,
                _registered_method=True)
        self.EndTask = channel.unary_unary(
                '/cohesity.apollo.stub.RpcService/EndTask',
                request_serializer=apollo_dot_stub_dot_apollo__pb2.EndTaskArg.SerializeToString,
                response_deserializer=apollo_dot_stub_dot_apollo__pb2.EndTaskResult.FromString,
                _registered_method=True)
        self.NotifyReducerStatusForReduce = channel.unary_unary(
                '/cohesity.apollo.stub.RpcService/NotifyReducerStatusForReduce',
                request_serializer=apollo_dot_stub_dot_apollo__pb2.NotifyReducerStatusForReduceArg.SerializeToString,
                response_deserializer=apollo_dot_stub_dot_apollo__pb2.NotifyReducerStatusForReduceResult.FromString,
                _registered_method=True)
        self.NotifyJobEnd = channel.unary_unary(
                '/cohesity.apollo.stub.RpcService/NotifyJobEnd',
                request_serializer=apollo_dot_stub_dot_apollo__pb2.JobEndNotificationArg.SerializeToString,
                response_deserializer=apollo_dot_stub_dot_apollo__pb2.JobEndNotificationResult.FromString,
                _registered_method=True)
        self.NotifyTaskStatus = channel.unary_unary(
                '/cohesity.apollo.stub.RpcService/NotifyTaskStatus',
                request_serializer=apollo_dot_stub_dot_apollo__pb2.NotifyTaskStatusArg.SerializeToString,
                response_deserializer=apollo_dot_stub_dot_apollo__pb2.NotifyTaskStatusResult.FromString,
                _registered_method=True)
        self.FetchMapOutput = channel.unary_unary(
                '/cohesity.apollo.stub.RpcService/FetchMapOutput',
                request_serializer=apollo_dot_stub_dot_apollo__pb2.FetchMapOutputArg.SerializeToString,
                response_deserializer=apollo_dot_stub_dot_apollo__pb2.FetchMapOutputResult.FromString,
                _registered_method=True)
        self.EmitAction = channel.unary_unary(
                '/cohesity.apollo.stub.RpcService/EmitAction',
                request_serializer=apollo_dot_stub_dot_apollo__pb2.EmitActionArg.SerializeToString,
                response_deserializer=apollo_dot_stub_dot_apollo__pb2.EmitActionResult.FromString,
                _registered_method=True)


class RpcServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartTask(self, request, context):
        """RPCs sent by the master to mappers/reducers. 

        Sent by the master to start a task on the receiver node. This RPC is
        retried until the receiving constituent dies.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Probe(self, request, context):
        """After a master restart, the new master probes all the mappers and reducers
        for reconstructing state before the restart. Retried until death of the
        receiver.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyMapperStatusForReduce(self, request, context):
        """Sent by the master to let the reducers know that a mapper task is
        complete or cancelled. Retried until death.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndTask(self, request, context):
        """Sent by the master to clean up the state about a task. This is called to
        cancel a task or to clean up state after a successful completion of a
        mapreduce job. Retried until death.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyReducerStatusForReduce(self, request, context):
        """Sent by the master to let all reducers know that a reducer task has been
        cancelled. The other reducer's will stop sending actions to it. Retried
        until death.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyJobEnd(self, request, context):
        """Sent by the apollo master to each action emitter to signal the end or
        cancellation of a job. Retried until death. */
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyTaskStatus(self, request, context):
        """RPCs sent by the mapper/reducer to master. 

        Used by the mapper/reducer to notify the status of a mapper task. Retried
        until death.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchMapOutput(self, request, context):
        """RPCs sent by reducer to mapper. These RPCs are used to pull data. 

        This RPC is retried until reducer receives a notification from the master
        that the mapper is no longer available.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EmitAction(self, request, context):
        """RPC(s) sent by reducers to other reducers. 

        Used by an algorithm to send an action to a remote action emitter.
        Retried until death.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartTask,
                    request_deserializer=apollo_dot_stub_dot_apollo__pb2.StartTaskArg.FromString,
                    response_serializer=apollo_dot_stub_dot_apollo__pb2.StartTaskResult.SerializeToString,
            ),
            'Probe': grpc.unary_unary_rpc_method_handler(
                    servicer.Probe,
                    request_deserializer=apollo_dot_stub_dot_apollo__pb2.ProbeArg.FromString,
                    response_serializer=apollo_dot_stub_dot_apollo__pb2.ProbeResult.SerializeToString,
            ),
            'NotifyMapperStatusForReduce': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyMapperStatusForReduce,
                    request_deserializer=apollo_dot_stub_dot_apollo__pb2.NotifyMapperStatusForReduceArg.FromString,
                    response_serializer=apollo_dot_stub_dot_apollo__pb2.NotifyMapperStatusForReduceResult.SerializeToString,
            ),
            'EndTask': grpc.unary_unary_rpc_method_handler(
                    servicer.EndTask,
                    request_deserializer=apollo_dot_stub_dot_apollo__pb2.EndTaskArg.FromString,
                    response_serializer=apollo_dot_stub_dot_apollo__pb2.EndTaskResult.SerializeToString,
            ),
            'NotifyReducerStatusForReduce': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyReducerStatusForReduce,
                    request_deserializer=apollo_dot_stub_dot_apollo__pb2.NotifyReducerStatusForReduceArg.FromString,
                    response_serializer=apollo_dot_stub_dot_apollo__pb2.NotifyReducerStatusForReduceResult.SerializeToString,
            ),
            'NotifyJobEnd': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyJobEnd,
                    request_deserializer=apollo_dot_stub_dot_apollo__pb2.JobEndNotificationArg.FromString,
                    response_serializer=apollo_dot_stub_dot_apollo__pb2.JobEndNotificationResult.SerializeToString,
            ),
            'NotifyTaskStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyTaskStatus,
                    request_deserializer=apollo_dot_stub_dot_apollo__pb2.NotifyTaskStatusArg.FromString,
                    response_serializer=apollo_dot_stub_dot_apollo__pb2.NotifyTaskStatusResult.SerializeToString,
            ),
            'FetchMapOutput': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchMapOutput,
                    request_deserializer=apollo_dot_stub_dot_apollo__pb2.FetchMapOutputArg.FromString,
                    response_serializer=apollo_dot_stub_dot_apollo__pb2.FetchMapOutputResult.SerializeToString,
            ),
            'EmitAction': grpc.unary_unary_rpc_method_handler(
                    servicer.EmitAction,
                    request_deserializer=apollo_dot_stub_dot_apollo__pb2.EmitActionArg.FromString,
                    response_serializer=apollo_dot_stub_dot_apollo__pb2.EmitActionResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.apollo.stub.RpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.apollo.stub.RpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RpcService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.apollo.stub.RpcService/StartTask',
            apollo_dot_stub_dot_apollo__pb2.StartTaskArg.SerializeToString,
            apollo_dot_stub_dot_apollo__pb2.StartTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Probe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.apollo.stub.RpcService/Probe',
            apollo_dot_stub_dot_apollo__pb2.ProbeArg.SerializeToString,
            apollo_dot_stub_dot_apollo__pb2.ProbeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyMapperStatusForReduce(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.apollo.stub.RpcService/NotifyMapperStatusForReduce',
            apollo_dot_stub_dot_apollo__pb2.NotifyMapperStatusForReduceArg.SerializeToString,
            apollo_dot_stub_dot_apollo__pb2.NotifyMapperStatusForReduceResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EndTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.apollo.stub.RpcService/EndTask',
            apollo_dot_stub_dot_apollo__pb2.EndTaskArg.SerializeToString,
            apollo_dot_stub_dot_apollo__pb2.EndTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyReducerStatusForReduce(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.apollo.stub.RpcService/NotifyReducerStatusForReduce',
            apollo_dot_stub_dot_apollo__pb2.NotifyReducerStatusForReduceArg.SerializeToString,
            apollo_dot_stub_dot_apollo__pb2.NotifyReducerStatusForReduceResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyJobEnd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.apollo.stub.RpcService/NotifyJobEnd',
            apollo_dot_stub_dot_apollo__pb2.JobEndNotificationArg.SerializeToString,
            apollo_dot_stub_dot_apollo__pb2.JobEndNotificationResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyTaskStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.apollo.stub.RpcService/NotifyTaskStatus',
            apollo_dot_stub_dot_apollo__pb2.NotifyTaskStatusArg.SerializeToString,
            apollo_dot_stub_dot_apollo__pb2.NotifyTaskStatusResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchMapOutput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.apollo.stub.RpcService/FetchMapOutput',
            apollo_dot_stub_dot_apollo__pb2.FetchMapOutputArg.SerializeToString,
            apollo_dot_stub_dot_apollo__pb2.FetchMapOutputResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EmitAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.apollo.stub.RpcService/EmitAction',
            apollo_dot_stub_dot_apollo__pb2.EmitActionArg.SerializeToString,
            apollo_dot_stub_dot_apollo__pb2.EmitActionResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
