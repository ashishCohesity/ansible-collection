# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bridge/base/workload_trace.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from bridge.snap_fs import snap_fs_metadata_pb2 as bridge_dot_snap__fs_dot_snap__fs__metadata__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n bridge/base/workload_trace.proto\x12\x0f\x63ohesity.bridge\x1a%bridge/snap_fs/snap_fs_metadata.proto\"\x99\x0f\n\x12WorkloadTraceProto\x12\x45\n\x0crequest_type\x18\x01 \x01(\x0e\x32/.cohesity.bridge.WorkloadTraceProto.RequestType\x12\x0e\n\x06offset\x18\x02 \x01(\x03\x12\x0e\n\x06length\x18\x03 \x01(\x03\x12L\n\rentity_handle\x18\x04 \x01(\x0b\x32\x35.cohesity.bridge.WorkloadTraceProto.SnapFSHandleProto\x12\x19\n\x11\x62lob_snap_tree_id\x18\x05 \x01(\x03\x12\x13\n\x0bstart_usecs\x18\x06 \x01(\x03\x12\r\n\x05\x65rror\x18\x07 \x01(\x05\x12\x14\n\x0cis_forwarded\x18\x08 \x01(\x08\x12\x11\n\tis_random\x18\t \x01(\x08\x12\"\n\x1a\x62ytes_read_from_data_cache\x18\n \x01(\x03\x12\x1b\n\x13\x62ytes_read_from_faa\x18\x14 \x01(\x03\x12\x1d\n\x15\x62ytes_read_from_hydra\x18\x15 \x01(\x03\x12\x13\n\x0bview_box_id\x18\x0b \x01(\x03\x12\x1f\n\x13num_prefetch_levels\x18\x0c \x01(\x05:\x02-1\x12\x0c\n\x04name\x18\r \x01(\t\x12I\n\ninode_type\x18\x0e \x01(\x0e\x32\x35.cohesity.bridge.snap_fs.InodeMetadataProto.InodeType\x12\x1c\n\x14num_chunk_files_read\x18\x0f \x01(\x05\x12\x0f\n\x07version\x18\x11 \x01(\x05\x12\x16\n\x0eminion_blob_id\x18\x12 \x01(\x03\x12\x1a\n\x12minion_blob_offset\x18\x13 \x01(\x03\x12S\n\x0eiscsi_wl_trace\x18\x10 \x01(\x0b\x32;.cohesity.bridge.WorkloadTraceProto.IscsiWorkloadTraceProto\x1aN\n\x11SnapFSHandleProto\x12\x0f\n\x07view_id\x18\x01 \x01(\x03\x12\x15\n\rroot_inode_id\x18\x02 \x01(\x03\x12\x11\n\tentity_id\x18\x03 \x01(\x03\x1a\xf0\x05\n\x17IscsiWorkloadTraceProto\x12]\n\x0crequest_type\x18\x01 \x01(\x0e\x32G.cohesity.bridge.WorkloadTraceProto.IscsiWorkloadTraceProto.RequestType\x12\x0b\n\x03lun\x18\x02 \x01(\x04\x12\x11\n\tview_name\x18\x03 \x01(\t\x12\x0f\n\x07view_id\x18\x04 \x01(\x03\x12\x0f\n\x07op_code\x18\x05 \x01(\t\x12\x16\n\x0e\x63ommand_status\x18\x06 \x01(\t\x12\x0c\n\x04size\x18\x07 \x01(\r\x12\x14\n\x0cupdated_size\x18\x08 \x01(\x03\x12\x1a\n\x12reservation_action\x18\t \x01(\t\x12\x19\n\x11reservation_scope\x18\n \x01(\t\x12\x18\n\x10reservation_type\x18\x0b \x01(\t\x12\x15\n\rsrc_file_name\x18\x0c \x01(\t\x12\r\n\x05\x65rror\x18\r \x01(\x05\x12 \n\x18task_management_function\x18\x0e \x01(\t\"\xde\x02\n\x0bRequestType\x12\x15\n\x11kScsiFormatUnitOp\x10\x02\x12\x12\n\x0ekScsiInquiryOp\x10\t\x12\x1e\n\x1akScsiPersistentReserveInOp\x10\x03\x12\x1f\n\x1bkScsiPersistentReserveOutOp\x10\x04\x12\x17\n\x13kScsiReadCapacityOp\x10\n\x12\x0f\n\x0bkScsiReadOp\x10\x00\x12\x15\n\x11kScsiReportLunsOp\x10\x0b\x12\x19\n\x15kScsiTaskManagementOp\x10\x0c\x12\x18\n\x14kScsiTestUnitReadyOp\x10\r\x12\x10\n\x0ckScsiWriteOp\x10\x01\x12\x15\n\x11kScsiCloneToLUNOp\x10\x05\x12\x14\n\x10kScsiCreateLUNOp\x10\x06\x12\x14\n\x10kScsiRemoveLUNOp\x10\x07\x12\x18\n\x14kScsiUpdateLUNSizeOp\x10\x08\"\xfb\x02\n\x0bRequestType\x12\x0f\n\x0bkSnapFSRead\x10\x00\x12\x17\n\x13kSnapFSMegaFileRead\x10\x01\x12\x10\n\x0ckSnapFSWrite\x10\x02\x12\x18\n\x14kSnapFSMegaFileWrite\x10\x03\x12\x12\n\x0ekSnapFSSetAttr\x10\x07\x12\x12\n\x0ekSnapFSReadDir\x10\x08\x12\x15\n\x11kSnapFSLookupPath\x10\t\x12\x11\n\rkSnapFSCreate\x10\n\x12\x11\n\rkSnapFSRemove\x10\x0b\x12\x16\n\x12kSnapFSLookupInode\x10\x0c\x12\x16\n\x12kSnapFSUpdateInode\x10\x10\x12\x19\n\x15kSnapFSLookupDirEntry\x10\r\x12\x16\n\x12kSnapFSFlushEntity\x10\x11\x12\r\n\tkBlobRead\x10\x04\x12\x0e\n\nkBlobWrite\x10\x05\x12\x12\n\x0ekBlobReadAhead\x10\x06\x12\n\n\x06kIscsi\x10\x0e\x12\x0f\n\x0bkHydraFlush\x10\x12')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'bridge.base.workload_trace_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_WORKLOADTRACEPROTO']._serialized_start=93
  _globals['_WORKLOADTRACEPROTO']._serialized_end=2038
  _globals['_WORKLOADTRACEPROTO_SNAPFSHANDLEPROTO']._serialized_start=823
  _globals['_WORKLOADTRACEPROTO_SNAPFSHANDLEPROTO']._serialized_end=901
  _globals['_WORKLOADTRACEPROTO_ISCSIWORKLOADTRACEPROTO']._serialized_start=904
  _globals['_WORKLOADTRACEPROTO_ISCSIWORKLOADTRACEPROTO']._serialized_end=1656
  _globals['_WORKLOADTRACEPROTO_ISCSIWORKLOADTRACEPROTO_REQUESTTYPE']._serialized_start=1306
  _globals['_WORKLOADTRACEPROTO_ISCSIWORKLOADTRACEPROTO_REQUESTTYPE']._serialized_end=1656
  _globals['_WORKLOADTRACEPROTO_REQUESTTYPE']._serialized_start=1659
  _globals['_WORKLOADTRACEPROTO_REQUESTTYPE']._serialized_end=2038
# @@protoc_insertion_point(module_scope)
