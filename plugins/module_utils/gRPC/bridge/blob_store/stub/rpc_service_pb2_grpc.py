# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from bridge.blob_store.stub import rpc_service_pb2 as bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in bridge/blob_store/stub/rpc_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RpcServiceStub(object):
    """-----------------------------------------------------------------------------

    RPC service used by the NFS portal.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ShuffleChunkFile = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/ShuffleChunkFile',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ShuffleChunkFileArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ShuffleChunkFileResult.FromString,
                _registered_method=True)
        self.MigrateChunks = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/MigrateChunks',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.MigrateChunksArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.MigrateChunksResult.FromString,
                _registered_method=True)
        self.CloneExtents = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/CloneExtents',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CloneExtentsArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CloneExtentsResult.FromString,
                _registered_method=True)
        self.WriteExtents = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/WriteExtents',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.WriteExtentsArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.WriteExtentsResult.FromString,
                _registered_method=True)
        self.InvalidateDataJournalByteRange = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/InvalidateDataJournalByteRange',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.InvalidateDataJournalByteRangeArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.InvalidateDataJournalByteRangeResult.FromString,
                _registered_method=True)
        self.ReadCloudChunkFileInfo = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/ReadCloudChunkFileInfo',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ReadCloudChunkFileInfoArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ReadCloudChunkFileInfoResult.FromString,
                _registered_method=True)
        self.DowntierChunksToCloud = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/DowntierChunksToCloud',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.DowntierChunksToCloudArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.DowntierChunksToCloudResult.FromString,
                _registered_method=True)
        self.FlushDataJournal = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/FlushDataJournal',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.FlushDataJournalArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.FlushDataJournalResult.FromString,
                _registered_method=True)
        self.GetChunkFileDowntierOwnerInfo = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/GetChunkFileDowntierOwnerInfo',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.GetChunkFileDowntierOwnerInfoArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.GetChunkFileDowntierOwnerInfoResult.FromString,
                _registered_method=True)
        self.LookupBlobSnapTreeBrickSize = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/LookupBlobSnapTreeBrickSize',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.LookupBlobSnapTreeBrickSizeArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.LookupBlobSnapTreeBrickSizeResult.FromString,
                _registered_method=True)
        self.RestoreStubBrickData = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/RestoreStubBrickData',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.RestoreStubBrickDataArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.RestoreStubBrickDataResult.FromString,
                _registered_method=True)
        self.Uptier = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/Uptier',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.UptierArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.UptierResult.FromString,
                _registered_method=True)
        self.CopyBricksToDataPlaneObject = channel.unary_unary(
                '/cohesity.bridge.blob.stub.RpcService/CopyBricksToDataPlaneObject',
                request_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CopyBricksToDataPlaneObjectArg.SerializeToString,
                response_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CopyBricksToDataPlaneObjectResult.FromString,
                _registered_method=True)


class RpcServiceServicer(object):
    """-----------------------------------------------------------------------------

    RPC service used by the NFS portal.
    """

    def ShuffleChunkFile(self, request, context):
        """Shuffle the replicas of a chunk file.

        Errors returned:
        kNonExistent: when the chunk file doesn't exist.
        kInvalid: when the input parameters cannot be enforced - e.g., when the
        chunk file is asked to move to a tier that requires
        encryption and the chunk file is not encrypted.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MigrateChunks(self, request, context):
        """Migrate chunks from one chunk file to another.

        Errors returned:
        kNonExistent: when the input chunk file doesn't exist.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloneExtents(self, request, context):
        """CloneExtents ensures the blob range specified in the arg is sharable
        and copies out the extents belonging to the range and returns them.

        Errors returned:
        kInvalid: when any of the input parameters are invalid.
        kRetry: the operation could not be completed.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteExtents(self, request, context):
        """WriteExtents writes the given exitents in the given offset.

        Errors returned:
        kInvalid: when any of the input parameters are invalid.
        kRetry: the operation could not be completed.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InvalidateDataJournalByteRange(self, request, context):
        """InvalidateDataJournalByteRange invalidates the data range in the blob
        range.

        Errors returned:
        kInvalid: when any of the input parameters are invalid.
        kRetry: the operation could not be completed.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadCloudChunkFileInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DowntierChunksToCloud(self, request, context):
        """RPC to downtier chunks to cloud. Keep a high timeout since the external
        target could be slow due to throttling.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FlushDataJournal(self, request, context):
        """RPC to flush blob data journal. Keep a high timeout since acquiring blob
        mount lock can take time.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChunkFileDowntierOwnerInfo(self, request, context):
        """RPC to find bridge session that owns the downtiering responsibility of a
        chunk file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupBlobSnapTreeBrickSize(self, request, context):
        """RPC to look up blob snap tree brick size.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreStubBrickData(self, request, context):
        """RPC to restore data in stub brick.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Uptier(self, request, context):
        """RPC to uptier a cloud object or return status of a previous request to
        uptier.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CopyBricksToDataPlaneObject(self, request, context):
        """RPC to copy data of bricks to dataplane object. Keep a high timeout since
        the external target could be bandwidth throttled.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ShuffleChunkFile': grpc.unary_unary_rpc_method_handler(
                    servicer.ShuffleChunkFile,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ShuffleChunkFileArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ShuffleChunkFileResult.SerializeToString,
            ),
            'MigrateChunks': grpc.unary_unary_rpc_method_handler(
                    servicer.MigrateChunks,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.MigrateChunksArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.MigrateChunksResult.SerializeToString,
            ),
            'CloneExtents': grpc.unary_unary_rpc_method_handler(
                    servicer.CloneExtents,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CloneExtentsArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CloneExtentsResult.SerializeToString,
            ),
            'WriteExtents': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteExtents,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.WriteExtentsArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.WriteExtentsResult.SerializeToString,
            ),
            'InvalidateDataJournalByteRange': grpc.unary_unary_rpc_method_handler(
                    servicer.InvalidateDataJournalByteRange,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.InvalidateDataJournalByteRangeArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.InvalidateDataJournalByteRangeResult.SerializeToString,
            ),
            'ReadCloudChunkFileInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadCloudChunkFileInfo,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ReadCloudChunkFileInfoArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ReadCloudChunkFileInfoResult.SerializeToString,
            ),
            'DowntierChunksToCloud': grpc.unary_unary_rpc_method_handler(
                    servicer.DowntierChunksToCloud,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.DowntierChunksToCloudArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.DowntierChunksToCloudResult.SerializeToString,
            ),
            'FlushDataJournal': grpc.unary_unary_rpc_method_handler(
                    servicer.FlushDataJournal,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.FlushDataJournalArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.FlushDataJournalResult.SerializeToString,
            ),
            'GetChunkFileDowntierOwnerInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChunkFileDowntierOwnerInfo,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.GetChunkFileDowntierOwnerInfoArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.GetChunkFileDowntierOwnerInfoResult.SerializeToString,
            ),
            'LookupBlobSnapTreeBrickSize': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupBlobSnapTreeBrickSize,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.LookupBlobSnapTreeBrickSizeArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.LookupBlobSnapTreeBrickSizeResult.SerializeToString,
            ),
            'RestoreStubBrickData': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreStubBrickData,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.RestoreStubBrickDataArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.RestoreStubBrickDataResult.SerializeToString,
            ),
            'Uptier': grpc.unary_unary_rpc_method_handler(
                    servicer.Uptier,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.UptierArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.UptierResult.SerializeToString,
            ),
            'CopyBricksToDataPlaneObject': grpc.unary_unary_rpc_method_handler(
                    servicer.CopyBricksToDataPlaneObject,
                    request_deserializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CopyBricksToDataPlaneObjectArg.FromString,
                    response_serializer=bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CopyBricksToDataPlaneObjectResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.bridge.blob.stub.RpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.bridge.blob.stub.RpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RpcService(object):
    """-----------------------------------------------------------------------------

    RPC service used by the NFS portal.
    """

    @staticmethod
    def ShuffleChunkFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/ShuffleChunkFile',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ShuffleChunkFileArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ShuffleChunkFileResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MigrateChunks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/MigrateChunks',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.MigrateChunksArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.MigrateChunksResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloneExtents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/CloneExtents',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CloneExtentsArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CloneExtentsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteExtents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/WriteExtents',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.WriteExtentsArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.WriteExtentsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InvalidateDataJournalByteRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/InvalidateDataJournalByteRange',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.InvalidateDataJournalByteRangeArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.InvalidateDataJournalByteRangeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadCloudChunkFileInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/ReadCloudChunkFileInfo',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ReadCloudChunkFileInfoArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.ReadCloudChunkFileInfoResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DowntierChunksToCloud(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/DowntierChunksToCloud',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.DowntierChunksToCloudArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.DowntierChunksToCloudResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FlushDataJournal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/FlushDataJournal',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.FlushDataJournalArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.FlushDataJournalResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChunkFileDowntierOwnerInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/GetChunkFileDowntierOwnerInfo',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.GetChunkFileDowntierOwnerInfoArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.GetChunkFileDowntierOwnerInfoResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupBlobSnapTreeBrickSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/LookupBlobSnapTreeBrickSize',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.LookupBlobSnapTreeBrickSizeArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.LookupBlobSnapTreeBrickSizeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RestoreStubBrickData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/RestoreStubBrickData',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.RestoreStubBrickDataArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.RestoreStubBrickDataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Uptier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/Uptier',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.UptierArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.UptierResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CopyBricksToDataPlaneObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.blob.stub.RpcService/CopyBricksToDataPlaneObject',
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CopyBricksToDataPlaneObjectArg.SerializeToString,
            bridge_dot_blob__store_dot_stub_dot_rpc__service__pb2.CopyBricksToDataPlaneObjectResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
