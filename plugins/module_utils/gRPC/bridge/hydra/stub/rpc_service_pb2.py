# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bridge/hydra/stub/rpc_service.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from bridge.hydra.base import epoch_pb2 as bridge_dot_hydra_dot_base_dot_epoch__pb2
from configs import cluster_config_pb2 as configs_dot_cluster__config__pb2
from open_util.net import protorpc_pb2 as open__util_dot_net_dot_protorpc__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n#bridge/hydra/stub/rpc_service.proto\x12\x1a\x63ohesity.bridge.hydra.stub\x1a\x1d\x62ridge/hydra/base/epoch.proto\x1a\x1c\x63onfigs/cluster_config.proto\x1a\x1copen_util/net/protorpc.proto\"\xc0\x02\n\tByteRange\x12\x16\n\x0elogical_offset\x18\x01 \x02(\x03\x12\x14\n\x0cwrite_offset\x18\x03 \x02(\x03\x12\x14\n\x0cwrite_length\x18\x02 \x02(\x03\x12\x15\n\radler32_cksum\x18\x04 \x01(\r\x12\x14\n\x0c\x62lock_offset\x18\x05 \x01(\x03\x12\x16\n\x0elogical_length\x18\x06 \x01(\x03\x12p\n\x11\x63ompression_level\x18\x07 \x01(\x0e\x32\x43.cohesity.configs.ClusterConfigProto.StoragePolicy.CompressionLevel:\x10kCompressionNone\x12\x19\n\x11\x63ompressed_length\x18\x08 \x01(\x03\x12\x1d\n\x15inline_payload_offset\x18\t \x01(\x03\"\xc8\x03\n\x0eMetadataRecord\x12\x13\n\x0bsequence_id\x18\x01 \x02(\x03\x12\x35\n\x06writes\x18\x02 \x03(\x0b\x32%.cohesity.bridge.hydra.stub.ByteRange\x12!\n\x19max_committed_sequence_id\x18\x03 \x01(\x03\x12\x45\n\x07\x66lushes\x18\x04 \x03(\x0b\x32\x34.cohesity.bridge.hydra.stub.MetadataRecord.FlushData\x12\x17\n\tis_random\x18\x05 \x01(\x08:\x04true\x12\x1e\n\x12stats_container_id\x18\x06 \x01(\x12:\x02-1\x12\x19\n\x11write_issue_usecs\x18\x07 \x01(\x03\x12\x1c\n\x10qos_principal_id\x18\x08 \x01(\x03:\x02-1\x12\x13\n\x07view_id\x18\t \x01(\x03:\x02-1\x1ay\n\tFlushData\x12\x10\n\x08\x65poch_id\x18\x01 \x02(\x03\x12\x13\n\x0bsequence_id\x18\x02 \x02(\x03\x12\x13\n\x0b\x62lob_offset\x18\x03 \x02(\x03\x12\x14\n\x0cwrite_length\x18\x04 \x02(\x03\x12\x1a\n\x12\x66lush_finish_usecs\x18\x05 \x01(\x03\"\x83\x01\n\rRemovedRanges\x12?\n\x06ranges\x18\x01 \x03(\x0b\x32/.cohesity.bridge.hydra.stub.RemovedRanges.Range\x1a\x31\n\x05Range\x12\x18\n\x10\x64\x61ta_file_offset\x18\x01 \x02(\x03\x12\x0e\n\x06length\x18\x02 \x02(\x03\"\xcc\x04\n\x08WriteArg\x12\x1d\n\x15master_incarnation_id\x18\x01 \x01(\x03\x12\x0f\n\x07\x62lob_id\x18\x02 \x02(\x03\x12\x10\n\x08\x65poch_id\x18\x03 \x02(\x03\x12:\n\x0breplica_vec\x18\x04 \x03(\x0b\x32%.cohesity.bridge.hydra.SlaveSelection\x12>\n\nwrite_data\x18\x05 \x02(\x0b\x32*.cohesity.bridge.hydra.stub.MetadataRecord\x12\x41\n\x0eremoved_ranges\x18\x06 \x01(\x0b\x32).cohesity.bridge.hydra.stub.RemovedRanges\x12\x1a\n\x12roll_forward_write\x18\x07 \x01(\x08\x12\x17\n\x0bview_box_id\x18\x08 \x01(\x03:\x02-1\x12\"\n\x14send_request_to_peer\x18\t \x01(\x08:\x04true\x12H\n\rqos_principal\x18\n \x01(\x0b\x32\x31.cohesity.configs.ClusterConfigProto.QoSPrincipal\x12\x1d\n\x15metadata_write_offset\x18\x0b \x01(\x03\x12&\n\x1e\x66ormatted_metadata_record_size\x18\x0c \x01(\x03\x12\x1b\n\x13inline_payload_size\x18\r \x01(\x03\x12\x19\n\x11\x64\x61ta_write_offset\x18\x0e \x01(\x03\x12\x1d\n\x11\x62lur_blob_view_id\x18\x0f \x01(\x03:\x02-1\"\xb1\x02\n\x0bWriteResult\x12P\n\x12read_only_disk_vec\x18\x01 \x03(\x0b\x32\x34.cohesity.bridge.hydra.stub.WriteResult.ReadOnlyDisk\x12M\n\x10missing_disk_vec\x18\x02 \x03(\x0b\x32\x33.cohesity.bridge.hydra.stub.WriteResult.MissingDisk\x1aK\n\x0cReadOnlyDisk\x12\x0f\n\x07\x64isk_id\x18\x01 \x02(\x03\x12\x14\n\x0c\x64isk_version\x18\x02 \x02(\x03\x12\x14\n\x0c\x61void_access\x18\x03 \x02(\x03\x1a\x34\n\x0bMissingDisk\x12\x0f\n\x07\x64isk_id\x18\x01 \x02(\x03\x12\x14\n\x0c\x64isk_version\x18\x02 \x01(\x03\"\xb1\x02\n\x07ReadArg\x12\x0f\n\x07\x62lob_id\x18\x01 \x02(\x03\x12\x10\n\x08\x65poch_id\x18\x02 \x02(\x03\x12\x0f\n\x07\x64isk_id\x18\x06 \x01(\x03\x12:\n\x0b\x62yte_ranges\x18\x03 \x03(\x0b\x32%.cohesity.bridge.hydra.stub.ByteRange\x12\x13\n\x0bview_box_id\x18\x04 \x01(\x03\x12#\n\x15trim_to_logical_range\x18\x05 \x01(\x08:\x04true\x12\x16\n\x0eshould_decrypt\x18\x07 \x01(\x08\x12H\n\rqos_principal\x18\x08 \x01(\x0b\x32\x31.cohesity.configs.ClusterConfigProto.QoSPrincipal\x12\x1a\n\x12is_canonical_epoch\x18\t \x01(\x08\"{\n\nReadResult\x12\x16\n\x08has_data\x18\x01 \x01(\x08:\x04true\x12?\n\x10\x61vailable_ranges\x18\x02 \x03(\x0b\x32%.cohesity.bridge.hydra.stub.ByteRange\x12\x14\n\x0c\x64isk_version\x18\x03 \x01(\x03\"\xae\x01\n\x08\x43loneArg\x12\x0f\n\x07\x62lob_id\x18\x01 \x02(\x03\x12\x10\n\x08\x65poch_id\x18\x02 \x02(\x03\x12\x0f\n\x07\x64isk_id\x18\x04 \x01(\x03\x12\x17\n\x0fnew_blob_id_vec\x18\x03 \x03(\x03\x12\x17\n\x0bview_box_id\x18\x05 \x01(\x03:\x02-1\x12\x1d\n\x11\x62lur_blob_view_id\x18\x06 \x01(\x03:\x02-1\x12\x1d\n\x11\x63\x61nonical_blob_id\x18\x07 \x01(\x03:\x02-1\"B\n\x0b\x43loneResult\x12\x14\n\x0c\x64isk_version\x18\x01 \x01(\x03\x12\x1d\n\x11\x63\x61nonical_blob_id\x18\x02 \x01(\x03:\x02-1\"\x8e\x01\n\x0eRemoveEpochArg\x12\x0f\n\x07\x62lob_id\x18\x01 \x02(\x03\x12\x10\n\x08\x65poch_id\x18\x02 \x02(\x03\x12\x0f\n\x07\x64isk_id\x18\x03 \x01(\x03\x12\x1d\n\x11\x62lur_blob_view_id\x18\x04 \x01(\x03:\x02-1\x12\x1a\n\x12is_canonical_epoch\x18\x05 \x01(\x08\x12\r\n\x05\x66orce\x18\x06 \x01(\x08\")\n\x11RemoveEpochResult\x12\x14\n\x0c\x64isk_version\x18\x01 \x01(\x03\"\xeb\x01\n\x0fRemoveRangesArg\x12\x0f\n\x07\x62lob_id\x18\x01 \x02(\x03\x12\x10\n\x08\x65poch_id\x18\x02 \x02(\x03\x12:\n\x0breplica_vec\x18\x03 \x03(\x0b\x32%.cohesity.bridge.hydra.SlaveSelection\x12\x41\n\x0eremoved_ranges\x18\x04 \x01(\x0b\x32).cohesity.bridge.hydra.stub.RemovedRanges\x12\x17\n\x0bview_box_id\x18\x05 \x01(\x03:\x02-1\x12\x1d\n\x11\x62lur_blob_view_id\x18\x06 \x01(\x03:\x02-1\"\x14\n\x12RemoveRangesResult\"m\n\x0cReadIndexArg\x12\x0f\n\x07\x62lob_id\x18\x01 \x02(\x03\x12\x10\n\x08\x65poch_id\x18\x02 \x02(\x03\x12\x0f\n\x07\x64isk_id\x18\x04 \x01(\x03\x12\x19\n\x11is_canonical_blob\x18\x05 \x01(\x08\x12\x0e\n\x06\x63ookie\x18\x03 \x01(\x0c\"t\n\x0fReadIndexResult\x12;\n\x07\x65ntries\x18\x01 \x03(\x0b\x32*.cohesity.bridge.hydra.stub.MetadataRecord\x12\x0e\n\x06\x63ookie\x18\x02 \x01(\x0c\x12\x14\n\x0c\x64isk_version\x18\x03 \x01(\x03\"\xa3\x03\n\x0eHydraUsageInfo\x12\x0f\n\x07node_id\x18\x01 \x02(\x03\x12\x13\n\x07\x64isk_id\x18\x08 \x01(\x03:\x02-1\x12\x17\n\x0fis_default_disk\x18\t \x01(\x08\x12\x1d\n\x15\x62ridge_constituent_id\x18\n \x01(\x03\x12\x12\n\nsession_id\x18\x02 \x02(\x03\x12\x13\n\x0bsequence_id\x18\x03 \x02(\x03\x12\x19\n\x11num_active_epochs\x18\x04 \x01(\x05\x12\"\n\x1anum_active_metadata_epochs\x18\x10 \x01(\x05\x12\x16\n\x0e\x63\x61pacity_bytes\x18\x05 \x01(\x03\x12\x12\n\nused_bytes\x18\x06 \x01(\x03\x12\x1b\n\x13metadata_used_bytes\x18\x11 \x01(\x03\x12\x0f\n\x07num_fds\x18\x07 \x01(\x05\x12\x15\n\rread_avg_size\x18\x0b \x01(\x03\x12\x14\n\x0cread_avg_oio\x18\x0c \x01(\x01\x12\x16\n\x0ewrite_avg_size\x18\r \x01(\x03\x12\x15\n\rwrite_avg_oio\x18\x0e \x01(\x01\x12\x15\n\x07healthy\x18\x0f \x01(\x08:\x04true\"Q\n\x10\x43lusterUsageInfo\x12=\n\tnode_info\x18\x01 \x03(\x0b\x32*.cohesity.bridge.hydra.stub.HydraUsageInfo\"U\n\x0eGetUsageResult\x12\x43\n\rcluster_usage\x18\x01 \x01(\x0b\x32,.cohesity.bridge.hydra.stub.ClusterUsageInfo\"R\n\x0bGetUsageArg\x12\x43\n\rcluster_usage\x18\x01 \x02(\x0b\x32,.cohesity.bridge.hydra.stub.ClusterUsageInfo\"7\n\x12\x43heckValidEpochArg\x12\x0f\n\x07\x62lob_id\x18\x01 \x02(\x03\x12\x10\n\x08\x65poch_id\x18\x02 \x02(\x03\"\xad\x01\n\x15\x43heckValidEpochResult\x12[\n\x08validity\x18\x01 \x01(\x0e\x32?.cohesity.bridge.hydra.stub.CheckValidEpochResult.EpochValidity:\x08kUnknown\"7\n\rEpochValidity\x12\n\n\x06kValid\x10\x00\x12\x0c\n\x08kInvalid\x10\x01\x12\x0c\n\x08kUnknown\x10\x02\"\xa7\x02\n\x11ReplicateEpochArg\x12\x0f\n\x07\x62lob_id\x18\x01 \x02(\x03\x12\x10\n\x08\x65poch_id\x18\x02 \x02(\x03\x12\x13\n\x0bsrc_disk_id\x18\x03 \x02(\x03\x12\x13\n\x0b\x64st_disk_id\x18\x04 \x01(\x03\x12M\n\rdst_disk_tier\x18\x05 \x01(\x0e\x32\x36.cohesity.bridge.hydra.stub.ReplicateEpochArg.DiskTier\x12\x1e\n\x10\x63heck_free_space\x18\x06 \x01(\x08:\x04true\x12\x17\n\x0bview_box_id\x18\x07 \x01(\x03:\x02-1\x12\x1d\n\x11\x62lur_blob_view_id\x18\x08 \x01(\x03:\x02-1\"\x1e\n\x08\x44iskTier\x12\x08\n\x04kSSD\x10\x00\x12\x08\n\x04kHDD\x10\x01\"I\n\x14ReplicateEpochResult\x12\x13\n\x07\x64isk_id\x18\x01 \x01(\x03:\x02-1\x12\x1c\n\x10replicated_bytes\x18\x02 \x01(\x03:\x02-12\xe0\x07\n\nRpcService\x12\x65\n\x05Write\x12$.cohesity.bridge.hydra.stub.WriteArg\x1a\'.cohesity.bridge.hydra.stub.WriteResult\"\r\x80\xe2\t\x90N\x88\xe2\t\x00\x90\xe2\t\x01\x12_\n\x05Read2\x12#.cohesity.bridge.hydra.stub.ReadArg\x1a&.cohesity.bridge.hydra.stub.ReadResult\"\t\x80\xe2\t\xa0\x1f\x88\xe2\t\x00\x12j\n\x0bRemoveEpoch\x12*.cohesity.bridge.hydra.stub.RemoveEpochArg\x1a-.cohesity.bridge.hydra.stub.RemoveEpochResult\"\x00\x12q\n\x0cRemoveRanges\x12+.cohesity.bridge.hydra.stub.RemoveRangesArg\x1a..cohesity.bridge.hydra.stub.RemoveRangesResult\"\x04\x90\xe2\t\x00\x12]\n\x05\x43lone\x12$.cohesity.bridge.hydra.stub.CloneArg\x1a\'.cohesity.bridge.hydra.stub.CloneResult\"\x05\x80\xe2\t\xa0\x1f\x12\x61\n\x08GetUsage\x12\'.cohesity.bridge.hydra.stub.GetUsageArg\x1a*.cohesity.bridge.hydra.stub.GetUsageResult\"\x00\x12m\n\tReadIndex\x12(.cohesity.bridge.hydra.stub.ReadIndexArg\x1a+.cohesity.bridge.hydra.stub.ReadIndexResult\"\t\x80\xe2\t\xd0\x0f\x88\xe2\t\x00\x12v\n\x0f\x43heckValidEpoch\x12..cohesity.bridge.hydra.stub.CheckValidEpochArg\x1a\x31.cohesity.bridge.hydra.stub.CheckValidEpochResult\"\x00\x12s\n\x0eReplicateEpoch\x12-.cohesity.bridge.hydra.stub.ReplicateEpochArg\x1a\x30.cohesity.bridge.hydra.stub.ReplicateEpochResult\"\x00\x1a\r\x80\xf1\x04\xe8\x07\x88\xf1\x04\x01\x90\xf1\x04\x02\x42\x03\x80\x01\x01')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'bridge.hydra.stub.rpc_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\200\001\001'
  _globals['_RPCSERVICE']._loaded_options = None
  _globals['_RPCSERVICE']._serialized_options = b'\200\361\004\350\007\210\361\004\001\220\361\004\002'
  _globals['_RPCSERVICE'].methods_by_name['Write']._loaded_options = None
  _globals['_RPCSERVICE'].methods_by_name['Write']._serialized_options = b'\200\342\t\220N\210\342\t\000\220\342\t\001'
  _globals['_RPCSERVICE'].methods_by_name['Read2']._loaded_options = None
  _globals['_RPCSERVICE'].methods_by_name['Read2']._serialized_options = b'\200\342\t\240\037\210\342\t\000'
  _globals['_RPCSERVICE'].methods_by_name['RemoveRanges']._loaded_options = None
  _globals['_RPCSERVICE'].methods_by_name['RemoveRanges']._serialized_options = b'\220\342\t\000'
  _globals['_RPCSERVICE'].methods_by_name['Clone']._loaded_options = None
  _globals['_RPCSERVICE'].methods_by_name['Clone']._serialized_options = b'\200\342\t\240\037'
  _globals['_RPCSERVICE'].methods_by_name['ReadIndex']._loaded_options = None
  _globals['_RPCSERVICE'].methods_by_name['ReadIndex']._serialized_options = b'\200\342\t\320\017\210\342\t\000'
  _globals['_BYTERANGE']._serialized_start=159
  _globals['_BYTERANGE']._serialized_end=479
  _globals['_METADATARECORD']._serialized_start=482
  _globals['_METADATARECORD']._serialized_end=938
  _globals['_METADATARECORD_FLUSHDATA']._serialized_start=817
  _globals['_METADATARECORD_FLUSHDATA']._serialized_end=938
  _globals['_REMOVEDRANGES']._serialized_start=941
  _globals['_REMOVEDRANGES']._serialized_end=1072
  _globals['_REMOVEDRANGES_RANGE']._serialized_start=1023
  _globals['_REMOVEDRANGES_RANGE']._serialized_end=1072
  _globals['_WRITEARG']._serialized_start=1075
  _globals['_WRITEARG']._serialized_end=1663
  _globals['_WRITERESULT']._serialized_start=1666
  _globals['_WRITERESULT']._serialized_end=1971
  _globals['_WRITERESULT_READONLYDISK']._serialized_start=1842
  _globals['_WRITERESULT_READONLYDISK']._serialized_end=1917
  _globals['_WRITERESULT_MISSINGDISK']._serialized_start=1919
  _globals['_WRITERESULT_MISSINGDISK']._serialized_end=1971
  _globals['_READARG']._serialized_start=1974
  _globals['_READARG']._serialized_end=2279
  _globals['_READRESULT']._serialized_start=2281
  _globals['_READRESULT']._serialized_end=2404
  _globals['_CLONEARG']._serialized_start=2407
  _globals['_CLONEARG']._serialized_end=2581
  _globals['_CLONERESULT']._serialized_start=2583
  _globals['_CLONERESULT']._serialized_end=2649
  _globals['_REMOVEEPOCHARG']._serialized_start=2652
  _globals['_REMOVEEPOCHARG']._serialized_end=2794
  _globals['_REMOVEEPOCHRESULT']._serialized_start=2796
  _globals['_REMOVEEPOCHRESULT']._serialized_end=2837
  _globals['_REMOVERANGESARG']._serialized_start=2840
  _globals['_REMOVERANGESARG']._serialized_end=3075
  _globals['_REMOVERANGESRESULT']._serialized_start=3077
  _globals['_REMOVERANGESRESULT']._serialized_end=3097
  _globals['_READINDEXARG']._serialized_start=3099
  _globals['_READINDEXARG']._serialized_end=3208
  _globals['_READINDEXRESULT']._serialized_start=3210
  _globals['_READINDEXRESULT']._serialized_end=3326
  _globals['_HYDRAUSAGEINFO']._serialized_start=3329
  _globals['_HYDRAUSAGEINFO']._serialized_end=3748
  _globals['_CLUSTERUSAGEINFO']._serialized_start=3750
  _globals['_CLUSTERUSAGEINFO']._serialized_end=3831
  _globals['_GETUSAGERESULT']._serialized_start=3833
  _globals['_GETUSAGERESULT']._serialized_end=3918
  _globals['_GETUSAGEARG']._serialized_start=3920
  _globals['_GETUSAGEARG']._serialized_end=4002
  _globals['_CHECKVALIDEPOCHARG']._serialized_start=4004
  _globals['_CHECKVALIDEPOCHARG']._serialized_end=4059
  _globals['_CHECKVALIDEPOCHRESULT']._serialized_start=4062
  _globals['_CHECKVALIDEPOCHRESULT']._serialized_end=4235
  _globals['_CHECKVALIDEPOCHRESULT_EPOCHVALIDITY']._serialized_start=4180
  _globals['_CHECKVALIDEPOCHRESULT_EPOCHVALIDITY']._serialized_end=4235
  _globals['_REPLICATEEPOCHARG']._serialized_start=4238
  _globals['_REPLICATEEPOCHARG']._serialized_end=4533
  _globals['_REPLICATEEPOCHARG_DISKTIER']._serialized_start=4503
  _globals['_REPLICATEEPOCHARG_DISKTIER']._serialized_end=4533
  _globals['_REPLICATEEPOCHRESULT']._serialized_start=4535
  _globals['_REPLICATEEPOCHRESULT']._serialized_end=4608
  _globals['_RPCSERVICE']._serialized_start=4611
  _globals['_RPCSERVICE']._serialized_end=5603
# @@protoc_insertion_point(module_scope)
