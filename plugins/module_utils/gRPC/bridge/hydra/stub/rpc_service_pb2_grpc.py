# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from bridge.hydra.stub import rpc_service_pb2 as bridge_dot_hydra_dot_stub_dot_rpc__service__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in bridge/hydra/stub/rpc_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RpcServiceStub(object):
    """The rpc service implemented by slaves.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Write = channel.unary_unary(
                '/cohesity.bridge.hydra.stub.RpcService/Write',
                request_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.WriteArg.SerializeToString,
                response_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.WriteResult.FromString,
                _registered_method=True)
        self.Read2 = channel.unary_unary(
                '/cohesity.bridge.hydra.stub.RpcService/Read2',
                request_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadArg.SerializeToString,
                response_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadResult.FromString,
                _registered_method=True)
        self.RemoveEpoch = channel.unary_unary(
                '/cohesity.bridge.hydra.stub.RpcService/RemoveEpoch',
                request_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveEpochArg.SerializeToString,
                response_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveEpochResult.FromString,
                _registered_method=True)
        self.RemoveRanges = channel.unary_unary(
                '/cohesity.bridge.hydra.stub.RpcService/RemoveRanges',
                request_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveRangesArg.SerializeToString,
                response_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveRangesResult.FromString,
                _registered_method=True)
        self.Clone = channel.unary_unary(
                '/cohesity.bridge.hydra.stub.RpcService/Clone',
                request_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CloneArg.SerializeToString,
                response_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CloneResult.FromString,
                _registered_method=True)
        self.GetUsage = channel.unary_unary(
                '/cohesity.bridge.hydra.stub.RpcService/GetUsage',
                request_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.GetUsageArg.SerializeToString,
                response_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.GetUsageResult.FromString,
                _registered_method=True)
        self.ReadIndex = channel.unary_unary(
                '/cohesity.bridge.hydra.stub.RpcService/ReadIndex',
                request_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadIndexArg.SerializeToString,
                response_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadIndexResult.FromString,
                _registered_method=True)
        self.CheckValidEpoch = channel.unary_unary(
                '/cohesity.bridge.hydra.stub.RpcService/CheckValidEpoch',
                request_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CheckValidEpochArg.SerializeToString,
                response_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CheckValidEpochResult.FromString,
                _registered_method=True)
        self.ReplicateEpoch = channel.unary_unary(
                '/cohesity.bridge.hydra.stub.RpcService/ReplicateEpoch',
                request_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReplicateEpochArg.SerializeToString,
                response_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReplicateEpochResult.FromString,
                _registered_method=True)


class RpcServiceServicer(object):
    """The rpc service implemented by slaves.
    """

    def Write(self, request, context):
        """Call to perform write operations on a single byte range.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read2(self, request, context):
        """Call to read data from data journal (multiple ranges).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveEpoch(self, request, context):
        """Call to remove a (blob,epoch).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveRanges(self, request, context):
        """Call to remove a bunch of ranges from the epoch.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Clone(self, request, context):
        """Call to clone a (blob, epoch) into new entries.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsage(self, request, context):
        """Call to get usage info for a node.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadIndex(self, request, context):
        """Call used to read metadata journal of a blob entry.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckValidEpoch(self, request, context):
        """Call used to check if an epoch is valid.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicateEpoch(self, request, context):
        """Call used to replicate an epoch.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Write': grpc.unary_unary_rpc_method_handler(
                    servicer.Write,
                    request_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.WriteArg.FromString,
                    response_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.WriteResult.SerializeToString,
            ),
            'Read2': grpc.unary_unary_rpc_method_handler(
                    servicer.Read2,
                    request_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadArg.FromString,
                    response_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadResult.SerializeToString,
            ),
            'RemoveEpoch': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveEpoch,
                    request_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveEpochArg.FromString,
                    response_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveEpochResult.SerializeToString,
            ),
            'RemoveRanges': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveRanges,
                    request_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveRangesArg.FromString,
                    response_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveRangesResult.SerializeToString,
            ),
            'Clone': grpc.unary_unary_rpc_method_handler(
                    servicer.Clone,
                    request_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CloneArg.FromString,
                    response_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CloneResult.SerializeToString,
            ),
            'GetUsage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsage,
                    request_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.GetUsageArg.FromString,
                    response_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.GetUsageResult.SerializeToString,
            ),
            'ReadIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadIndex,
                    request_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadIndexArg.FromString,
                    response_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadIndexResult.SerializeToString,
            ),
            'CheckValidEpoch': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckValidEpoch,
                    request_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CheckValidEpochArg.FromString,
                    response_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CheckValidEpochResult.SerializeToString,
            ),
            'ReplicateEpoch': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicateEpoch,
                    request_deserializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReplicateEpochArg.FromString,
                    response_serializer=bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReplicateEpochResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.bridge.hydra.stub.RpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.bridge.hydra.stub.RpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RpcService(object):
    """The rpc service implemented by slaves.
    """

    @staticmethod
    def Write(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.hydra.stub.RpcService/Write',
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.WriteArg.SerializeToString,
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.WriteResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Read2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.hydra.stub.RpcService/Read2',
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadArg.SerializeToString,
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveEpoch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.hydra.stub.RpcService/RemoveEpoch',
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveEpochArg.SerializeToString,
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveEpochResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveRanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.hydra.stub.RpcService/RemoveRanges',
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveRangesArg.SerializeToString,
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.RemoveRangesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Clone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.hydra.stub.RpcService/Clone',
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CloneArg.SerializeToString,
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CloneResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUsage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.hydra.stub.RpcService/GetUsage',
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.GetUsageArg.SerializeToString,
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.GetUsageResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.hydra.stub.RpcService/ReadIndex',
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadIndexArg.SerializeToString,
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReadIndexResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckValidEpoch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.hydra.stub.RpcService/CheckValidEpoch',
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CheckValidEpochArg.SerializeToString,
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.CheckValidEpochResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReplicateEpoch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.hydra.stub.RpcService/ReplicateEpoch',
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReplicateEpochArg.SerializeToString,
            bridge_dot_hydra_dot_stub_dot_rpc__service__pb2.ReplicateEpochResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
