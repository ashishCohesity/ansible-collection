# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bridge/magneto/vmware/vmware_actions.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from atom.base import event_pb2 as atom_dot_base_dot_event__pb2
from bridge.magneto.base import magneto_actions_pb2 as bridge_dot_magneto_dot_base_dot_magneto__actions__pb2
from configs import cluster_config_pb2 as configs_dot_cluster__config__pb2
from yoda.base import yoda_types_pb2 as yoda_dot_base_dot_yoda__types__pb2
from magneto.base.entities import vmware_pb2 as magneto_dot_base_dot_entities_dot_vmware__pb2
from magneto.base.entities import vmware_common_pb2 as magneto_dot_base_dot_entities_dot_vmware__common__pb2
from magneto.base import magneto_pb2 as magneto_dot_base_dot_magneto__pb2
try:
  magneto_dot_base_dot_env__params__pb2 = magneto_dot_base_dot_magneto__pb2.magneto_dot_base_dot_env__params__pb2
except AttributeError:
  magneto_dot_base_dot_env__params__pb2 = magneto_dot_base_dot_magneto__pb2.magneto.base.env_params_pb2
from magneto.base import san_pb2 as magneto_dot_base_dot_san__pb2
from magneto.connectors.vmware import vmware_pb2 as magneto_dot_connectors_dot_vmware_dot_vmware__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n*bridge/magneto/vmware/vmware_actions.proto\x12\x1e\x63ohesity.bridge.magneto.vmware\x1a\x15\x61tom/base/event.proto\x1a)bridge/magneto/base/magneto_actions.proto\x1a\x1c\x63onfigs/cluster_config.proto\x1a\x1ayoda/base/yoda_types.proto\x1a\"magneto/base/entities/vmware.proto\x1a)magneto/base/entities/vmware_common.proto\x1a\x1amagneto/base/magneto.proto\x1a\x16magneto/base/san.proto\x1a&magneto/connectors/vmware/vmware.proto\"\xc2\n\n\x0b\x42\x61\x63kupVMArg\x12\x34\n\x04\x62\x61se\x18\x01 \x01(\x0b\x32&.cohesity.bridge.magneto.BackupBaseArg\x12>\n\x04type\x18\x02 \x01(\x0e\x32\x30.cohesity.bridge.magneto.vmware.BackupVMArg.Type\x12\x34\n\x0broot_entity\x18\x03 \x01(\x0b\x32\x1f.cohesity.magneto.vmware.Entity\x12\x32\n\tvm_entity\x18\x04 \x01(\x0b\x32\x1f.cohesity.magneto.vmware.Entity\x12\x36\n\rtmp_vm_entity\x18\x08 \x01(\x0b\x32\x1f.cohesity.magneto.vmware.Entity\x12\x36\n\x0esnapshot_moref\x18\x05 \x01(\x0b\x32\x1e.cohesity.magneto.vmware.MORef\x12\x15\n\rxml_vm_config\x18\x06 \x01(\x0c\x12\x41\n\x10sparse_vm_config\x18\x07 \x01(\x0b\x32\'.cohesity.magneto.vmware.SparseVMConfig\x12\x41\n\tvapp_info\x18\t \x01(\x0b\x32..cohesity.magneto.BackupTaskStateVappInfoProto\x12j\n\x1cquery_allocated_vm_disk_info\x18\n \x01(\x0b\x32\x44.cohesity.bridge.magneto.vmware.BackupVMArg.QueryAllocatedVMDiskInfo\x12W\n\x14vm_disk_lun_info_vec\x18\x0b \x03(\x0b\x32\x39.cohesity.bridge.magneto.vmware.BackupVMArg.VMDiskLunInfo\x12\x19\n\x11use_san_transport\x18\x0c \x01(\x08\x12\x1c\n\x14use_fc_san_transport\x18\r \x01(\x08\x12-\n\x1f\x61llow_nbdssl_transport_fallback\x18\x0e \x01(\x08:\x04true\x12)\n\x1askip_write_descriptor_file\x18\x0f \x01(\x08:\x05\x66\x61lse\x12\x1d\n\x15include_vm_nvram_file\x18\x10 \x01(\x08\x12\x17\n\x0f\x64\x61tacenter_name\x18\x11 \x01(\t\x12(\n leverage_san_storage_snapshot_v2\x18\x12 \x01(\x08\x12\'\n\x1fprocesss_vm_storage_snapshot_v2\x18\x13 \x01(\x08\x1al\n\x18QueryAllocatedVMDiskInfo\x12\x11\n\tdisk_name\x18\x01 \x01(\t\x12\x15\n\rdisk_capacity\x18\x02 \x01(\x03\x12\x12\n\ndisk_index\x18\x03 \x01(\x05\x12\x12\n\nchunk_size\x18\x04 \x01(\x05\x1a_\n\rVMDiskLunInfo\x12\x33\n\x0csan_port_vec\x18\x0b \x03(\x0b\x32\x1d.cohesity.magneto.san.SanPort\x12\x19\n\x11lun_serial_number\x18\x0c \x01(\t\"\x93\x01\n\x04Type\x12\x14\n\x10kPrepareVMBackup\x10\x01\x12\x11\n\rkSetupVMFiles\x10\x02\x12\x19\n\x15kQueryAllocatedVMDisk\x10\x06\x12\x11\n\rkBackupVMDisk\x10\x03\x12\x10\n\x0ckCloseVMDisk\x10\x04\x12\x10\n\x0ckEndVMBackup\x10\x05\x12\x10\n\x0ckEndVMAccess\x10\x07\"}\n\x17PushFilesToDatastoreArg\x12\x15\n\rfile_path_vec\x18\x01 \x03(\t\x12\x16\n\x0e\x64\x61tastore_name\x18\x02 \x01(\t\x12\x17\n\x0f\x64\x61tacenter_name\x18\x03 \x01(\t\x12\x1a\n\x12target_folder_path\x18\x04 \x01(\t\"\xfb\x13\n\rRestoreVMsArg\x12@\n\x04type\x18\x01 \x01(\x0e\x32\x32.cohesity.bridge.magneto.vmware.RestoreVMsArg.Type\x12U\n\x10vm_restore_infos\x18\x02 \x03(\x0b\x32;.cohesity.bridge.magneto.vmware.RestoreVMsArg.VMRestoreInfo\x12\x13\n\x0bview_box_id\x18\x03 \x01(\x03\x12\x11\n\tview_name\x18\x04 \x01(\t\x12\x13\n\x0b\x63reate_view\x18\x05 \x01(\x08\x12\x1f\n\x10is_internal_view\x18\x07 \x01(\x08:\x05\x66\x61lse\x12\x13\n\x0bpath_prefix\x18\x06 \x01(\t\x12/\n\'generate_random_disk_uuid_for_all_disks\x18\x08 \x01(\x08\x12&\n\x1eview_whitelist_ip_addr_str_vec\x18\t \x03(\t\x12Q\n\x1cview_whitelist_ip_ranges_vec\x18\x0c \x03(\x0b\x32+.cohesity.configs.ClusterConfigProto.Subnet\x12(\n\x19\x66orce_include_vmdk_suffix\x18\n \x01(\x08:\x05\x66\x61lse\x12\x80\x01\n$generate_random_disk_uuid_update_map\x18\x0b \x03(\x0b\x32R.cohesity.bridge.magneto.vmware.RestoreVMsArg.GenerateRandomDiskUuidUpdateMapEntry\x12 \n\x11include_vm_config\x18\r \x01(\x08:\x05\x66\x61lse\x12\x11\n\troot_path\x18\x0e \x01(\t\x12(\n\x19skip_clone_flat_vmdk_file\x18\x0f \x01(\x08:\x05\x66\x61lse\x12,\n\x1dskip_clone_virtual_disk_files\x18\x10 \x01(\x08:\x05\x66\x61lse\x12/\n skip_clone_and_rename_vmdk_files\x18\x11 \x01(\x08:\x05\x66\x61lse\x12!\n\x12include_xml_config\x18\x12 \x01(\x08:\x05\x66\x61lse\x12\x19\n\x11use_san_transport\x18\x13 \x01(\x08\x12-\n\x1f\x61llow_nbdssl_transport_fallback\x18\x14 \x01(\x08:\x04true\x12$\n\x15include_vm_nvram_file\x18\x15 \x01(\x08:\x05\x66\x61lse\x12\\\n\x1bpush_files_to_datastore_arg\x18\x16 \x01(\x0b\x32\x37.cohesity.bridge.magneto.vmware.PushFilesToDatastoreArg\x1a\x83\n\n\rVMRestoreInfo\x12\x11\n\tview_name\x18\x04 \x01(\t\x12\"\n\x1asnapshot_relative_dir_path\x18\x01 \x01(\t\x12\x32\n\tvm_entity\x18\x02 \x01(\x0b\x32\x1f.cohesity.magneto.vmware.Entity\x12\x34\n\x0broot_entity\x18\x03 \x01(\x0b\x32\x1f.cohesity.magneto.vmware.Entity\x12z\n\x1f\x64ynamic_disk_volumes_to_convert\x18\x05 \x03(\x0b\x32Q.cohesity.bridge.magneto.vmware.RestoreVMsArg.VMRestoreInfo.VMDKDynamicDiskVolume\x12$\n\x15update_disk_unique_id\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x1e\n\x0f\x66\x65tch_vapp_info\x18\x07 \x01(\x08:\x05\x66\x61lse\x12\x35\n\x04\x62\x61se\x18\x08 \x01(\x0b\x32\'.cohesity.bridge.magneto.RestoreBaseArg\x12\x38\n\x10\x63reated_vm_moref\x18\t \x01(\x0b\x32\x1e.cohesity.magneto.vmware.MORef\x12\x36\n\x0esnapshot_moref\x18\n \x01(\x0b\x32\x1e.cohesity.magneto.vmware.MORef\x12\x1e\n\x16\x61llow_zero_filled_data\x18\x0b \x01(\x08\x12`\n\x0elog_apply_info\x18\x0c \x01(\x0b\x32H.cohesity.bridge.magneto.vmware.RestoreVMsArg.VMRestoreInfo.LogApplyInfo\x12\"\n\x13include_vapp_config\x18\r \x01(\x08:\x05\x66\x61lse\x12\"\n\x13\x66\x65tch_vapp_xml_info\x18\x0e \x01(\x08:\x05\x66\x61lse\x1a\xd9\x02\n\x15VMDKDynamicDiskVolume\x12\x16\n\x0e\x64isk_file_name\x18\x01 \x01(\t\x12r\n\rpartition_vec\x18\x02 \x03(\x0b\x32[.cohesity.bridge.magneto.vmware.RestoreVMsArg.VMRestoreInfo.VMDKDynamicDiskVolume.Partition\x1a\xb3\x01\n\tPartition\x12K\n\x0epartition_type\x18\x01 \x01(\x0e\x32\x33.cohesity.yoda.base.DiskPartitionType.PartitionType\x12\x1b\n\x13volume_start_offset\x18\x02 \x01(\x03\x12\x19\n\x11volume_size_bytes\x18\x03 \x01(\x03\x12!\n\x19logical_sector_size_bytes\x18\x04 \x01(\x03\x1a\xbf\x01\n\x0cLogApplyInfo\x12\x15\n\rlog_file_path\x18\x01 \x01(\t\x12\x32\n\x10start_seq_number\x18\x02 \x01(\x0b\x32\x18.cohesity.atom.Sequencer\x12\x30\n\x0e\x65nd_seq_number\x18\x03 \x01(\x0b\x32\x18.cohesity.atom.Sequencer\x12\x16\n\x0e\x65nd_time_usecs\x18\x04 \x01(\x03\x12\x1a\n\x12is_journal_sharded\x18\x05 \x01(\x08\x1a\x46\n$GenerateRandomDiskUuidUpdateMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\"\x87\x01\n\x04Type\x12\r\n\tkCloneVMs\x10\x01\x12\x11\n\rkFetchVMsInfo\x10\x02\x12\x12\n\x0ekRestoreVMDisk\x10\x04\x12\x0f\n\x0bkEndSubTask\x10\x05\x12\x0e\n\nkDeleteVMs\x10\x03\x12\r\n\tkLogApply\x10\x06\x12\x19\n\x15kPushFilesToDatastore\x10\x07\"\xfc\x03\n\x0fVMwareActionArg\x12\x0f\n\x07task_id\x18\x01 \x01(\x03\x12\x17\n\x0bsub_task_id\x18\x05 \x01(\x03:\x02-1\x12\x42\n\rbackup_vm_arg\x18\x02 \x01(\x0b\x32+.cohesity.bridge.magneto.vmware.BackupVMArg\x12\x46\n\x0frestore_vms_arg\x18\x03 \x01(\x0b\x32-.cohesity.bridge.magneto.vmware.RestoreVMsArg\x12?\n\x0f\x63\x61ncel_task_arg\x18\x04 \x01(\x0b\x32&.cohesity.bridge.magneto.CancelTaskArg\x12\x1f\n\x10is_using_bifrost\x18\x06 \x01(\x08:\x05\x66\x61lse\x12Z\n\x19nbdssl_compression_scheme\x18\x07 \x01(\x0e\x32\x30.cohesity.magneto.vmware.NbdsslCompressionScheme:\x05kNone2u\n\x11vmware_action_arg\x12).cohesity.bridge.magneto.ExecuteActionArg\x18\x64 \x01(\x0b\x32/.cohesity.bridge.magneto.vmware.VMwareActionArg')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'bridge.magneto.vmware.vmware_actions_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_RESTOREVMSARG_GENERATERANDOMDISKUUIDUPDATEMAPENTRY']._loaded_options = None
  _globals['_RESTOREVMSARG_GENERATERANDOMDISKUUIDUPDATEMAPENTRY']._serialized_options = b'8\001'
  _globals['_BACKUPVMARG']._serialized_start=374
  _globals['_BACKUPVMARG']._serialized_end=1720
  _globals['_BACKUPVMARG_QUERYALLOCATEDVMDISKINFO']._serialized_start=1365
  _globals['_BACKUPVMARG_QUERYALLOCATEDVMDISKINFO']._serialized_end=1473
  _globals['_BACKUPVMARG_VMDISKLUNINFO']._serialized_start=1475
  _globals['_BACKUPVMARG_VMDISKLUNINFO']._serialized_end=1570
  _globals['_BACKUPVMARG_TYPE']._serialized_start=1573
  _globals['_BACKUPVMARG_TYPE']._serialized_end=1720
  _globals['_PUSHFILESTODATASTOREARG']._serialized_start=1722
  _globals['_PUSHFILESTODATASTOREARG']._serialized_end=1847
  _globals['_RESTOREVMSARG']._serialized_start=1850
  _globals['_RESTOREVMSARG']._serialized_end=4405
  _globals['_RESTOREVMSARG_VMRESTOREINFO']._serialized_start=2912
  _globals['_RESTOREVMSARG_VMRESTOREINFO']._serialized_end=4195
  _globals['_RESTOREVMSARG_VMRESTOREINFO_VMDKDYNAMICDISKVOLUME']._serialized_start=3656
  _globals['_RESTOREVMSARG_VMRESTOREINFO_VMDKDYNAMICDISKVOLUME']._serialized_end=4001
  _globals['_RESTOREVMSARG_VMRESTOREINFO_VMDKDYNAMICDISKVOLUME_PARTITION']._serialized_start=3822
  _globals['_RESTOREVMSARG_VMRESTOREINFO_VMDKDYNAMICDISKVOLUME_PARTITION']._serialized_end=4001
  _globals['_RESTOREVMSARG_VMRESTOREINFO_LOGAPPLYINFO']._serialized_start=4004
  _globals['_RESTOREVMSARG_VMRESTOREINFO_LOGAPPLYINFO']._serialized_end=4195
  _globals['_RESTOREVMSARG_GENERATERANDOMDISKUUIDUPDATEMAPENTRY']._serialized_start=4197
  _globals['_RESTOREVMSARG_GENERATERANDOMDISKUUIDUPDATEMAPENTRY']._serialized_end=4267
  _globals['_RESTOREVMSARG_TYPE']._serialized_start=4270
  _globals['_RESTOREVMSARG_TYPE']._serialized_end=4405
  _globals['_VMWAREACTIONARG']._serialized_start=4408
  _globals['_VMWAREACTIONARG']._serialized_end=4916
# @@protoc_insertion_point(module_scope)
