# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from bridge.snap_fs.stub import rpc_service_pb2 as bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in bridge/snap_fs/stub/rpc_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RpcServiceStub(object):
    """-----------------------------------------------------------------------------

    RPC service used by SnapFS.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Write = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/Write',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.WriteArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.WriteResult.FromString,
                _registered_method=True)
        self.Read = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/Read',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReadArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReadResult.FromString,
                _registered_method=True)
        self.FindBlobBrickSnapTreeIds = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/FindBlobBrickSnapTreeIds',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindBlobBrickSnapTreeIdsArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindBlobBrickSnapTreeIdsResult.FromString,
                _registered_method=True)
        self.LookupMegaFileSubfiles = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/LookupMegaFileSubfiles',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupMegaFileSubfilesArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupMegaFileSubfilesResult.FromString,
                _registered_method=True)
        self.DedupRead = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/DedupRead',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupReadArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupReadResult.FromString,
                _registered_method=True)
        self.LookupViewSnapTreeNodes = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/LookupViewSnapTreeNodes',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupViewSnapTreeNodesArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupViewSnapTreeNodesResult.FromString,
                _registered_method=True)
        self.Rmdir = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/Rmdir',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RmdirArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RmdirResult.FromString,
                _registered_method=True)
        self.CloneFile = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/CloneFile',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneFileArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneFileResult.FromString,
                _registered_method=True)
        self.LookupInodeMetadata = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/LookupInodeMetadata',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupInodeMetadataArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupInodeMetadataResult.FromString,
                _registered_method=True)
        self.LookupPath = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/LookupPath',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPathArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPathResult.FromString,
                _registered_method=True)
        self.LookupDedupParams = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/LookupDedupParams',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDedupParamsArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDedupParamsResult.FromString,
                _registered_method=True)
        self.LookupDirEntry = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/LookupDirEntry',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirEntryArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirEntryResult.FromString,
                _registered_method=True)
        self.LookupDirectoryEntryName = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/LookupDirectoryEntryName',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirectoryEntryNameArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirectoryEntryNameResult.FromString,
                _registered_method=True)
        self.ReverseNameLookup = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/ReverseNameLookup',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupResult.FromString,
                _registered_method=True)
        self.ReverseNameLookupAllPaths = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/ReverseNameLookupAllPaths',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupAllPathsArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupAllPathsResult.FromString,
                _registered_method=True)
        self.CreateFile = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/CreateFile',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateFileArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateFileResult.FromString,
                _registered_method=True)
        self.CreateMegaFile = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/CreateMegaFile',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateMegaFileArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateMegaFileResult.FromString,
                _registered_method=True)
        self.CloneToMegaFile = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/CloneToMegaFile',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneToMegaFileArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneToMegaFileResult.FromString,
                _registered_method=True)
        self.CloneDirectory = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/CloneDirectory',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryResult.FromString,
                _registered_method=True)
        self.CloneDirectoryRecursive = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/CloneDirectoryRecursive',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryRecursiveArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryRecursiveResult.FromString,
                _registered_method=True)
        self.CreateEntity = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/CreateEntity',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateEntityArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateEntityResult.FromString,
                _registered_method=True)
        self.CreateRemoveEntitiesBatch = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/CreateRemoveEntitiesBatch',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateRemoveEntitiesBatchArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateRemoveEntitiesBatchResult.FromString,
                _registered_method=True)
        self.RemoveFile = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/RemoveFile',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveFileArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveFileResult.FromString,
                _registered_method=True)
        self.RemoveEntity = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/RemoveEntity',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveEntityArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveEntityResult.FromString,
                _registered_method=True)
        self.UnlinkDirectory = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/UnlinkDirectory',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UnlinkDirectoryArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UnlinkDirectoryResult.FromString,
                _registered_method=True)
        self.Link = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/Link',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LinkArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LinkResult.FromString,
                _registered_method=True)
        self.Setattr = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/Setattr',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.SetattrArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.SetattrResult.FromString,
                _registered_method=True)
        self.Readdir = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/Readdir',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReaddirArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReaddirResult.FromString,
                _registered_method=True)
        self.Rename = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/Rename',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RenameArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RenameResult.FromString,
                _registered_method=True)
        self.CloneBytes = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/CloneBytes',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneBytesArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneBytesResult.FromString,
                _registered_method=True)
        self.DedupWrite = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/DedupWrite',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupWriteArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupWriteResult.FromString,
                _registered_method=True)
        self.FindKnownIdenticalRanges = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/FindKnownIdenticalRanges',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindKnownIdenticalRangesArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindKnownIdenticalRangesResult.FromString,
                _registered_method=True)
        self.FixEntityHandle = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/FixEntityHandle',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FixEntityHandleArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FixEntityHandleResult.FromString,
                _registered_method=True)
        self.FetchViewSnapTreeValues = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/FetchViewSnapTreeValues',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSnapTreeValuesArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSnapTreeValuesResult.FromString,
                _registered_method=True)
        self.FetchViewSearchKeys = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/FetchViewSearchKeys',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSearchKeysArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSearchKeysResult.FromString,
                _registered_method=True)
        self.TrackEntityHandleReadIO = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/TrackEntityHandleReadIO',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.TrackEntityHandleReadIOArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.TrackEntityHandleReadIOResult.FromString,
                _registered_method=True)
        self.UntrackEntityHandleReadIO = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/UntrackEntityHandleReadIO',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UntrackEntityHandleReadIOArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UntrackEntityHandleReadIOResult.FromString,
                _registered_method=True)
        self.GetNonPersistentTrackedIOTraces = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/GetNonPersistentTrackedIOTraces',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetNonPersistentTrackedIOTracesArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetNonPersistentTrackedIOTracesResult.FromString,
                _registered_method=True)
        self.AddNonPersistentIOTracesToPredictor = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/AddNonPersistentIOTracesToPredictor',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.AddNonPersistentIOTracesToPredictorArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.AddNonPersistentIOTracesToPredictorResult.FromString,
                _registered_method=True)
        self.LookupNASUptierTable = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/LookupNASUptierTable',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupNASUptierTableArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupNASUptierTableResult.FromString,
                _registered_method=True)
        self.GetCloudChunkFilesForExternalWrite = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/GetCloudChunkFilesForExternalWrite',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetCloudChunkFilesForExternalWriteArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetCloudChunkFilesForExternalWriteResult.FromString,
                _registered_method=True)
        self.ReleaseCloudChunkFileExternalWritePerm = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/ReleaseCloudChunkFileExternalWritePerm',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReleaseCloudChunkFileExternalWritePermArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReleaseCloudChunkFileExternalWritePermResult.FromString,
                _registered_method=True)
        self.LookupPreferredIOParams = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/LookupPreferredIOParams',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPreferredIOParamsArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPreferredIOParamsResult.FromString,
                _registered_method=True)
        self.InitOrClearDirectoryChangelog = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/InitOrClearDirectoryChangelog',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.InitOrClearDirectoryChangelogArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.InitOrClearDirectoryChangelogResult.FromString,
                _registered_method=True)
        self.BulkDeleteSnapTreeKeys = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/BulkDeleteSnapTreeKeys',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BulkDeleteSnapTreeKeysArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BulkDeleteSnapTreeKeysResult.FromString,
                _registered_method=True)
        self.BatchMinionDedupWrite = channel.unary_unary(
                '/cohesity.bridge.snap_fs.stub.RpcService/BatchMinionDedupWrite',
                request_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BatchMinionDedupWriteArg.SerializeToString,
                response_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BatchMinionDedupWriteResult.FromString,
                _registered_method=True)


class RpcServiceServicer(object):
    """-----------------------------------------------------------------------------

    RPC service used by SnapFS.
    """

    def Write(self, request, context):
        """Writes data to a SnapFS entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read(self, request, context):
        """Reads data from a SnapFS entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindBlobBrickSnapTreeIds(self, request, context):
        """Finds out the snap tree ids of bricks in a blob range.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupMegaFileSubfiles(self, request, context):
        """Lookup entity ID and size of all the subfiles of a megafile.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DedupRead(self, request, context):
        """Reads extent information or dedup chunks from a blob range.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupViewSnapTreeNodes(self, request, context):
        """Looks up nodes in view snaptree in post-order.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rmdir(self, request, context):
        """Remove a directory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloneFile(self, request, context):
        """Clone a file to given file name in the given directory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupInodeMetadata(self, request, context):
        """Lookup inode metadata for given node.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupPath(self, request, context):
        """Lookup given path and return entity handle.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupDedupParams(self, request, context):
        """Lookup dedup params.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupDirEntry(self, request, context):
        """Lookup an entry in given directory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupDirectoryEntryName(self, request, context):
        """Lookup entity name and parent entity handle.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReverseNameLookup(self, request, context):
        """Lookup path for the specified entity
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReverseNameLookupAllPaths(self, request, context):
        """Lookup all the paths for the specified entity
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFile(self, request, context):
        """Create a file in given dir.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMegaFile(self, request, context):
        """Create a megafile in given dir.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloneToMegaFile(self, request, context):
        """Clone existing files to a megafile in given dir.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloneDirectory(self, request, context):
        """Clone all the files in given directory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloneDirectoryRecursive(self, request, context):
        """Clone given directory recursively.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEntity(self, request, context):
        """Create a node or directory or symlink.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRemoveEntitiesBatch(self, request, context):
        """Creates and removes multiple child entities in a batch under directory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveFile(self, request, context):
        """Remove a file given name from parent directory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveEntity(self, request, context):
        """Remove an entity given name from parent directory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlinkDirectory(self, request, context):
        """Unlink a directory from parent dir_eh.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Link(self, request, context):
        """Create a hard link for given filename.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Setattr(self, request, context):
        """Set the attributes for given entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Readdir(self, request, context):
        """Read the directory given entity handle.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rename(self, request, context):
        """Rename the given entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloneBytes(self, request, context):
        """Clone bytes from src entity to dst entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DedupWrite(self, request, context):
        """Perform Dedup writes for the given range.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindKnownIdenticalRanges(self, request, context):
        """Find ranges in first entity that are common to to second entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FixEntityHandle(self, request, context):
        """Fix given entity handle.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchViewSnapTreeValues(self, request, context):
        """Fetch the values from a view snap tree.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchViewSearchKeys(self, request, context):
        """Fetch keys stored in snap tree.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrackEntityHandleReadIO(self, request, context):
        """Track read IOs on a vector of entity handles.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UntrackEntityHandleReadIO(self, request, context):
        """Untrack read IOs on an entity handle.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNonPersistentTrackedIOTraces(self, request, context):
        """Get IO traces corresponding to a given entity handle.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddNonPersistentIOTracesToPredictor(self, request, context):
        """Add the recorded IO traces to the prediction engine.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupNASUptierTable(self, request, context):
        """Lookup NAS uptier table for the given entities.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCloudChunkFilesForExternalWrite(self, request, context):
        """Get cloud objects for the given cloud domain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseCloudChunkFileExternalWritePerm(self, request, context):
        """Finalize the given cloud objects.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupPreferredIOParams(self, request, context):
        """Lookup preferred io params.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitOrClearDirectoryChangelog(self, request, context):
        """InitOrClearDirChangelog for a  given entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkDeleteSnapTreeKeys(self, request, context):
        """Deletes a batch of keys from a view's snaptree.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchMinionDedupWrite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Write': grpc.unary_unary_rpc_method_handler(
                    servicer.Write,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.WriteArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.WriteResult.SerializeToString,
            ),
            'Read': grpc.unary_unary_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReadArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReadResult.SerializeToString,
            ),
            'FindBlobBrickSnapTreeIds': grpc.unary_unary_rpc_method_handler(
                    servicer.FindBlobBrickSnapTreeIds,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindBlobBrickSnapTreeIdsArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindBlobBrickSnapTreeIdsResult.SerializeToString,
            ),
            'LookupMegaFileSubfiles': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupMegaFileSubfiles,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupMegaFileSubfilesArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupMegaFileSubfilesResult.SerializeToString,
            ),
            'DedupRead': grpc.unary_unary_rpc_method_handler(
                    servicer.DedupRead,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupReadArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupReadResult.SerializeToString,
            ),
            'LookupViewSnapTreeNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupViewSnapTreeNodes,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupViewSnapTreeNodesArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupViewSnapTreeNodesResult.SerializeToString,
            ),
            'Rmdir': grpc.unary_unary_rpc_method_handler(
                    servicer.Rmdir,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RmdirArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RmdirResult.SerializeToString,
            ),
            'CloneFile': grpc.unary_unary_rpc_method_handler(
                    servicer.CloneFile,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneFileArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneFileResult.SerializeToString,
            ),
            'LookupInodeMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupInodeMetadata,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupInodeMetadataArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupInodeMetadataResult.SerializeToString,
            ),
            'LookupPath': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupPath,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPathArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPathResult.SerializeToString,
            ),
            'LookupDedupParams': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupDedupParams,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDedupParamsArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDedupParamsResult.SerializeToString,
            ),
            'LookupDirEntry': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupDirEntry,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirEntryArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirEntryResult.SerializeToString,
            ),
            'LookupDirectoryEntryName': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupDirectoryEntryName,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirectoryEntryNameArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirectoryEntryNameResult.SerializeToString,
            ),
            'ReverseNameLookup': grpc.unary_unary_rpc_method_handler(
                    servicer.ReverseNameLookup,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupResult.SerializeToString,
            ),
            'ReverseNameLookupAllPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.ReverseNameLookupAllPaths,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupAllPathsArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupAllPathsResult.SerializeToString,
            ),
            'CreateFile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFile,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateFileArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateFileResult.SerializeToString,
            ),
            'CreateMegaFile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMegaFile,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateMegaFileArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateMegaFileResult.SerializeToString,
            ),
            'CloneToMegaFile': grpc.unary_unary_rpc_method_handler(
                    servicer.CloneToMegaFile,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneToMegaFileArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneToMegaFileResult.SerializeToString,
            ),
            'CloneDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.CloneDirectory,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryResult.SerializeToString,
            ),
            'CloneDirectoryRecursive': grpc.unary_unary_rpc_method_handler(
                    servicer.CloneDirectoryRecursive,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryRecursiveArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryRecursiveResult.SerializeToString,
            ),
            'CreateEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEntity,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateEntityArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateEntityResult.SerializeToString,
            ),
            'CreateRemoveEntitiesBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRemoveEntitiesBatch,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateRemoveEntitiesBatchArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateRemoveEntitiesBatchResult.SerializeToString,
            ),
            'RemoveFile': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveFile,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveFileArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveFileResult.SerializeToString,
            ),
            'RemoveEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveEntity,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveEntityArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveEntityResult.SerializeToString,
            ),
            'UnlinkDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlinkDirectory,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UnlinkDirectoryArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UnlinkDirectoryResult.SerializeToString,
            ),
            'Link': grpc.unary_unary_rpc_method_handler(
                    servicer.Link,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LinkArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LinkResult.SerializeToString,
            ),
            'Setattr': grpc.unary_unary_rpc_method_handler(
                    servicer.Setattr,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.SetattrArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.SetattrResult.SerializeToString,
            ),
            'Readdir': grpc.unary_unary_rpc_method_handler(
                    servicer.Readdir,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReaddirArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReaddirResult.SerializeToString,
            ),
            'Rename': grpc.unary_unary_rpc_method_handler(
                    servicer.Rename,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RenameArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RenameResult.SerializeToString,
            ),
            'CloneBytes': grpc.unary_unary_rpc_method_handler(
                    servicer.CloneBytes,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneBytesArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneBytesResult.SerializeToString,
            ),
            'DedupWrite': grpc.unary_unary_rpc_method_handler(
                    servicer.DedupWrite,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupWriteArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupWriteResult.SerializeToString,
            ),
            'FindKnownIdenticalRanges': grpc.unary_unary_rpc_method_handler(
                    servicer.FindKnownIdenticalRanges,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindKnownIdenticalRangesArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindKnownIdenticalRangesResult.SerializeToString,
            ),
            'FixEntityHandle': grpc.unary_unary_rpc_method_handler(
                    servicer.FixEntityHandle,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FixEntityHandleArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FixEntityHandleResult.SerializeToString,
            ),
            'FetchViewSnapTreeValues': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchViewSnapTreeValues,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSnapTreeValuesArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSnapTreeValuesResult.SerializeToString,
            ),
            'FetchViewSearchKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchViewSearchKeys,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSearchKeysArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSearchKeysResult.SerializeToString,
            ),
            'TrackEntityHandleReadIO': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackEntityHandleReadIO,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.TrackEntityHandleReadIOArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.TrackEntityHandleReadIOResult.SerializeToString,
            ),
            'UntrackEntityHandleReadIO': grpc.unary_unary_rpc_method_handler(
                    servicer.UntrackEntityHandleReadIO,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UntrackEntityHandleReadIOArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UntrackEntityHandleReadIOResult.SerializeToString,
            ),
            'GetNonPersistentTrackedIOTraces': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNonPersistentTrackedIOTraces,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetNonPersistentTrackedIOTracesArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetNonPersistentTrackedIOTracesResult.SerializeToString,
            ),
            'AddNonPersistentIOTracesToPredictor': grpc.unary_unary_rpc_method_handler(
                    servicer.AddNonPersistentIOTracesToPredictor,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.AddNonPersistentIOTracesToPredictorArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.AddNonPersistentIOTracesToPredictorResult.SerializeToString,
            ),
            'LookupNASUptierTable': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupNASUptierTable,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupNASUptierTableArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupNASUptierTableResult.SerializeToString,
            ),
            'GetCloudChunkFilesForExternalWrite': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCloudChunkFilesForExternalWrite,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetCloudChunkFilesForExternalWriteArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetCloudChunkFilesForExternalWriteResult.SerializeToString,
            ),
            'ReleaseCloudChunkFileExternalWritePerm': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseCloudChunkFileExternalWritePerm,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReleaseCloudChunkFileExternalWritePermArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReleaseCloudChunkFileExternalWritePermResult.SerializeToString,
            ),
            'LookupPreferredIOParams': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupPreferredIOParams,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPreferredIOParamsArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPreferredIOParamsResult.SerializeToString,
            ),
            'InitOrClearDirectoryChangelog': grpc.unary_unary_rpc_method_handler(
                    servicer.InitOrClearDirectoryChangelog,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.InitOrClearDirectoryChangelogArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.InitOrClearDirectoryChangelogResult.SerializeToString,
            ),
            'BulkDeleteSnapTreeKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkDeleteSnapTreeKeys,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BulkDeleteSnapTreeKeysArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BulkDeleteSnapTreeKeysResult.SerializeToString,
            ),
            'BatchMinionDedupWrite': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchMinionDedupWrite,
                    request_deserializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BatchMinionDedupWriteArg.FromString,
                    response_serializer=bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BatchMinionDedupWriteResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.bridge.snap_fs.stub.RpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.bridge.snap_fs.stub.RpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RpcService(object):
    """-----------------------------------------------------------------------------

    RPC service used by SnapFS.
    """

    @staticmethod
    def Write(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/Write',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.WriteArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.WriteResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/Read',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReadArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReadResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FindBlobBrickSnapTreeIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/FindBlobBrickSnapTreeIds',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindBlobBrickSnapTreeIdsArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindBlobBrickSnapTreeIdsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupMegaFileSubfiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/LookupMegaFileSubfiles',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupMegaFileSubfilesArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupMegaFileSubfilesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DedupRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/DedupRead',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupReadArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupReadResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupViewSnapTreeNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/LookupViewSnapTreeNodes',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupViewSnapTreeNodesArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupViewSnapTreeNodesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Rmdir(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/Rmdir',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RmdirArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RmdirResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloneFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/CloneFile',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneFileArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneFileResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupInodeMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/LookupInodeMetadata',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupInodeMetadataArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupInodeMetadataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupPath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/LookupPath',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPathArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPathResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupDedupParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/LookupDedupParams',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDedupParamsArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDedupParamsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupDirEntry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/LookupDirEntry',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirEntryArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirEntryResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupDirectoryEntryName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/LookupDirectoryEntryName',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirectoryEntryNameArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupDirectoryEntryNameResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReverseNameLookup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/ReverseNameLookup',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReverseNameLookupAllPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/ReverseNameLookupAllPaths',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupAllPathsArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReverseNameLookupAllPathsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/CreateFile',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateFileArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateFileResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateMegaFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/CreateMegaFile',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateMegaFileArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateMegaFileResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloneToMegaFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/CloneToMegaFile',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneToMegaFileArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneToMegaFileResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloneDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/CloneDirectory',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloneDirectoryRecursive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/CloneDirectoryRecursive',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryRecursiveArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneDirectoryRecursiveResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/CreateEntity',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateEntityArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateEntityResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateRemoveEntitiesBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/CreateRemoveEntitiesBatch',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateRemoveEntitiesBatchArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CreateRemoveEntitiesBatchResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/RemoveFile',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveFileArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveFileResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/RemoveEntity',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveEntityArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RemoveEntityResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnlinkDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/UnlinkDirectory',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UnlinkDirectoryArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UnlinkDirectoryResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Link(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/Link',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LinkArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LinkResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Setattr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/Setattr',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.SetattrArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.SetattrResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Readdir(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/Readdir',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReaddirArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReaddirResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Rename(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/Rename',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RenameArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.RenameResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloneBytes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/CloneBytes',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneBytesArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.CloneBytesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DedupWrite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/DedupWrite',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupWriteArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.DedupWriteResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FindKnownIdenticalRanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/FindKnownIdenticalRanges',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindKnownIdenticalRangesArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FindKnownIdenticalRangesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FixEntityHandle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/FixEntityHandle',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FixEntityHandleArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FixEntityHandleResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchViewSnapTreeValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/FetchViewSnapTreeValues',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSnapTreeValuesArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSnapTreeValuesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchViewSearchKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/FetchViewSearchKeys',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSearchKeysArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.FetchViewSearchKeysResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TrackEntityHandleReadIO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/TrackEntityHandleReadIO',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.TrackEntityHandleReadIOArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.TrackEntityHandleReadIOResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UntrackEntityHandleReadIO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/UntrackEntityHandleReadIO',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UntrackEntityHandleReadIOArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.UntrackEntityHandleReadIOResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNonPersistentTrackedIOTraces(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/GetNonPersistentTrackedIOTraces',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetNonPersistentTrackedIOTracesArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetNonPersistentTrackedIOTracesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddNonPersistentIOTracesToPredictor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/AddNonPersistentIOTracesToPredictor',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.AddNonPersistentIOTracesToPredictorArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.AddNonPersistentIOTracesToPredictorResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupNASUptierTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/LookupNASUptierTable',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupNASUptierTableArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupNASUptierTableResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCloudChunkFilesForExternalWrite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/GetCloudChunkFilesForExternalWrite',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetCloudChunkFilesForExternalWriteArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.GetCloudChunkFilesForExternalWriteResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReleaseCloudChunkFileExternalWritePerm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/ReleaseCloudChunkFileExternalWritePerm',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReleaseCloudChunkFileExternalWritePermArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.ReleaseCloudChunkFileExternalWritePermResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupPreferredIOParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/LookupPreferredIOParams',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPreferredIOParamsArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.LookupPreferredIOParamsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitOrClearDirectoryChangelog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/InitOrClearDirectoryChangelog',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.InitOrClearDirectoryChangelogArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.InitOrClearDirectoryChangelogResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BulkDeleteSnapTreeKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/BulkDeleteSnapTreeKeys',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BulkDeleteSnapTreeKeysArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BulkDeleteSnapTreeKeysResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchMinionDedupWrite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.bridge.snap_fs.stub.RpcService/BatchMinionDedupWrite',
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BatchMinionDedupWriteArg.SerializeToString,
            bridge_dot_snap__fs_dot_stub_dot_rpc__service__pb2.BatchMinionDedupWriteResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
