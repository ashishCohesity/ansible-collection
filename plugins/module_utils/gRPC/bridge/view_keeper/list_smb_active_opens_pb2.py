# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bridge/view_keeper/list_smb_active_opens.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.bridge/view_keeper/list_smb_active_opens.proto\x12\x14\x63ohesity.bridge.view\"\xc6\r\n\x18ListSmbActiveOpensResult\x12N\n\x08sessions\x18\x01 \x03(\x0b\x32<.cohesity.bridge.view.ListSmbActiveOpensResult.SessionsEntry\x12\x0f\n\x07view_id\x18\x02 \x01(\x03\x12\x11\n\tview_name\x18\x03 \x01(\t\x12\x11\n\tfile_path\x18\x04 \x01(\t\x1a\xb3\x0b\n\rActiveSession\x12\x11\n\tclient_ip\x18\x01 \x01(\t\x12\x11\n\tserver_ip\x18\x02 \x01(\t\x12\x0f\n\x07user_id\x18\x03 \x01(\t\x12\x11\n\tdomain_id\x18\x04 \x01(\t\x12V\n\x05opens\x18\x05 \x03(\x0b\x32G.cohesity.bridge.view.ListSmbActiveOpensResult.ActiveSession.OpensEntry\x1a\x88\t\n\nActiveOpen\x12\x62\n\naccess_vec\x18\x01 \x03(\x0e\x32N.cohesity.bridge.view.ListSmbActiveOpensResult.ActiveSession.ActiveOpen.Access\x12^\n\x07sharing\x18\x02 \x02(\x0b\x32M.cohesity.bridge.view.ListSmbActiveOpensResult.ActiveSession.ActiveOpen.Share\x12`\n\x05lease\x18\x03 \x01(\x0b\x32Q.cohesity.bridge.view.ListSmbActiveOpensResult.ActiveSession.ActiveOpen.LeaseInfo\x1a\x61\n\x05Share\x12\x1b\n\x13other_reads_allowed\x18\x01 \x02(\x08\x12\x1c\n\x14other_writes_allowed\x18\x02 \x02(\x08\x12\x1d\n\x15other_deletes_allowed\x18\x03 \x02(\x08\x1a\xfd\x01\n\tLeaseInfo\x12i\n\x0elease_type_vec\x18\x01 \x03(\x0e\x32Q.cohesity.bridge.view.ListSmbActiveOpensResult.ActiveSession.ActiveOpen.LeaseType\x12\x13\n\x0bis_breaking\x18\x02 \x01(\x08\x12p\n\x15lease_breaking_to_vec\x18\x03 \x03(\x0e\x32Q.cohesity.bridge.view.ListSmbActiveOpensResult.ActiveSession.ActiveOpen.LeaseType\"\x8e\x03\n\x06\x41\x63\x63\x65ss\x12\x11\n\rkFileReadData\x10\x00\x12\x12\n\x0ekFileWriteData\x10\x01\x12\x13\n\x0fkFileAppendData\x10\x02\x12\x0f\n\x0bkFileReadEa\x10\x03\x12\x10\n\x0ckFileWriteEa\x10\x04\x12\x10\n\x0ckFileExecute\x10\x05\x12\x14\n\x10kFileDeleteChild\x10\x06\x12\x17\n\x13kFileReadAttributes\x10\x07\x12\x18\n\x14kFileWriteAttributes\x10\x08\x12\x0b\n\x07kDelete\x10\t\x12\x10\n\x0ckReadControl\x10\n\x12\r\n\tkWriteDac\x10\x0b\x12\x0f\n\x0bkWriteOwner\x10\x0c\x12\x10\n\x0ckSynchronize\x10\r\x12\x19\n\x15kAccessSystemSecurity\x10\x0e\x12\x13\n\x0fkMaximumAllowed\x10\x0f\x12\x0f\n\x0bkGenericAll\x10\x10\x12\x13\n\x0fkGenericExecute\x10\x11\x12\x11\n\rkGenericWrite\x10\x12\x12\x10\n\x0ckGenericRead\x10\x13\"`\n\tLeaseType\x12\x11\n\rkNoCacheLease\x10\x00\x12\x13\n\x0fkReadCacheLease\x10\x01\x12\x15\n\x11kHandleCacheLease\x10\x02\x12\x14\n\x10kWriteCacheLease\x10\x03\x1au\n\nOpensEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12V\n\x05value\x18\x02 \x01(\x0b\x32G.cohesity.bridge.view.ListSmbActiveOpensResult.ActiveSession.ActiveOpen:\x02\x38\x01\x1am\n\rSessionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12K\n\x05value\x18\x02 \x01(\x0b\x32<.cohesity.bridge.view.ListSmbActiveOpensResult.ActiveSession:\x02\x38\x01\"s\n\x1bListSmbAllActiveOpensResult\x12\x44\n\x0c\x61\x63tive_opens\x18\x01 \x03(\x0b\x32..cohesity.bridge.view.ListSmbActiveOpensResult\x12\x0e\n\x06\x63ookie\x18\x02 \x01(\tB-Z+bridge/view_keeper/list_smb_active_opens.pb')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'bridge.view_keeper.list_smb_active_opens_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z+bridge/view_keeper/list_smb_active_opens.pb'
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_OPENSENTRY']._loaded_options = None
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_OPENSENTRY']._serialized_options = b'8\001'
  _globals['_LISTSMBACTIVEOPENSRESULT_SESSIONSENTRY']._loaded_options = None
  _globals['_LISTSMBACTIVEOPENSRESULT_SESSIONSENTRY']._serialized_options = b'8\001'
  _globals['_LISTSMBACTIVEOPENSRESULT']._serialized_start=73
  _globals['_LISTSMBACTIVEOPENSRESULT']._serialized_end=1807
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION']._serialized_start=237
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION']._serialized_end=1696
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_ACTIVEOPEN']._serialized_start=417
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_ACTIVEOPEN']._serialized_end=1577
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_ACTIVEOPEN_SHARE']._serialized_start=725
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_ACTIVEOPEN_SHARE']._serialized_end=822
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_ACTIVEOPEN_LEASEINFO']._serialized_start=825
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_ACTIVEOPEN_LEASEINFO']._serialized_end=1078
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_ACTIVEOPEN_ACCESS']._serialized_start=1081
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_ACTIVEOPEN_ACCESS']._serialized_end=1479
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_ACTIVEOPEN_LEASETYPE']._serialized_start=1481
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_ACTIVEOPEN_LEASETYPE']._serialized_end=1577
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_OPENSENTRY']._serialized_start=1579
  _globals['_LISTSMBACTIVEOPENSRESULT_ACTIVESESSION_OPENSENTRY']._serialized_end=1696
  _globals['_LISTSMBACTIVEOPENSRESULT_SESSIONSENTRY']._serialized_start=1698
  _globals['_LISTSMBACTIVEOPENSRESULT_SESSIONSENTRY']._serialized_end=1807
  _globals['_LISTSMBALLACTIVEOPENSRESULT']._serialized_start=1809
  _globals['_LISTSMBALLACTIVEOPENSRESULT']._serialized_end=1924
# @@protoc_insertion_point(module_scope)
