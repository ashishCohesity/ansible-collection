# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: experimental/akhil/fileOps/file_service.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from open_util.net import protorpc_pb2 as open__util_dot_net_dot_protorpc__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n-experimental/akhil/fileOps/file_service.proto\x12#cohesity.experimental.akhil.fileOps\x1a\x1copen_util/net/protorpc.proto\"\"\n\rCreateRequest\x12\x11\n\tfile_name\x18\x01 \x01(\t\"\xaa\x01\n\x0e\x43reateResponse\x12Q\n\nerror_type\x18\x01 \x01(\x0e\x32=.cohesity.experimental.akhil.fileOps.CreateResponse.ErrorType\x12\x15\n\rerror_message\x18\x02 \x01(\t\".\n\tErrorType\x12\x0c\n\x08kNoError\x10\x00\x12\x13\n\x0fkUnableToCreate\x10\x01\"=\n\x0bReadRequest\x12\x11\n\tfile_name\x18\x01 \x01(\t\x12\x0e\n\x06offset\x18\x02 \x01(\x03\x12\x0b\n\x03len\x18\x03 \x01(\x03\"\xda\x01\n\x0cReadResponse\x12\x0e\n\x06\x62uffer\x18\x01 \x01(\t\x12O\n\nerror_type\x18\x02 \x01(\x0e\x32;.cohesity.experimental.akhil.fileOps.ReadResponse.ErrorType\x12\x15\n\rerror_message\x18\x03 \x01(\t\"R\n\tErrorType\x12\x0c\n\x08kNoError\x10\x00\x12\x11\n\rkUnknownError\x10\x01\x12\x11\n\rkUnableToOpen\x10\x02\x12\x11\n\rkInvalidRange\x10\x03\"M\n\x0cWriteRequest\x12\x11\n\tfile_name\x18\x01 \x01(\t\x12\x0e\n\x06offset\x18\x02 \x01(\x03\x12\x0b\n\x03len\x18\x03 \x01(\x03\x12\r\n\x05input\x18\x04 \x01(\t\"\xce\x01\n\rWriteResponse\x12P\n\nerror_type\x18\x01 \x01(\x0e\x32<.cohesity.experimental.akhil.fileOps.WriteResponse.ErrorType\x12\x15\n\rerror_message\x18\x02 \x01(\t\"T\n\tErrorType\x12\x0c\n\x08kNoError\x10\x00\x12\x13\n\x0fkUnableToCreate\x10\x01\x12\x11\n\rkUnknownError\x10\x02\x12\x11\n\rkInvalidRange\x10\x03\x32\xfe\x02\n\x0b\x46ileService\x12w\n\nCreateFile\x12\x32.cohesity.experimental.akhil.fileOps.CreateRequest\x1a\x33.cohesity.experimental.akhil.fileOps.CreateResponse\"\x00\x12q\n\x08ReadFile\x12\x30.cohesity.experimental.akhil.fileOps.ReadRequest\x1a\x31.cohesity.experimental.akhil.fileOps.ReadResponse\"\x00\x12t\n\tWriteFile\x12\x31.cohesity.experimental.akhil.fileOps.WriteRequest\x1a\x32.cohesity.experimental.akhil.fileOps.WriteResponse\"\x00\x1a\r\x80\xf1\x04\xe8\x07\x88\xf1\x04\x01\x90\xf1\x04\x02')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'experimental.akhil.fileOps.file_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_FILESERVICE']._loaded_options = None
  _globals['_FILESERVICE']._serialized_options = b'\200\361\004\350\007\210\361\004\001\220\361\004\002'
  _globals['_CREATEREQUEST']._serialized_start=116
  _globals['_CREATEREQUEST']._serialized_end=150
  _globals['_CREATERESPONSE']._serialized_start=153
  _globals['_CREATERESPONSE']._serialized_end=323
  _globals['_CREATERESPONSE_ERRORTYPE']._serialized_start=277
  _globals['_CREATERESPONSE_ERRORTYPE']._serialized_end=323
  _globals['_READREQUEST']._serialized_start=325
  _globals['_READREQUEST']._serialized_end=386
  _globals['_READRESPONSE']._serialized_start=389
  _globals['_READRESPONSE']._serialized_end=607
  _globals['_READRESPONSE_ERRORTYPE']._serialized_start=525
  _globals['_READRESPONSE_ERRORTYPE']._serialized_end=607
  _globals['_WRITEREQUEST']._serialized_start=609
  _globals['_WRITEREQUEST']._serialized_end=686
  _globals['_WRITERESPONSE']._serialized_start=689
  _globals['_WRITERESPONSE']._serialized_end=895
  _globals['_WRITERESPONSE_ERRORTYPE']._serialized_start=811
  _globals['_WRITERESPONSE_ERRORTYPE']._serialized_end=895
  _globals['_FILESERVICE']._serialized_start=898
  _globals['_FILESERVICE']._serialized_end=1280
# @@protoc_insertion_point(module_scope)
