# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: experimental/sachin/scribe/proxy/stub/rpc_service.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from open_util.net import protorpc_pb2 as open__util_dot_net_dot_protorpc__pb2
from scribe.base import scribe_pb2 as scribe_dot_base_dot_scribe__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n7experimental/sachin/scribe/proxy/stub/rpc_service.proto\x12.cohesity.experimental.sachin.scribe.proxy.stub\x1a\x1copen_util/net/protorpc.proto\x1a\x18scribe/base/scribe.proto\">\n\nReadCookie\x12\x30\n\tstart_key\x18\x01 \x02(\x0b\x32\x1d.cohesity.scribe.RowColumnKey\"z\n\nGetNextArg\x12\x12\n\ntable_name\x18\x01 \x02(\t\x12.\n\x07\x63olumns\x18\x02 \x03(\x0b\x32\x1d.cohesity.scribe.RowColumnKey\x12\x18\n\nbatch_size\x18\x03 \x01(\x05:\x04\x31\x30\x30\x30\x12\x0e\n\x06\x63ookie\x18\x04 \x01(\x0c\"\xdd\x02\n\rGetNextResult\x12S\n\x04rows\x18\x01 \x03(\x0b\x32\x45.cohesity.experimental.sachin.scribe.proxy.stub.GetNextResult.RowData\x12\x0e\n\x06\x63ookie\x18\x02 \x01(\x0c\x1a\xe6\x01\n\x07RowData\x12*\n\x03key\x18\x01 \x02(\x0b\x32\x1d.cohesity.scribe.RowColumnKey\x12\x65\n\x0b\x63olumn_data\x18\x03 \x03(\x0b\x32P.cohesity.experimental.sachin.scribe.proxy.stub.GetNextResult.RowData.ColumnData\x1aH\n\nColumnData\x12+\n\x04name\x18\x01 \x02(\x0b\x32\x1d.cohesity.scribe.RowColumnKey\x12\r\n\x05value\x18\x02 \x01(\x0c\x32\x9c\x01\n\nRpcService\x12\x86\x01\n\x07GetNext\x12:.cohesity.experimental.sachin.scribe.proxy.stub.GetNextArg\x1a=.cohesity.experimental.sachin.scribe.proxy.stub.GetNextResult\"\x00\x1a\x05\x80\xf1\x04\x88\'B\x03\x80\x01\x00')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'experimental.sachin.scribe.proxy.stub.rpc_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\200\001\000'
  _globals['_RPCSERVICE']._loaded_options = None
  _globals['_RPCSERVICE']._serialized_options = b'\200\361\004\210\''
  _globals['_READCOOKIE']._serialized_start=163
  _globals['_READCOOKIE']._serialized_end=225
  _globals['_GETNEXTARG']._serialized_start=227
  _globals['_GETNEXTARG']._serialized_end=349
  _globals['_GETNEXTRESULT']._serialized_start=352
  _globals['_GETNEXTRESULT']._serialized_end=701
  _globals['_GETNEXTRESULT_ROWDATA']._serialized_start=471
  _globals['_GETNEXTRESULT_ROWDATA']._serialized_end=701
  _globals['_GETNEXTRESULT_ROWDATA_COLUMNDATA']._serialized_start=629
  _globals['_GETNEXTRESULT_ROWDATA_COLUMNDATA']._serialized_end=701
  _globals['_RPCSERVICE']._serialized_start=704
  _globals['_RPCSERVICE']._serialized_end=860
# @@protoc_insertion_point(module_scope)
