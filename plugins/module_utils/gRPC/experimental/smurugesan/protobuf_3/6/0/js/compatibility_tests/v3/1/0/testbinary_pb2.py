# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: experimental/smurugesan/protobuf-3.6.0/js/compatibility_tests/v3.1.0/testbinary.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nUexperimental/smurugesan/protobuf-3.6.0/js/compatibility_tests/v3.1.0/testbinary.proto\x12\tjspb.test\"\xff\r\n\x0cTestAllTypes\x12\x16\n\x0eoptional_int32\x18\x01 \x01(\x05\x12\x16\n\x0eoptional_int64\x18\x02 \x01(\x03\x12\x17\n\x0foptional_uint32\x18\x03 \x01(\r\x12\x17\n\x0foptional_uint64\x18\x04 \x01(\x04\x12\x17\n\x0foptional_sint32\x18\x05 \x01(\x11\x12\x17\n\x0foptional_sint64\x18\x06 \x01(\x12\x12\x18\n\x10optional_fixed32\x18\x07 \x01(\x07\x12\x18\n\x10optional_fixed64\x18\x08 \x01(\x06\x12\x19\n\x11optional_sfixed32\x18\t \x01(\x0f\x12\x19\n\x11optional_sfixed64\x18\n \x01(\x10\x12\x16\n\x0eoptional_float\x18\x0b \x01(\x02\x12\x17\n\x0foptional_double\x18\x0c \x01(\x01\x12\x15\n\roptional_bool\x18\r \x01(\x08\x12\x17\n\x0foptional_string\x18\x0e \x01(\t\x12\x16\n\x0eoptional_bytes\x18\x0f \x01(\x0c\x12<\n\roptionalgroup\x18\x10 \x01(\n2%.jspb.test.TestAllTypes.OptionalGroup\x12;\n\x18optional_foreign_message\x18\x13 \x01(\x0b\x32\x19.jspb.test.ForeignMessage\x12\x35\n\x15optional_foreign_enum\x18\x16 \x01(\x0e\x32\x16.jspb.test.ForeignEnum\x12\x16\n\x0erepeated_int32\x18\x1f \x03(\x05\x12\x16\n\x0erepeated_int64\x18  \x03(\x03\x12\x17\n\x0frepeated_uint32\x18! \x03(\r\x12\x17\n\x0frepeated_uint64\x18\" \x03(\x04\x12\x17\n\x0frepeated_sint32\x18# \x03(\x11\x12\x17\n\x0frepeated_sint64\x18$ \x03(\x12\x12\x18\n\x10repeated_fixed32\x18% \x03(\x07\x12\x18\n\x10repeated_fixed64\x18& \x03(\x06\x12\x19\n\x11repeated_sfixed32\x18\' \x03(\x0f\x12\x19\n\x11repeated_sfixed64\x18( \x03(\x10\x12\x16\n\x0erepeated_float\x18) \x03(\x02\x12\x17\n\x0frepeated_double\x18* \x03(\x01\x12\x15\n\rrepeated_bool\x18+ \x03(\x08\x12\x17\n\x0frepeated_string\x18, \x03(\t\x12\x16\n\x0erepeated_bytes\x18- \x03(\x0c\x12<\n\rrepeatedgroup\x18. \x03(\n2%.jspb.test.TestAllTypes.RepeatedGroup\x12;\n\x18repeated_foreign_message\x18\x31 \x03(\x0b\x32\x19.jspb.test.ForeignMessage\x12\x35\n\x15repeated_foreign_enum\x18\x34 \x03(\x0e\x32\x16.jspb.test.ForeignEnum\x12!\n\x15packed_repeated_int32\x18= \x03(\x05\x42\x02\x10\x01\x12!\n\x15packed_repeated_int64\x18> \x03(\x03\x42\x02\x10\x01\x12\"\n\x16packed_repeated_uint32\x18? \x03(\rB\x02\x10\x01\x12\"\n\x16packed_repeated_uint64\x18@ \x03(\x04\x42\x02\x10\x01\x12\"\n\x16packed_repeated_sint32\x18\x41 \x03(\x11\x42\x02\x10\x01\x12\"\n\x16packed_repeated_sint64\x18\x42 \x03(\x12\x42\x02\x10\x01\x12#\n\x17packed_repeated_fixed32\x18\x43 \x03(\x07\x42\x02\x10\x01\x12#\n\x17packed_repeated_fixed64\x18\x44 \x03(\x06\x42\x02\x10\x01\x12$\n\x18packed_repeated_sfixed32\x18\x45 \x03(\x0f\x42\x02\x10\x01\x12$\n\x18packed_repeated_sfixed64\x18\x46 \x03(\x10\x42\x02\x10\x01\x12!\n\x15packed_repeated_float\x18G \x03(\x02\x42\x02\x10\x01\x12\"\n\x16packed_repeated_double\x18H \x03(\x01\x42\x02\x10\x01\x12 \n\x14packed_repeated_bool\x18I \x03(\x08\x42\x02\x10\x01\x12\x16\n\x0coneof_uint32\x18o \x01(\rH\x00\x12:\n\x15oneof_foreign_message\x18p \x01(\x0b\x32\x19.jspb.test.ForeignMessageH\x00\x12\x16\n\x0coneof_string\x18q \x01(\tH\x00\x12\x15\n\x0boneof_bytes\x18r \x01(\x0cH\x00\x1a\x1a\n\rOptionalGroup\x12\t\n\x01\x61\x18\x11 \x01(\x05\x1a\x1a\n\rRepeatedGroup\x12\t\n\x01\x61\x18/ \x01(\x05\x42\r\n\x0boneof_field\"\x1b\n\x0e\x46oreignMessage\x12\t\n\x01\x63\x18\x01 \x01(\x05\"\x1a\n\x0eTestExtendable*\x08\x08\x01\x10\x80\x80\x80\x80\x02\"\xcd\x01\n\x12\x45xtendsWithMessage\x12\x0b\n\x03\x66oo\x18\x01 \x01(\x05\x32T\n\x12optional_extension\x12\x19.jspb.test.TestExtendable\x18\x13 \x01(\x0b\x32\x1d.jspb.test.ExtendsWithMessage2T\n\x12repeated_extension\x12\x19.jspb.test.TestExtendable\x18\x31 \x03(\x0b\x32\x1d.jspb.test.ExtendsWithMessage\"\x95\x0c\n\rTestMapFields\x12H\n\x11map_string_string\x18\x01 \x03(\x0b\x32-.jspb.test.TestMapFields.MapStringStringEntry\x12\x46\n\x10map_string_int32\x18\x02 \x03(\x0b\x32,.jspb.test.TestMapFields.MapStringInt32Entry\x12\x46\n\x10map_string_int64\x18\x03 \x03(\x0b\x32,.jspb.test.TestMapFields.MapStringInt64Entry\x12\x44\n\x0fmap_string_bool\x18\x04 \x03(\x0b\x32+.jspb.test.TestMapFields.MapStringBoolEntry\x12H\n\x11map_string_double\x18\x05 \x03(\x0b\x32-.jspb.test.TestMapFields.MapStringDoubleEntry\x12\x44\n\x0fmap_string_enum\x18\x06 \x03(\x0b\x32+.jspb.test.TestMapFields.MapStringEnumEntry\x12\x42\n\x0emap_string_msg\x18\x07 \x03(\x0b\x32*.jspb.test.TestMapFields.MapStringMsgEntry\x12\x46\n\x10map_int32_string\x18\x08 \x03(\x0b\x32,.jspb.test.TestMapFields.MapInt32StringEntry\x12\x46\n\x10map_int64_string\x18\t \x03(\x0b\x32,.jspb.test.TestMapFields.MapInt64StringEntry\x12\x44\n\x0fmap_bool_string\x18\n \x03(\x0b\x32+.jspb.test.TestMapFields.MapBoolStringEntry\x12\x31\n\x0ftest_map_fields\x18\x0b \x01(\x0b\x32\x18.jspb.test.TestMapFields\x12V\n\x18map_string_testmapfields\x18\x0c \x03(\x0b\x32\x34.jspb.test.TestMapFields.MapStringTestmapfieldsEntry\x1a\x36\n\x14MapStringStringEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x35\n\x13MapStringInt32Entry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x35\n\x13MapStringInt64Entry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x34\n\x12MapStringBoolEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\x1a\x36\n\x14MapStringDoubleEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\x1aM\n\x12MapStringEnumEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12&\n\x05value\x18\x02 \x01(\x0e\x32\x17.jspb.test.MapValueEnum:\x02\x38\x01\x1aO\n\x11MapStringMsgEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12)\n\x05value\x18\x02 \x01(\x0b\x32\x1a.jspb.test.MapValueMessage:\x02\x38\x01\x1a\x35\n\x13MapInt32StringEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x35\n\x13MapInt64StringEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x34\n\x12MapBoolStringEntry\x12\x0b\n\x03key\x18\x01 \x01(\x08\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1aW\n\x1bMapStringTestmapfieldsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\'\n\x05value\x18\x02 \x01(\x0b\x32\x18.jspb.test.TestMapFields:\x02\x38\x01\"\x1e\n\x0fMapValueMessage\x12\x0b\n\x03\x66oo\x18\x01 \x01(\x05*@\n\x0b\x46oreignEnum\x12\x0f\n\x0b\x46OREIGN_FOO\x10\x04\x12\x0f\n\x0b\x46OREIGN_BAR\x10\x05\x12\x0f\n\x0b\x46OREIGN_BAZ\x10\x06*G\n\x0cMapValueEnum\x12\x11\n\rMAP_VALUE_FOO\x10\x00\x12\x11\n\rMAP_VALUE_BAR\x10\x01\x12\x11\n\rMAP_VALUE_BAZ\x10\x02:8\n\x15\x65xtend_optional_int32\x12\x19.jspb.test.TestExtendable\x18\x01 \x01(\x05:8\n\x15\x65xtend_optional_int64\x12\x19.jspb.test.TestExtendable\x18\x02 \x01(\x03:9\n\x16\x65xtend_optional_uint32\x12\x19.jspb.test.TestExtendable\x18\x03 \x01(\r:9\n\x16\x65xtend_optional_uint64\x12\x19.jspb.test.TestExtendable\x18\x04 \x01(\x04:9\n\x16\x65xtend_optional_sint32\x12\x19.jspb.test.TestExtendable\x18\x05 \x01(\x11:9\n\x16\x65xtend_optional_sint64\x12\x19.jspb.test.TestExtendable\x18\x06 \x01(\x12::\n\x17\x65xtend_optional_fixed32\x12\x19.jspb.test.TestExtendable\x18\x07 \x01(\x07::\n\x17\x65xtend_optional_fixed64\x12\x19.jspb.test.TestExtendable\x18\x08 \x01(\x06:;\n\x18\x65xtend_optional_sfixed32\x12\x19.jspb.test.TestExtendable\x18\t \x01(\x0f:;\n\x18\x65xtend_optional_sfixed64\x12\x19.jspb.test.TestExtendable\x18\n \x01(\x10:8\n\x15\x65xtend_optional_float\x12\x19.jspb.test.TestExtendable\x18\x0b \x01(\x02:9\n\x16\x65xtend_optional_double\x12\x19.jspb.test.TestExtendable\x18\x0c \x01(\x01:7\n\x14\x65xtend_optional_bool\x12\x19.jspb.test.TestExtendable\x18\r \x01(\x08:9\n\x16\x65xtend_optional_string\x12\x19.jspb.test.TestExtendable\x18\x0e \x01(\t:8\n\x15\x65xtend_optional_bytes\x12\x19.jspb.test.TestExtendable\x18\x0f \x01(\x0c:W\n\x1c\x65xtend_optional_foreign_enum\x12\x19.jspb.test.TestExtendable\x18\x16 \x01(\x0e\x32\x16.jspb.test.ForeignEnum:8\n\x15\x65xtend_repeated_int32\x12\x19.jspb.test.TestExtendable\x18\x1f \x03(\x05:8\n\x15\x65xtend_repeated_int64\x12\x19.jspb.test.TestExtendable\x18  \x03(\x03:9\n\x16\x65xtend_repeated_uint32\x12\x19.jspb.test.TestExtendable\x18! \x03(\r:9\n\x16\x65xtend_repeated_uint64\x12\x19.jspb.test.TestExtendable\x18\" \x03(\x04:9\n\x16\x65xtend_repeated_sint32\x12\x19.jspb.test.TestExtendable\x18# \x03(\x11:9\n\x16\x65xtend_repeated_sint64\x12\x19.jspb.test.TestExtendable\x18$ \x03(\x12::\n\x17\x65xtend_repeated_fixed32\x12\x19.jspb.test.TestExtendable\x18% \x03(\x07::\n\x17\x65xtend_repeated_fixed64\x12\x19.jspb.test.TestExtendable\x18& \x03(\x06:;\n\x18\x65xtend_repeated_sfixed32\x12\x19.jspb.test.TestExtendable\x18\' \x03(\x0f:;\n\x18\x65xtend_repeated_sfixed64\x12\x19.jspb.test.TestExtendable\x18( \x03(\x10:8\n\x15\x65xtend_repeated_float\x12\x19.jspb.test.TestExtendable\x18) \x03(\x02:9\n\x16\x65xtend_repeated_double\x12\x19.jspb.test.TestExtendable\x18* \x03(\x01:7\n\x14\x65xtend_repeated_bool\x12\x19.jspb.test.TestExtendable\x18+ \x03(\x08:9\n\x16\x65xtend_repeated_string\x12\x19.jspb.test.TestExtendable\x18, \x03(\t:8\n\x15\x65xtend_repeated_bytes\x12\x19.jspb.test.TestExtendable\x18- \x03(\x0c:W\n\x1c\x65xtend_repeated_foreign_enum\x12\x19.jspb.test.TestExtendable\x18\x34 \x03(\x0e\x32\x16.jspb.test.ForeignEnum:C\n\x1c\x65xtend_packed_repeated_int32\x12\x19.jspb.test.TestExtendable\x18= \x03(\x05\x42\x02\x10\x01:C\n\x1c\x65xtend_packed_repeated_int64\x12\x19.jspb.test.TestExtendable\x18> \x03(\x03\x42\x02\x10\x01:D\n\x1d\x65xtend_packed_repeated_uint32\x12\x19.jspb.test.TestExtendable\x18? \x03(\rB\x02\x10\x01:D\n\x1d\x65xtend_packed_repeated_uint64\x12\x19.jspb.test.TestExtendable\x18@ \x03(\x04\x42\x02\x10\x01:D\n\x1d\x65xtend_packed_repeated_sint32\x12\x19.jspb.test.TestExtendable\x18\x41 \x03(\x11\x42\x02\x10\x01:D\n\x1d\x65xtend_packed_repeated_sint64\x12\x19.jspb.test.TestExtendable\x18\x42 \x03(\x12\x42\x02\x10\x01:E\n\x1e\x65xtend_packed_repeated_fixed32\x12\x19.jspb.test.TestExtendable\x18\x43 \x03(\x07\x42\x02\x10\x01:E\n\x1e\x65xtend_packed_repeated_fixed64\x12\x19.jspb.test.TestExtendable\x18\x44 \x03(\x06\x42\x02\x10\x01:F\n\x1f\x65xtend_packed_repeated_sfixed32\x12\x19.jspb.test.TestExtendable\x18\x45 \x03(\x0f\x42\x02\x10\x01:F\n\x1f\x65xtend_packed_repeated_sfixed64\x12\x19.jspb.test.TestExtendable\x18\x46 \x03(\x10\x42\x02\x10\x01:C\n\x1c\x65xtend_packed_repeated_float\x12\x19.jspb.test.TestExtendable\x18G \x03(\x02\x42\x02\x10\x01:D\n\x1d\x65xtend_packed_repeated_double\x12\x19.jspb.test.TestExtendable\x18H \x03(\x01\x42\x02\x10\x01:B\n\x1b\x65xtend_packed_repeated_bool\x12\x19.jspb.test.TestExtendable\x18I \x03(\x08\x42\x02\x10\x01:b\n#extend_packed_repeated_foreign_enum\x12\x19.jspb.test.TestExtendable\x18R \x03(\x0e\x32\x16.jspb.test.ForeignEnumB\x02\x10\x01')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'experimental.smurugesan.protobuf_3.6.0.js.compatibility_tests.v3.1.0.testbinary_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['extend_packed_repeated_int32']._loaded_options = None
  _globals['extend_packed_repeated_int32']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_int64']._loaded_options = None
  _globals['extend_packed_repeated_int64']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_uint32']._loaded_options = None
  _globals['extend_packed_repeated_uint32']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_uint64']._loaded_options = None
  _globals['extend_packed_repeated_uint64']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_sint32']._loaded_options = None
  _globals['extend_packed_repeated_sint32']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_sint64']._loaded_options = None
  _globals['extend_packed_repeated_sint64']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_fixed32']._loaded_options = None
  _globals['extend_packed_repeated_fixed32']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_fixed64']._loaded_options = None
  _globals['extend_packed_repeated_fixed64']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_sfixed32']._loaded_options = None
  _globals['extend_packed_repeated_sfixed32']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_sfixed64']._loaded_options = None
  _globals['extend_packed_repeated_sfixed64']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_float']._loaded_options = None
  _globals['extend_packed_repeated_float']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_double']._loaded_options = None
  _globals['extend_packed_repeated_double']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_bool']._loaded_options = None
  _globals['extend_packed_repeated_bool']._serialized_options = b'\020\001'
  _globals['extend_packed_repeated_foreign_enum']._loaded_options = None
  _globals['extend_packed_repeated_foreign_enum']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_int32']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_int32']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_int64']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_int64']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_uint32']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_uint32']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_uint64']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_uint64']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_sint32']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_sint32']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_sint64']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_sint64']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_fixed32']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_fixed32']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_fixed64']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_fixed64']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_sfixed32']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_sfixed32']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_sfixed64']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_sfixed64']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_float']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_float']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_double']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_double']._serialized_options = b'\020\001'
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_bool']._loaded_options = None
  _globals['_TESTALLTYPES'].fields_by_name['packed_repeated_bool']._serialized_options = b'\020\001'
  _globals['_TESTMAPFIELDS_MAPSTRINGSTRINGENTRY']._loaded_options = None
  _globals['_TESTMAPFIELDS_MAPSTRINGSTRINGENTRY']._serialized_options = b'8\001'
  _globals['_TESTMAPFIELDS_MAPSTRINGINT32ENTRY']._loaded_options = None
  _globals['_TESTMAPFIELDS_MAPSTRINGINT32ENTRY']._serialized_options = b'8\001'
  _globals['_TESTMAPFIELDS_MAPSTRINGINT64ENTRY']._loaded_options = None
  _globals['_TESTMAPFIELDS_MAPSTRINGINT64ENTRY']._serialized_options = b'8\001'
  _globals['_TESTMAPFIELDS_MAPSTRINGBOOLENTRY']._loaded_options = None
  _globals['_TESTMAPFIELDS_MAPSTRINGBOOLENTRY']._serialized_options = b'8\001'
  _globals['_TESTMAPFIELDS_MAPSTRINGDOUBLEENTRY']._loaded_options = None
  _globals['_TESTMAPFIELDS_MAPSTRINGDOUBLEENTRY']._serialized_options = b'8\001'
  _globals['_TESTMAPFIELDS_MAPSTRINGENUMENTRY']._loaded_options = None
  _globals['_TESTMAPFIELDS_MAPSTRINGENUMENTRY']._serialized_options = b'8\001'
  _globals['_TESTMAPFIELDS_MAPSTRINGMSGENTRY']._loaded_options = None
  _globals['_TESTMAPFIELDS_MAPSTRINGMSGENTRY']._serialized_options = b'8\001'
  _globals['_TESTMAPFIELDS_MAPINT32STRINGENTRY']._loaded_options = None
  _globals['_TESTMAPFIELDS_MAPINT32STRINGENTRY']._serialized_options = b'8\001'
  _globals['_TESTMAPFIELDS_MAPINT64STRINGENTRY']._loaded_options = None
  _globals['_TESTMAPFIELDS_MAPINT64STRINGENTRY']._serialized_options = b'8\001'
  _globals['_TESTMAPFIELDS_MAPBOOLSTRINGENTRY']._loaded_options = None
  _globals['_TESTMAPFIELDS_MAPBOOLSTRINGENTRY']._serialized_options = b'8\001'
  _globals['_TESTMAPFIELDS_MAPSTRINGTESTMAPFIELDSENTRY']._loaded_options = None
  _globals['_TESTMAPFIELDS_MAPSTRINGTESTMAPFIELDSENTRY']._serialized_options = b'8\001'
  _globals['_FOREIGNENUM']._serialized_start=3751
  _globals['_FOREIGNENUM']._serialized_end=3815
  _globals['_MAPVALUEENUM']._serialized_start=3817
  _globals['_MAPVALUEENUM']._serialized_end=3888
  _globals['_TESTALLTYPES']._serialized_start=101
  _globals['_TESTALLTYPES']._serialized_end=1892
  _globals['_TESTALLTYPES_OPTIONALGROUP']._serialized_start=1823
  _globals['_TESTALLTYPES_OPTIONALGROUP']._serialized_end=1849
  _globals['_TESTALLTYPES_REPEATEDGROUP']._serialized_start=1851
  _globals['_TESTALLTYPES_REPEATEDGROUP']._serialized_end=1877
  _globals['_FOREIGNMESSAGE']._serialized_start=1894
  _globals['_FOREIGNMESSAGE']._serialized_end=1921
  _globals['_TESTEXTENDABLE']._serialized_start=1923
  _globals['_TESTEXTENDABLE']._serialized_end=1949
  _globals['_EXTENDSWITHMESSAGE']._serialized_start=1952
  _globals['_EXTENDSWITHMESSAGE']._serialized_end=2157
  _globals['_TESTMAPFIELDS']._serialized_start=2160
  _globals['_TESTMAPFIELDS']._serialized_end=3717
  _globals['_TESTMAPFIELDS_MAPSTRINGSTRINGENTRY']._serialized_start=3030
  _globals['_TESTMAPFIELDS_MAPSTRINGSTRINGENTRY']._serialized_end=3084
  _globals['_TESTMAPFIELDS_MAPSTRINGINT32ENTRY']._serialized_start=3086
  _globals['_TESTMAPFIELDS_MAPSTRINGINT32ENTRY']._serialized_end=3139
  _globals['_TESTMAPFIELDS_MAPSTRINGINT64ENTRY']._serialized_start=3141
  _globals['_TESTMAPFIELDS_MAPSTRINGINT64ENTRY']._serialized_end=3194
  _globals['_TESTMAPFIELDS_MAPSTRINGBOOLENTRY']._serialized_start=3196
  _globals['_TESTMAPFIELDS_MAPSTRINGBOOLENTRY']._serialized_end=3248
  _globals['_TESTMAPFIELDS_MAPSTRINGDOUBLEENTRY']._serialized_start=3250
  _globals['_TESTMAPFIELDS_MAPSTRINGDOUBLEENTRY']._serialized_end=3304
  _globals['_TESTMAPFIELDS_MAPSTRINGENUMENTRY']._serialized_start=3306
  _globals['_TESTMAPFIELDS_MAPSTRINGENUMENTRY']._serialized_end=3383
  _globals['_TESTMAPFIELDS_MAPSTRINGMSGENTRY']._serialized_start=3385
  _globals['_TESTMAPFIELDS_MAPSTRINGMSGENTRY']._serialized_end=3464
  _globals['_TESTMAPFIELDS_MAPINT32STRINGENTRY']._serialized_start=3466
  _globals['_TESTMAPFIELDS_MAPINT32STRINGENTRY']._serialized_end=3519
  _globals['_TESTMAPFIELDS_MAPINT64STRINGENTRY']._serialized_start=3521
  _globals['_TESTMAPFIELDS_MAPINT64STRINGENTRY']._serialized_end=3574
  _globals['_TESTMAPFIELDS_MAPBOOLSTRINGENTRY']._serialized_start=3576
  _globals['_TESTMAPFIELDS_MAPBOOLSTRINGENTRY']._serialized_end=3628
  _globals['_TESTMAPFIELDS_MAPSTRINGTESTMAPFIELDSENTRY']._serialized_start=3630
  _globals['_TESTMAPFIELDS_MAPSTRINGTESTMAPFIELDSENTRY']._serialized_end=3717
  _globals['_MAPVALUEMESSAGE']._serialized_start=3719
  _globals['_MAPVALUEMESSAGE']._serialized_end=3749
# @@protoc_insertion_point(module_scope)
