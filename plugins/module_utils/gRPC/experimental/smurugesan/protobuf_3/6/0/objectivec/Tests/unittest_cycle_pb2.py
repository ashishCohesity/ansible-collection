# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: experimental/smurugesan/protobuf-3.6.0/objectivec/Tests/unittest_cycle.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nLexperimental/smurugesan/protobuf-3.6.0/objectivec/Tests/unittest_cycle.proto\x12\x11protobuf_unittest\"\x8e\x01\n\x08\x43ycleFoo\x12*\n\x05\x61_foo\x18\x01 \x01(\x0b\x32\x1b.protobuf_unittest.CycleFoo\x12*\n\x05\x61_bar\x18\x02 \x01(\x0b\x32\x1b.protobuf_unittest.CycleBar\x12*\n\x05\x61_baz\x18\x03 \x01(\x0b\x32\x1b.protobuf_unittest.CycleBaz\"\x8e\x01\n\x08\x43ycleBar\x12*\n\x05\x61_bar\x18\x01 \x01(\x0b\x32\x1b.protobuf_unittest.CycleBar\x12*\n\x05\x61_baz\x18\x02 \x01(\x0b\x32\x1b.protobuf_unittest.CycleBaz\x12*\n\x05\x61_foo\x18\x03 \x01(\x0b\x32\x1b.protobuf_unittest.CycleFoo\"\x8e\x01\n\x08\x43ycleBaz\x12*\n\x05\x61_baz\x18\x01 \x01(\x0b\x32\x1b.protobuf_unittest.CycleBaz\x12*\n\x05\x61_foo\x18\x02 \x01(\x0b\x32\x1b.protobuf_unittest.CycleFoo\x12*\n\x05\x61_bar\x18\x03 \x01(\x0b\x32\x1b.protobuf_unittest.CycleBar')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'experimental.smurugesan.protobuf_3.6.0.objectivec.Tests.unittest_cycle_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_CYCLEFOO']._serialized_start=100
  _globals['_CYCLEFOO']._serialized_end=242
  _globals['_CYCLEBAR']._serialized_start=245
  _globals['_CYCLEBAR']._serialized_end=387
  _globals['_CYCLEBAZ']._serialized_start=390
  _globals['_CYCLEBAZ']._serialized_end=532
# @@protoc_insertion_point(module_scope)
