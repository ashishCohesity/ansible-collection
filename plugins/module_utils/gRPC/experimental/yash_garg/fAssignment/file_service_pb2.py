# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: experimental/yash_garg/fAssignment/file_service.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from open_util.net import protorpc_pb2 as open__util_dot_net_dot_protorpc__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n5experimental/yash_garg/fAssignment/file_service.proto\x12+cohesity.experimental.yash_garg.fAssignment\x1a\x1copen_util/net/protorpc.proto\"5\n\x11\x43reateFileRequest\x12\r\n\x05\x66name\x18\x01 \x02(\t\x12\x11\n\tthread_id\x18\x02 \x02(\x03\"\x83\x01\n\x10\x43reateFileResult\x12\x13\n\x0b\x61\x63k_message\x18\x01 \x02(\t\x12\x12\n\ntime_stamp\x18\x02 \x02(\x05\x12\x46\n\x06status\x18\x03 \x02(\x0e\x32\x36.cohesity.experimental.yash_garg.fAssignment.ErrorCode\"T\n\x10WriteFileRequest\x12\r\n\x05\x66name\x18\x01 \x02(\t\x12\x0e\n\x06offset\x18\x02 \x02(\x05\x12\x0e\n\x06length\x18\x03 \x02(\x05\x12\x11\n\tthread_id\x18\x04 \x02(\x03\"\x82\x01\n\x0fWriteFileResult\x12\x13\n\x0b\x61\x63k_message\x18\x01 \x02(\t\x12\x12\n\ntime_stamp\x18\x02 \x02(\x05\x12\x46\n\x06status\x18\x03 \x02(\x0e\x32\x36.cohesity.experimental.yash_garg.fAssignment.ErrorCode\"S\n\x0fReadFileRequest\x12\r\n\x05\x66name\x18\x01 \x02(\t\x12\x0e\n\x06offset\x18\x02 \x02(\x05\x12\x0e\n\x06length\x18\x03 \x02(\x05\x12\x11\n\tthread_id\x18\x04 \x02(\x03\"\x81\x01\n\x0eReadFileResult\x12\x13\n\x0b\x61\x63k_message\x18\x01 \x02(\t\x12\x12\n\ntime_stamp\x18\x02 \x02(\x05\x12\x46\n\x06status\x18\x03 \x02(\x0e\x32\x36.cohesity.experimental.yash_garg.fAssignment.ErrorCode*{\n\tErrorCode\x12\n\n\x06\x41LL_OK\x10\x01\x12\x17\n\x13\x46ILE_ALREADY_EXISTS\x10\x02\x12\x12\n\x0e\x46ILE_NOT_FOUND\x10\x03\x12\x1a\n\x16\x46ILE_WRITE_LIMIT_ERROR\x10\x04\x12\x19\n\x15\x46ILE_READ_LIMIT_ERROR\x10\x05\x32\xcd\x03\n\x0b\x46ileService\x12\x8d\x01\n\nCreateFile\x12>.cohesity.experimental.yash_garg.fAssignment.CreateFileRequest\x1a=.cohesity.experimental.yash_garg.fAssignment.CreateFileResult\"\x00\x12\x8f\x01\n\x0eWriteFileRange\x12=.cohesity.experimental.yash_garg.fAssignment.WriteFileRequest\x1a<.cohesity.experimental.yash_garg.fAssignment.WriteFileResult\"\x00\x12\x8c\x01\n\rReadFileRange\x12<.cohesity.experimental.yash_garg.fAssignment.ReadFileRequest\x1a;.cohesity.experimental.yash_garg.fAssignment.ReadFileResult\"\x00\x1a\r\x80\xf1\x04\xe8\x07\x88\xf1\x04\x01\x90\xf1\x04\x02\x42\x03\x80\x01\x01')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'experimental.yash_garg.fAssignment.file_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\200\001\001'
  _globals['_FILESERVICE']._loaded_options = None
  _globals['_FILESERVICE']._serialized_options = b'\200\361\004\350\007\210\361\004\001\220\361\004\002'
  _globals['_ERRORCODE']._serialized_start=757
  _globals['_ERRORCODE']._serialized_end=880
  _globals['_CREATEFILEREQUEST']._serialized_start=132
  _globals['_CREATEFILEREQUEST']._serialized_end=185
  _globals['_CREATEFILERESULT']._serialized_start=188
  _globals['_CREATEFILERESULT']._serialized_end=319
  _globals['_WRITEFILEREQUEST']._serialized_start=321
  _globals['_WRITEFILEREQUEST']._serialized_end=405
  _globals['_WRITEFILERESULT']._serialized_start=408
  _globals['_WRITEFILERESULT']._serialized_end=538
  _globals['_READFILEREQUEST']._serialized_start=540
  _globals['_READFILEREQUEST']._serialized_end=623
  _globals['_READFILERESULT']._serialized_start=626
  _globals['_READFILERESULT']._serialized_end=755
  _globals['_FILESERVICE']._serialized_start=883
  _globals['_FILESERVICE']._serialized_end=1344
# @@protoc_insertion_point(module_scope)
