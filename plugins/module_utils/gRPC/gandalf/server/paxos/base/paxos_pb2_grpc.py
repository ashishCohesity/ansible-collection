# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from gandalf.server.paxos.base import paxos_pb2 as gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in gandalf/server/paxos/base/paxos_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class PaxosRpcServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Prepare = channel.unary_unary(
                '/cohesity.gandalf.server_paxos.PaxosRpcService/Prepare',
                request_serializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PrepareArg.SerializeToString,
                response_deserializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PrepareResult.FromString,
                _registered_method=True)
        self.Accept = channel.unary_unary(
                '/cohesity.gandalf.server_paxos.PaxosRpcService/Accept',
                request_serializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.AcceptArg.SerializeToString,
                response_deserializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.AcceptResult.FromString,
                _registered_method=True)
        self.MarkChosen = channel.unary_unary(
                '/cohesity.gandalf.server_paxos.PaxosRpcService/MarkChosen',
                request_serializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.MarkChosenArg.SerializeToString,
                response_deserializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.MarkChosenResult.FromString,
                _registered_method=True)
        self.PullChosenInstance = channel.unary_unary(
                '/cohesity.gandalf.server_paxos.PaxosRpcService/PullChosenInstance',
                request_serializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PullChosenInstanceArg.SerializeToString,
                response_deserializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PullChosenInstanceResult.FromString,
                _registered_method=True)
        self.GarbageCollect = channel.unary_unary(
                '/cohesity.gandalf.server_paxos.PaxosRpcService/GarbageCollect',
                request_serializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.GarbageCollectArg.SerializeToString,
                response_deserializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.GarbageCollectResult.FromString,
                _registered_method=True)


class PaxosRpcServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Prepare(self, request, context):
        """Prepare phase of paxos.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Accept(self, request, context):
        """Accept phase of paxos.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkChosen(self, request, context):
        """After a value has been accepted by majority, proposer sends a MarkChosen
        message to all the acceptors so that they can mark the instance as chosen.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullChosenInstance(self, request, context):
        """This RPC is sent by a node that is requesting catchup data from another
        node.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GarbageCollect(self, request, context):
        """Request to garbage collect old instances that are no longer required.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaxosRpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Prepare': grpc.unary_unary_rpc_method_handler(
                    servicer.Prepare,
                    request_deserializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PrepareArg.FromString,
                    response_serializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PrepareResult.SerializeToString,
            ),
            'Accept': grpc.unary_unary_rpc_method_handler(
                    servicer.Accept,
                    request_deserializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.AcceptArg.FromString,
                    response_serializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.AcceptResult.SerializeToString,
            ),
            'MarkChosen': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkChosen,
                    request_deserializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.MarkChosenArg.FromString,
                    response_serializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.MarkChosenResult.SerializeToString,
            ),
            'PullChosenInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.PullChosenInstance,
                    request_deserializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PullChosenInstanceArg.FromString,
                    response_serializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PullChosenInstanceResult.SerializeToString,
            ),
            'GarbageCollect': grpc.unary_unary_rpc_method_handler(
                    servicer.GarbageCollect,
                    request_deserializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.GarbageCollectArg.FromString,
                    response_serializer=gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.GarbageCollectResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.gandalf.server_paxos.PaxosRpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.gandalf.server_paxos.PaxosRpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PaxosRpcService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Prepare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.gandalf.server_paxos.PaxosRpcService/Prepare',
            gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PrepareArg.SerializeToString,
            gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PrepareResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Accept(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.gandalf.server_paxos.PaxosRpcService/Accept',
            gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.AcceptArg.SerializeToString,
            gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.AcceptResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MarkChosen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.gandalf.server_paxos.PaxosRpcService/MarkChosen',
            gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.MarkChosenArg.SerializeToString,
            gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.MarkChosenResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PullChosenInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.gandalf.server_paxos.PaxosRpcService/PullChosenInstance',
            gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PullChosenInstanceArg.SerializeToString,
            gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.PullChosenInstanceResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GarbageCollect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.gandalf.server_paxos.PaxosRpcService/GarbageCollect',
            gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.GarbageCollectArg.SerializeToString,
            gandalf_dot_server_dot_paxos_dot_base_dot_paxos__pb2.GarbageCollectResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
