# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: genie/base/error.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16genie/base/error.proto\x12\x0e\x63ohesity.genie\"\xd4\x03\n\nErrorProto\x12\x38\n\x05\x65rror\x18\x01 \x01(\x0e\x32\x1f.cohesity.genie.ErrorProto.Type:\x08kNoError\x12\x15\n\rerror_message\x18\x02 \x01(\t\"\xf4\x02\n\x04Type\x12\x0c\n\x08kNoError\x10\x00\x12\n\n\x06kRetry\x10\x01\x12\x0e\n\nkNotMaster\x10\x02\x12\x10\n\x0ckScribeError\x10\x03\x12\x13\n\x0fkInvalidRequest\x10\x04\x12\x12\n\x0ekMasterUnknown\x10\x05\x12\x0c\n\x08kPartial\x10\x06\x12\x11\n\rkGandalfError\x10\x07\x12\x15\n\x11kIpmiNotReachable\x10\x08\x12\x10\n\x0ckNodeUnknown\x10\t\x12\x0e\n\nkConnError\x10\n\x12\x11\n\rkUserNotFound\x10\x0b\x12\x17\n\x13kInvalidCredentials\x10\x0c\x12\x14\n\x10kClusterNotFound\x10\r\x12\x12\n\x0ekAlreadyExists\x10\x0e\x12\x12\n\x0ekNotifNotFound\x10\x0f\x12\x13\n\x0fkEntityNotFound\x10\x10\x12\x14\n\x10kInvalidResponse\x10\x11\x12\x18\n\x14kInternalServerError\x10\x12\x42\x15Z\x13genie/base/error.pb')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'genie.base.error_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\023genie/base/error.pb'
  _globals['_ERRORPROTO']._serialized_start=43
  _globals['_ERRORPROTO']._serialized_end=511
  _globals['_ERRORPROTO_TYPE']._serialized_start=139
  _globals['_ERRORPROTO_TYPE']._serialized_end=511
# @@protoc_insertion_point(module_scope)
