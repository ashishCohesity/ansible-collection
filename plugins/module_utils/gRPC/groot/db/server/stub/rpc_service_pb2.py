# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: groot/db/server/stub/rpc_service.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from open_util.net import protorpc_pb2 as open__util_dot_net_dot_protorpc__pb2
from groot.base import error_pb2 as groot_dot_base_dot_error__pb2
from groot.db.base import reporting_dao_pb2 as groot_dot_db_dot_base_dot_reporting__dao__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&groot/db/server/stub/rpc_service.proto\x12\x1d\x63ohesity.groot.db.server.stub\x1a\x1copen_util/net/protorpc.proto\x1a\x16groot/base/error.proto\x1a!groot/db/base/reporting_dao.proto\"\xe6\x01\n\x12\x45xecuteDdlQueryArg\x12\x10\n\x08\x65poch_id\x18\x01 \x01(\x03\x12O\n\nquery_type\x18\x02 \x02(\x0e\x32;.cohesity.groot.db.server.stub.ExecuteDdlQueryArg.QueryType\x12\r\n\x05query\x18\x03 \x02(\x0c\"^\n\tQueryType\x12\r\n\tkCreateDb\x10\x01\x12\r\n\tkDeleteDb\x10\x02\x12\x10\n\x0ckCreateTable\x10\x03\x12\x10\n\x0ckDeleteTable\x10\x04\x12\x0f\n\x0bkAlterTable\x10\x05\"B\n\x15\x45xecuteDdlQueryResult\x12)\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1a.cohesity.groot.ErrorProto\"\xbe\x01\n\x14\x45xecuteWriteQueryArg\x12\x10\n\x08\x65poch_id\x18\x01 \x01(\x03\x12Q\n\nquery_type\x18\x02 \x02(\x0e\x32=.cohesity.groot.db.server.stub.ExecuteWriteQueryArg.QueryType\x12\r\n\x05query\x18\x03 \x02(\x0c\"2\n\tQueryType\x12\x0b\n\x07kInsert\x10\x01\x12\x0b\n\x07kDelete\x10\x02\x12\x0b\n\x07kUpdate\x10\x03\"D\n\x17\x45xecuteWriteQueryResult\x12)\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1a.cohesity.groot.ErrorProto\"1\n\x05Range\x12\x13\n\x0bupper_limit\x18\x01 \x02(\x03\x12\x13\n\x0blower_limit\x18\x02 \x02(\x03\"\xd5\x17\n\x0eUpdateTableArg\x12\x10\n\x08\x65poch_id\x18\x01 \x01(\x03\x12\x12\n\ntable_name\x18\x02 \x02(\t\x12@\n\x12\x62\x61\x63kup_job_dao_vec\x18\x03 \x03(\x0b\x32$.cohesity.groot.db.base.BackupJobDao\x12N\n\x19registered_source_dao_vec\x18\x04 \x03(\x0b\x32+.cohesity.groot.db.base.RegisteredSourceDao\x12\x42\n\x13leaf_entity_dao_vec\x18\x05 \x03(\x0b\x32%.cohesity.groot.db.base.LeafEntityDao\x12@\n\x12job_entity_dao_vec\x18\x18 \x03(\x0b\x32$.cohesity.groot.db.base.JobEntityDao\x12;\n\x0f\x63luster_dao_vec\x18\x0c \x03(\x0b\x32\".cohesity.groot.db.base.ClusterDao\x12?\n\x11partition_dao_vec\x18\r \x03(\x0b\x32$.cohesity.groot.db.base.PartitionDao\x12\x35\n\x0crack_dao_vec\x18\x0e \x03(\x0b\x32\x1f.cohesity.groot.db.base.RackDao\x12;\n\x0f\x63hassis_dao_vec\x18\x0f \x03(\x0b\x32\".cohesity.groot.db.base.ChassisDao\x12\x35\n\x0cnode_dao_vec\x18\x10 \x03(\x0b\x32\x1f.cohesity.groot.db.base.NodeDao\x12<\n\x10view_box_dao_vec\x18\x11 \x03(\x0b\x32\".cohesity.groot.db.base.ViewBoxDao\x12\x35\n\x0cview_dao_vec\x18\x16 \x03(\x0b\x32\x1f.cohesity.groot.db.base.ViewDao\x12@\n\x12view_alias_dao_vec\x18\x17 \x03(\x0b\x32$.cohesity.groot.db.base.ViewAliasDao\x12J\n\x17\x61rchival_target_dao_vec\x18\x12 \x03(\x0b\x32).cohesity.groot.db.base.ArchivalTargetDao\x12:\n\x0fjob_run_dao_vec\x18\x06 \x03(\x0b\x32!.cohesity.groot.db.base.JobRunDao\x12G\n\x16job_run_entity_dao_vec\x18\x07 \x03(\x0b\x32\'.cohesity.groot.db.base.JobRunEntityDao\x12Q\n\x1bjob_run_replication_dao_vec\x18\x08 \x03(\x0b\x32,.cohesity.groot.db.base.JobRunReplicationDao\x12^\n\"job_run_replication_entity_dao_vec\x18\t \x03(\x0b\x32\x32.cohesity.groot.db.base.JobRunReplicationEntityDao\x12K\n\x18job_run_archival_dao_vec\x18\n \x03(\x0b\x32).cohesity.groot.db.base.JobRunArchivalDao\x12S\n\x1cio_performance_stats_dao_vec\x18\x13 \x03(\x0b\x32-.cohesity.groot.db.base.IOPerformanceStatsDao\x12S\n\x1cresource_usage_stats_dao_vec\x18\x14 \x03(\x0b\x32-.cohesity.groot.db.base.ResourceUsageStatsDao\x12Q\n\x1bstorage_usage_stats_dao_vec\x18\x15 \x03(\x0b\x32,.cohesity.groot.db.base.StorageUsageStatsDao\x12H\n\x16remote_cluster_dao_vec\x18\x19 \x03(\x0b\x32(.cohesity.groot.db.base.RemoteClusterDao\x12X\n\x1fremote_cluster_view_box_dao_vec\x18\x1a \x03(\x0b\x32/.cohesity.groot.db.base.RemoteClusterViewBoxDao\x12N\n\x19protection_policy_dao_vec\x18\x1b \x03(\x0b\x32+.cohesity.groot.db.base.ProtectionPolicyDao\x12K\n\x18\x62\x61\x63k_up_schedule_dao_vec\x18\x1c \x03(\x0b\x32).cohesity.groot.db.base.BackUpScheduleDao\x12\x61\n#policy_replication_schedule_dao_vec\x18\x1d \x03(\x0b\x32\x34.cohesity.groot.db.base.PolicyReplicationScheduleDao\x12[\n policy_archival_schedule_dao_vec\x18\x1e \x03(\x0b\x32\x31.cohesity.groot.db.base.PolicyArchivalScheduleDao\x12J\n\x17restored_object_dao_vec\x18\x1f \x03(\x0b\x32).cohesity.groot.db.base.RestoredObjectDao\x12\x44\n\x14restore_task_dao_vec\x18- \x03(\x0b\x32&.cohesity.groot.db.base.RestoreTaskDao\x12\x39\n\x0etenant_dao_vec\x18  \x03(\x0b\x32!.cohesity.groot.db.base.TenantDao\x12P\n\x1btenant_view_box_map_dao_vec\x18! \x03(\x0b\x32+.cohesity.groot.db.base.TenantViewBoxMapDao\x12\x62\n$tenant_protection_policy_map_dao_vec\x18\" \x03(\x0b\x32\x34.cohesity.groot.db.base.TenantProtectionPolicyMapDao\x12Q\n\x1b\x61pollo_pipeline_run_dao_vec\x18$ \x03(\x0b\x32,.cohesity.groot.db.base.ApolloPipelineRunDao\x12G\n\x16yoda_index_run_dao_vec\x18% \x03(\x0b\x32\'.cohesity.groot.db.base.YodaIndexRunDao\x12S\n\x1ctenant_storage_stats_dao_vec\x18\' \x03(\x0b\x32-.cohesity.groot.db.base.TenantStorageStatsDao\x12O\n\x1aview_storage_stats_dao_vec\x18( \x03(\x0b\x32+.cohesity.groot.db.base.ViewStorageStatsDao\x12M\n\x19job_storage_stats_dao_vec\x18) \x03(\x0b\x32*.cohesity.groot.db.base.JobStorageStatsDao\x12\x11\n\tparent_id\x18\x0b \x01(\x03\x12;\n\rview_id_range\x18& \x01(\x0b\x32$.cohesity.groot.db.server.stub.Range\x12\x14\n\x0cusing_pubsub\x18# \x01(\x08\x12\x1a\n\x12leaf_entity_id_vec\x18* \x03(\x03\x12\x1e\n\x0fmark_as_deleted\x18+ \x01(\x08:\x05\x66\x61lse\x12 \n\x18registered_source_id_vec\x18, \x03(\x03\">\n\x11UpdateTableResult\x12)\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1a.cohesity.groot.ErrorProto2\x87\x03\n\nRpcService\x12|\n\x0f\x45xecuteDdlQuery\x12\x31.cohesity.groot.db.server.stub.ExecuteDdlQueryArg\x1a\x34.cohesity.groot.db.server.stub.ExecuteDdlQueryResult\"\x00\x12\x82\x01\n\x11\x45xecuteWriteQuery\x12\x33.cohesity.groot.db.server.stub.ExecuteWriteQueryArg\x1a\x36.cohesity.groot.db.server.stub.ExecuteWriteQueryResult\"\x00\x12p\n\x0bUpdateTable\x12-.cohesity.groot.db.server.stub.UpdateTableArg\x1a\x30.cohesity.groot.db.server.stub.UpdateTableResult\"\x00\x1a\x04\x88\xf1\x04\x01\x42\x03\x80\x01\x01')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'groot.db.server.stub.rpc_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\200\001\001'
  _globals['_RPCSERVICE']._loaded_options = None
  _globals['_RPCSERVICE']._serialized_options = b'\210\361\004\001'
  _globals['_EXECUTEDDLQUERYARG']._serialized_start=163
  _globals['_EXECUTEDDLQUERYARG']._serialized_end=393
  _globals['_EXECUTEDDLQUERYARG_QUERYTYPE']._serialized_start=299
  _globals['_EXECUTEDDLQUERYARG_QUERYTYPE']._serialized_end=393
  _globals['_EXECUTEDDLQUERYRESULT']._serialized_start=395
  _globals['_EXECUTEDDLQUERYRESULT']._serialized_end=461
  _globals['_EXECUTEWRITEQUERYARG']._serialized_start=464
  _globals['_EXECUTEWRITEQUERYARG']._serialized_end=654
  _globals['_EXECUTEWRITEQUERYARG_QUERYTYPE']._serialized_start=604
  _globals['_EXECUTEWRITEQUERYARG_QUERYTYPE']._serialized_end=654
  _globals['_EXECUTEWRITEQUERYRESULT']._serialized_start=656
  _globals['_EXECUTEWRITEQUERYRESULT']._serialized_end=724
  _globals['_RANGE']._serialized_start=726
  _globals['_RANGE']._serialized_end=775
  _globals['_UPDATETABLEARG']._serialized_start=778
  _globals['_UPDATETABLEARG']._serialized_end=3807
  _globals['_UPDATETABLERESULT']._serialized_start=3809
  _globals['_UPDATETABLERESULT']._serialized_end=3871
  _globals['_RPCSERVICE']._serialized_start=3874
  _globals['_RPCSERVICE']._serialized_end=4265
# @@protoc_insertion_point(module_scope)
