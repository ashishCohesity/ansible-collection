# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: helios/base/cluster_upgrade_state.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\'helios/base/cluster_upgrade_state.proto\x12\x14\x63ohesity.helios.base\"\x98\x01\n\x13\x43lusterUpgradeState\x12\x1a\n\x12\x63urrent_sw_version\x18\x01 \x01(\t\x12\x19\n\x11target_sw_version\x18\x02 \x01(\t\x12J\n\x16\x63urrent_upgrade_status\x18\x03 \x01(\x0b\x32*.cohesity.helios.base.CurrentUpgradeStatus\"\xd4\x01\n\x14\x43urrentUpgradeStatus\x12?\n\x05state\x18\x01 \x01(\x0e\x32\x30.cohesity.helios.base.CurrentUpgradeStatus.State\x12\x1b\n\x13percentage_finished\x18\x02 \x01(\x03\x12\x0f\n\x07message\x18\x03 \x01(\t\"M\n\x05State\x12\t\n\x05kNone\x10\x00\x12\x0c\n\x08kPending\x10\x01\x12\x0f\n\x0bkInProgress\x10\x02\x12\x0b\n\x07kFailed\x10\x03\x12\r\n\tkFinished\x10\x04\x42&Z$helios/base/cluster_upgrade_state.pb')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'helios.base.cluster_upgrade_state_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z$helios/base/cluster_upgrade_state.pb'
  _globals['_CLUSTERUPGRADESTATE']._serialized_start=66
  _globals['_CLUSTERUPGRADESTATE']._serialized_end=218
  _globals['_CURRENTUPGRADESTATUS']._serialized_start=221
  _globals['_CURRENTUPGRADESTATUS']._serialized_end=433
  _globals['_CURRENTUPGRADESTATUS_STATE']._serialized_start=356
  _globals['_CURRENTUPGRADESTATUS_STATE']._serialized_end=433
# @@protoc_insertion_point(module_scope)
