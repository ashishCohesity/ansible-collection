# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from helios.hcm.api.v1 import api_pb2 as helios_dot_hcm_dot_api_dot_v1_dot_api__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in helios/hcm/api/v1/api_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class CertApiStub(object):
    """-----------------------------------------------------------------------------

    GRPC service for Cert Api's.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddCAChain = channel.unary_unary(
                '/hcm.v1.CertApi/AddCAChain',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.AddCAChainReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.AddCAChainResp.FromString,
                _registered_method=True)
        self.CreateDMaaSClusterCerts = channel.unary_unary(
                '/hcm.v1.CertApi/CreateDMaaSClusterCerts',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateDMaaSClusterCertsReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateDMaaSClusterCertsResp.FromString,
                _registered_method=True)
        self.CreateTenantCerts = channel.unary_unary(
                '/hcm.v1.CertApi/CreateTenantCerts',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateTenantCertReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateTenantCertResp.FromString,
                _registered_method=True)
        self.CreateRigelCerts = channel.unary_unary(
                '/hcm.v1.CertApi/CreateRigelCerts',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateRigelCertReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateRigelCertResp.FromString,
                _registered_method=True)
        self.CreateOnPremClusterCerts = channel.unary_unary(
                '/hcm.v1.CertApi/CreateOnPremClusterCerts',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateOnPremClusterCertReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateOnPremClusterCertResp.FromString,
                _registered_method=True)
        self.CreateCohesionApplianceCerts = channel.unary_unary(
                '/hcm.v1.CertApi/CreateCohesionApplianceCerts',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateCohesionApplianceCertReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateCohesionApplianceCertResp.FromString,
                _registered_method=True)
        self.RevokeCert = channel.unary_unary(
                '/hcm.v1.CertApi/RevokeCert',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeCertReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeCertResp.FromString,
                _registered_method=True)
        self.CheckCertificateStatus = channel.unary_unary(
                '/hcm.v1.CertApi/CheckCertificateStatus',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CertStatusReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CertStatusResp.FromString,
                _registered_method=True)
        self.FetchCAChain = channel.unary_unary(
                '/hcm.v1.CertApi/FetchCAChain',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchCAChainsReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchCAChainsResp.FromString,
                _registered_method=True)
        self.CreateClaimToken = channel.unary_unary(
                '/hcm.v1.CertApi/CreateClaimToken',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateClaimTokenReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateClaimTokenResp.FromString,
                _registered_method=True)
        self.ValidateToken = channel.unary_unary(
                '/hcm.v1.CertApi/ValidateToken',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ValidateTokenReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ValidateTokenResp.FromString,
                _registered_method=True)
        self.FetchRigelClaimToken = channel.unary_unary(
                '/hcm.v1.CertApi/FetchRigelClaimToken',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchRigelTokenReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchRigelTokenResp.FromString,
                _registered_method=True)
        self.CreateAgentCerts = channel.unary_unary(
                '/hcm.v1.CertApi/CreateAgentCerts',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateAgentCertReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateAgentCertResp.FromString,
                _registered_method=True)
        self.ListTokens = channel.unary_unary(
                '/hcm.v1.CertApi/ListTokens',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ListTokensReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ListTokensResp.FromString,
                _registered_method=True)
        self.RevokeToken = channel.unary_unary(
                '/hcm.v1.CertApi/RevokeToken',
                request_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeTokenReq.SerializeToString,
                response_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeTokenResp.FromString,
                _registered_method=True)


class CertApiServicer(object):
    """-----------------------------------------------------------------------------

    GRPC service for Cert Api's.

    """

    def AddCAChain(self, request, context):
        """Rpc to add a new CA Chain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDMaaSClusterCerts(self, request, context):
        """Rpc to create DMaaS client certs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTenantCerts(self, request, context):
        """Rpc to create tenant certificates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRigelCerts(self, request, context):
        """Rpc to create rigel certificates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOnPremClusterCerts(self, request, context):
        """Rpc to create regular cluster certificates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCohesionApplianceCerts(self, request, context):
        """Rpc to create cohesion appliance certificates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeCert(self, request, context):
        """Rpc to revoke the certificate.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckCertificateStatus(self, request, context):
        """Rpc to check certificate status.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchCAChain(self, request, context):
        """Rpc to fetch CA chain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateClaimToken(self, request, context):
        """Rpc to create a claim token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateToken(self, request, context):
        """Rpc to validate claim token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchRigelClaimToken(self, request, context):
        """Rpc to fetch rigel claim token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAgentCerts(self, request, context):
        """Rpc to create agent certificate.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTokens(self, request, context):
        """RPC to fetch valid claim tokens for an account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeToken(self, request, context):
        """RPC to revoke a valid token. This can be used by user to invalidate an
        existing valid token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CertApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddCAChain': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCAChain,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.AddCAChainReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.AddCAChainResp.SerializeToString,
            ),
            'CreateDMaaSClusterCerts': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDMaaSClusterCerts,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateDMaaSClusterCertsReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateDMaaSClusterCertsResp.SerializeToString,
            ),
            'CreateTenantCerts': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTenantCerts,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateTenantCertReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateTenantCertResp.SerializeToString,
            ),
            'CreateRigelCerts': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRigelCerts,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateRigelCertReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateRigelCertResp.SerializeToString,
            ),
            'CreateOnPremClusterCerts': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOnPremClusterCerts,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateOnPremClusterCertReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateOnPremClusterCertResp.SerializeToString,
            ),
            'CreateCohesionApplianceCerts': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCohesionApplianceCerts,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateCohesionApplianceCertReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateCohesionApplianceCertResp.SerializeToString,
            ),
            'RevokeCert': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeCert,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeCertReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeCertResp.SerializeToString,
            ),
            'CheckCertificateStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckCertificateStatus,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CertStatusReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CertStatusResp.SerializeToString,
            ),
            'FetchCAChain': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchCAChain,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchCAChainsReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchCAChainsResp.SerializeToString,
            ),
            'CreateClaimToken': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateClaimToken,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateClaimTokenReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateClaimTokenResp.SerializeToString,
            ),
            'ValidateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateToken,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ValidateTokenReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ValidateTokenResp.SerializeToString,
            ),
            'FetchRigelClaimToken': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchRigelClaimToken,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchRigelTokenReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchRigelTokenResp.SerializeToString,
            ),
            'CreateAgentCerts': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAgentCerts,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateAgentCertReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateAgentCertResp.SerializeToString,
            ),
            'ListTokens': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTokens,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ListTokensReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ListTokensResp.SerializeToString,
            ),
            'RevokeToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeToken,
                    request_deserializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeTokenReq.FromString,
                    response_serializer=helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeTokenResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hcm.v1.CertApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('hcm.v1.CertApi', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CertApi(object):
    """-----------------------------------------------------------------------------

    GRPC service for Cert Api's.

    """

    @staticmethod
    def AddCAChain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/AddCAChain',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.AddCAChainReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.AddCAChainResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateDMaaSClusterCerts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/CreateDMaaSClusterCerts',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateDMaaSClusterCertsReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateDMaaSClusterCertsResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateTenantCerts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/CreateTenantCerts',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateTenantCertReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateTenantCertResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateRigelCerts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/CreateRigelCerts',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateRigelCertReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateRigelCertResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateOnPremClusterCerts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/CreateOnPremClusterCerts',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateOnPremClusterCertReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateOnPremClusterCertResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCohesionApplianceCerts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/CreateCohesionApplianceCerts',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateCohesionApplianceCertReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateCohesionApplianceCertResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RevokeCert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/RevokeCert',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeCertReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeCertResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckCertificateStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/CheckCertificateStatus',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CertStatusReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CertStatusResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchCAChain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/FetchCAChain',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchCAChainsReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchCAChainsResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateClaimToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/CreateClaimToken',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateClaimTokenReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateClaimTokenResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/ValidateToken',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ValidateTokenReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ValidateTokenResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchRigelClaimToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/FetchRigelClaimToken',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchRigelTokenReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.FetchRigelTokenResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateAgentCerts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/CreateAgentCerts',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateAgentCertReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.CreateAgentCertResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListTokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/ListTokens',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ListTokensReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.ListTokensResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RevokeToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hcm.v1.CertApi/RevokeToken',
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeTokenReq.SerializeToString,
            helios_dot_hcm_dot_api_dot_v1_dot_api__pb2.RevokeTokenResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
