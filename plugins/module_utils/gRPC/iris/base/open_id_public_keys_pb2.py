# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: iris/base/open_id_public_keys.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n#iris/base/open_id_public_keys.proto\x12\rcohesity.iris\"\xdb\x02\n\x15OpenIdPublicKeysProto\x12\x12\n\x07version\x18\x01 \x01(\x05:\x01\x31\x12Q\n\x14open_id_provider_vec\x18\x02 \x03(\x0b\x32\x33.cohesity.iris.OpenIdPublicKeysProto.OpenIdProvider\x1a\xda\x01\n\x0eOpenIdProvider\x12\x0e\n\x06\x64omain\x18\x01 \x02(\t\x12$\n\x1clast_updated_timestamp_usecs\x18\x02 \x02(\x03\x12U\n\x0epublic_key_vec\x18\x03 \x03(\x0b\x32=.cohesity.iris.OpenIdPublicKeysProto.OpenIdProvider.PublicKey\x1a;\n\tPublicKey\x12\x0b\n\x03x5t\x18\x01 \x02(\t\x12\x0b\n\x03x5c\x18\x03 \x01(\t\x12\t\n\x01n\x18\x04 \x01(\t\x12\t\n\x01\x65\x18\x05 \x01(\tB\"Z iris/base/open_id_public_keys.pb')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'iris.base.open_id_public_keys_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z iris/base/open_id_public_keys.pb'
  _globals['_OPENIDPUBLICKEYSPROTO']._serialized_start=55
  _globals['_OPENIDPUBLICKEYSPROTO']._serialized_end=402
  _globals['_OPENIDPUBLICKEYSPROTO_OPENIDPROVIDER']._serialized_start=184
  _globals['_OPENIDPUBLICKEYSPROTO_OPENIDPROVIDER']._serialized_end=402
  _globals['_OPENIDPUBLICKEYSPROTO_OPENIDPROVIDER_PUBLICKEY']._serialized_start=343
  _globals['_OPENIDPUBLICKEYSPROTO_OPENIDPROVIDER_PUBLICKEY']._serialized_end=402
# @@protoc_insertion_point(module_scope)
