# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: librarian/base/schema.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1blibrarian/base/schema.proto\x12\x12\x63ohesity.librarian\"\xe2\x05\n\x0bIndexSchema\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x17\n\x0cnum_replicas\x18\x02 \x01(\r:\x01\x31\x12#\n\x15\x64\x65\x66\x61ult_text_indexing\x18\x03 \x01(\x08:\x04true\x12N\n\x10\x66ield_properties\x18\x04 \x03(\x0b\x32\x34.cohesity.librarian.IndexSchema.FieldPropertiesEntry\x12\x19\n\x11sharding_function\x18\x05 \x01(\t\x12\x16\n\x0emerge_function\x18\x06 \x01(\t\x12\x19\n\x11\x64\x65letion_function\x18\x07 \x01(\t\x12\x1b\n\x13\x63omparator_function\x18\x08 \x01(\t\x12!\n\x19\x66ields_extractor_function\x18\t \x01(\t\x1a\xc2\x02\n\x0c\x46ieldMapping\x12\x13\n\x05index\x18\x01 \x01(\x08:\x04true\x12\x16\n\x08tokenize\x18\x02 \x01(\x08:\x04true\x12$\n\x15index_with_field_name\x18\x03 \x01(\x08:\x05\x66\x61lse\x12\x44\n\x04type\x18\x04 \x01(\x0e\x32\x36.cohesity.librarian.IndexSchema.FieldMapping.FieldType\x12\x13\n\x0b\x66orce_index\x18\x05 \x01(\x08\"\x83\x01\n\tFieldType\x12\x0b\n\x07kString\x10\x00\x12\n\n\x06kInt64\x10\x01\x12\x0b\n\x07kUInt64\x10\x02\x12\t\n\x05kBool\x10\x03\x12\x16\n\x12kMultiValuedString\x10\x04\x12\x15\n\x11kMultiValuedInt64\x10\x05\x12\x16\n\x12kMultiValuedUInt64\x10\x06\x1a\x64\n\x14\x46ieldPropertiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12;\n\x05value\x18\x02 \x01(\x0b\x32,.cohesity.librarian.IndexSchema.FieldMapping:\x02\x38\x01\"B\n\x0e\x41llIndexSchema\x12\x30\n\x07indices\x18\x01 \x03(\x0b\x32\x1f.cohesity.librarian.IndexSchema\"\x83\x08\n\x0cSearchClause\x12@\n\nterm_query\x18\x01 \x01(\x0b\x32*.cohesity.librarian.SearchClause.TermQueryH\x00\x12\x42\n\x0brange_query\x18\x02 \x01(\x0b\x32+.cohesity.librarian.SearchClause.RangeQueryH\x00\x12\x46\n\rboolean_query\x18\x03 \x01(\x0b\x32-.cohesity.librarian.SearchClause.BooleanQueryH\x00\x1a.\n\tTermQuery\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12\r\n\x05query\x18\x02 \x02(\t\x1a\x9c\x04\n\nRangeQuery\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12K\n\x0blower_bound\x18\x02 \x01(\x0b\x32\x36.cohesity.librarian.SearchClause.RangeQuery.RangeValue\x12\x63\n\x1blower_bound_comparison_type\x18\x03 \x01(\x0e\x32:.cohesity.librarian.SearchClause.RangeQuery.ComparisonType:\x02GT\x12K\n\x0bupper_bound\x18\x04 \x01(\x0b\x32\x36.cohesity.librarian.SearchClause.RangeQuery.RangeValue\x12\x63\n\x1bupper_bound_comparison_type\x18\x05 \x01(\x0e\x32:.cohesity.librarian.SearchClause.RangeQuery.ComparisonType:\x02LT\x1a\\\n\nRangeValue\x12\x15\n\x0bint64_value\x18\x01 \x01(\x03H\x00\x12\x16\n\x0cuint64_value\x18\x02 \x01(\x04H\x00\x12\x16\n\x0cstring_value\x18\x03 \x01(\tH\x00\x42\x07\n\x05value\"8\n\x0e\x43omparisonType\x12\x06\n\x02LT\x10\x00\x12\x06\n\x02LE\x10\x01\x12\x06\n\x02\x45Q\x10\x02\x12\x06\n\x02GT\x10\x03\x12\x06\n\x02GE\x10\x04\x1a\xcc\x01\n\x0c\x42ooleanQuery\x12\x45\n\x04type\x18\x01 \x02(\x0e\x32\x37.cohesity.librarian.SearchClause.BooleanQuery.QueryType\x12\x35\n\x0b\x63lauses_vec\x18\x02 \x03(\x0b\x32 .cohesity.librarian.SearchClause\">\n\tQueryType\x12\r\n\tkNegation\x10\x01\x12\x10\n\x0ckDisjunction\x10\x02\x12\x10\n\x0ckConjunction\x10\x03\x42\x07\n\x05queryB2\n\x16\x63om.cohesity.librarianZ\x18librarian/base/schema.pb')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'librarian.base.schema_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\026com.cohesity.librarianZ\030librarian/base/schema.pb'
  _globals['_INDEXSCHEMA_FIELDPROPERTIESENTRY']._loaded_options = None
  _globals['_INDEXSCHEMA_FIELDPROPERTIESENTRY']._serialized_options = b'8\001'
  _globals['_INDEXSCHEMA']._serialized_start=52
  _globals['_INDEXSCHEMA']._serialized_end=790
  _globals['_INDEXSCHEMA_FIELDMAPPING']._serialized_start=366
  _globals['_INDEXSCHEMA_FIELDMAPPING']._serialized_end=688
  _globals['_INDEXSCHEMA_FIELDMAPPING_FIELDTYPE']._serialized_start=557
  _globals['_INDEXSCHEMA_FIELDMAPPING_FIELDTYPE']._serialized_end=688
  _globals['_INDEXSCHEMA_FIELDPROPERTIESENTRY']._serialized_start=690
  _globals['_INDEXSCHEMA_FIELDPROPERTIESENTRY']._serialized_end=790
  _globals['_ALLINDEXSCHEMA']._serialized_start=792
  _globals['_ALLINDEXSCHEMA']._serialized_end=858
  _globals['_SEARCHCLAUSE']._serialized_start=861
  _globals['_SEARCHCLAUSE']._serialized_end=1888
  _globals['_SEARCHCLAUSE_TERMQUERY']._serialized_start=1083
  _globals['_SEARCHCLAUSE_TERMQUERY']._serialized_end=1129
  _globals['_SEARCHCLAUSE_RANGEQUERY']._serialized_start=1132
  _globals['_SEARCHCLAUSE_RANGEQUERY']._serialized_end=1672
  _globals['_SEARCHCLAUSE_RANGEQUERY_RANGEVALUE']._serialized_start=1522
  _globals['_SEARCHCLAUSE_RANGEQUERY_RANGEVALUE']._serialized_end=1614
  _globals['_SEARCHCLAUSE_RANGEQUERY_COMPARISONTYPE']._serialized_start=1616
  _globals['_SEARCHCLAUSE_RANGEQUERY_COMPARISONTYPE']._serialized_end=1672
  _globals['_SEARCHCLAUSE_BOOLEANQUERY']._serialized_start=1675
  _globals['_SEARCHCLAUSE_BOOLEANQUERY']._serialized_end=1879
  _globals['_SEARCHCLAUSE_BOOLEANQUERY_QUERYTYPE']._serialized_start=1817
  _globals['_SEARCHCLAUSE_BOOLEANQUERY_QUERYTYPE']._serialized_end=1879
# @@protoc_insertion_point(module_scope)
