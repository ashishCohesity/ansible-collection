# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from librarian.base import librarian_pb2 as librarian_dot_base_dot_librarian__pb2
from librarian.master.stub import rpc_service_pb2 as librarian_dot_master_dot_stub_dot_rpc__service__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in librarian/master/stub/rpc_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RpcServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateIndex = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/CreateIndex',
                request_serializer=librarian_dot_base_dot_librarian__pb2.CreateIndexArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.CreateIndexResult.FromString,
                _registered_method=True)
        self.DeleteIndex = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/DeleteIndex',
                request_serializer=librarian_dot_base_dot_librarian__pb2.DeleteIndexArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.DeleteIndexResult.FromString,
                _registered_method=True)
        self.DeleteCloudSearchIndex = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/DeleteCloudSearchIndex',
                request_serializer=librarian_dot_base_dot_librarian__pb2.DeleteIndexArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.DeleteIndexResult.FromString,
                _registered_method=True)
        self.UpdateIndex = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/UpdateIndex',
                request_serializer=librarian_dot_base_dot_librarian__pb2.UpdateIndexArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.UpdateIndexResult.FromString,
                _registered_method=True)
        self.GetIndexStatus = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/GetIndexStatus',
                request_serializer=librarian_dot_base_dot_librarian__pb2.GetIndexStatusArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.GetIndexStatusResult.FromString,
                _registered_method=True)
        self.PingMaster = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/PingMaster',
                request_serializer=librarian_dot_base_dot_librarian__pb2.PingRequest.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.PingResponse.FromString,
                _registered_method=True)
        self.InitiateDataStoreReshard = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/InitiateDataStoreReshard',
                request_serializer=librarian_dot_base_dot_librarian__pb2.InitiateDataStoreReshardArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.InitiateDataStoreReshardResult.FromString,
                _registered_method=True)
        self.UpdateIndexMigrationTaskStatus = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/UpdateIndexMigrationTaskStatus',
                request_serializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateIndexMigrationTaskStatusArg.SerializeToString,
                response_deserializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateIndexMigrationTaskStatusResult.FromString,
                _registered_method=True)
        self.UpdateReplicaStatus = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/UpdateReplicaStatus',
                request_serializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.SlaveReplicaStatusArg.SerializeToString,
                response_deserializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.SlaveReplicaStatusResult.FromString,
                _registered_method=True)
        self.UpdateBucketInstanceMetadata = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/UpdateBucketInstanceMetadata',
                request_serializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateBucketInstanceMetadataArg.SerializeToString,
                response_deserializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateBucketInstanceMetadataResult.FromString,
                _registered_method=True)
        self.GetBucketInstanceMetadata = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/GetBucketInstanceMetadata',
                request_serializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetBucketInstanceMetadataArg.SerializeToString,
                response_deserializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetBucketInstanceMetadataResult.FromString,
                _registered_method=True)
        self.GetIndicesToPrune = channel.unary_unary(
                '/cohesity.librarian.master.stub.RpcService/GetIndicesToPrune',
                request_serializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetIndicesToPruneArg.SerializeToString,
                response_deserializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetIndicesToPruneResult.FromString,
                _registered_method=True)


class RpcServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCloudSearchIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIndexStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PingMaster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitiateDataStoreReshard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateIndexMigrationTaskStatus(self, request, context):
        """//////////////////////////////////////////////////////////////////////////
        Internal APIs for master-slave communication.

        Updates status of task assigned to a slave.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateReplicaStatus(self, request, context):
        """Update status of replicas assigned to a slave.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBucketInstanceMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBucketInstanceMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIndicesToPrune(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIndex,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.CreateIndexArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.CreateIndexResult.SerializeToString,
            ),
            'DeleteIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteIndex,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.DeleteIndexArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.DeleteIndexResult.SerializeToString,
            ),
            'DeleteCloudSearchIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCloudSearchIndex,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.DeleteIndexArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.DeleteIndexResult.SerializeToString,
            ),
            'UpdateIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateIndex,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.UpdateIndexArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.UpdateIndexResult.SerializeToString,
            ),
            'GetIndexStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIndexStatus,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.GetIndexStatusArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.GetIndexStatusResult.SerializeToString,
            ),
            'PingMaster': grpc.unary_unary_rpc_method_handler(
                    servicer.PingMaster,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.PingRequest.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.PingResponse.SerializeToString,
            ),
            'InitiateDataStoreReshard': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateDataStoreReshard,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.InitiateDataStoreReshardArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.InitiateDataStoreReshardResult.SerializeToString,
            ),
            'UpdateIndexMigrationTaskStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateIndexMigrationTaskStatus,
                    request_deserializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateIndexMigrationTaskStatusArg.FromString,
                    response_serializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateIndexMigrationTaskStatusResult.SerializeToString,
            ),
            'UpdateReplicaStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateReplicaStatus,
                    request_deserializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.SlaveReplicaStatusArg.FromString,
                    response_serializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.SlaveReplicaStatusResult.SerializeToString,
            ),
            'UpdateBucketInstanceMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBucketInstanceMetadata,
                    request_deserializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateBucketInstanceMetadataArg.FromString,
                    response_serializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateBucketInstanceMetadataResult.SerializeToString,
            ),
            'GetBucketInstanceMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBucketInstanceMetadata,
                    request_deserializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetBucketInstanceMetadataArg.FromString,
                    response_serializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetBucketInstanceMetadataResult.SerializeToString,
            ),
            'GetIndicesToPrune': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIndicesToPrune,
                    request_deserializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetIndicesToPruneArg.FromString,
                    response_serializer=librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetIndicesToPruneResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.librarian.master.stub.RpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.librarian.master.stub.RpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RpcService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/CreateIndex',
            librarian_dot_base_dot_librarian__pb2.CreateIndexArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.CreateIndexResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/DeleteIndex',
            librarian_dot_base_dot_librarian__pb2.DeleteIndexArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.DeleteIndexResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCloudSearchIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/DeleteCloudSearchIndex',
            librarian_dot_base_dot_librarian__pb2.DeleteIndexArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.DeleteIndexResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/UpdateIndex',
            librarian_dot_base_dot_librarian__pb2.UpdateIndexArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.UpdateIndexResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetIndexStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/GetIndexStatus',
            librarian_dot_base_dot_librarian__pb2.GetIndexStatusArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.GetIndexStatusResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PingMaster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/PingMaster',
            librarian_dot_base_dot_librarian__pb2.PingRequest.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.PingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitiateDataStoreReshard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/InitiateDataStoreReshard',
            librarian_dot_base_dot_librarian__pb2.InitiateDataStoreReshardArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.InitiateDataStoreReshardResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateIndexMigrationTaskStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/UpdateIndexMigrationTaskStatus',
            librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateIndexMigrationTaskStatusArg.SerializeToString,
            librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateIndexMigrationTaskStatusResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateReplicaStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/UpdateReplicaStatus',
            librarian_dot_master_dot_stub_dot_rpc__service__pb2.SlaveReplicaStatusArg.SerializeToString,
            librarian_dot_master_dot_stub_dot_rpc__service__pb2.SlaveReplicaStatusResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateBucketInstanceMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/UpdateBucketInstanceMetadata',
            librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateBucketInstanceMetadataArg.SerializeToString,
            librarian_dot_master_dot_stub_dot_rpc__service__pb2.UpdateBucketInstanceMetadataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBucketInstanceMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/GetBucketInstanceMetadata',
            librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetBucketInstanceMetadataArg.SerializeToString,
            librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetBucketInstanceMetadataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetIndicesToPrune(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.master.stub.RpcService/GetIndicesToPrune',
            librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetIndicesToPruneArg.SerializeToString,
            librarian_dot_master_dot_stub_dot_rpc__service__pb2.GetIndicesToPruneResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
