# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from librarian.base import librarian_pb2 as librarian_dot_base_dot_librarian__pb2
from librarian.slave.stub import rpc_service_pb2 as librarian_dot_slave_dot_stub_dot_rpc__service__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in librarian/slave/stub/rpc_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RpcServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateConfig = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/UpdateConfig',
                request_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateConfigArg.SerializeToString,
                response_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateConfigResult.FromString,
                _registered_method=True)
        self.IndexMigrationTask = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/IndexMigrationTask',
                request_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.IndexMigrationTaskArg.SerializeToString,
                response_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.IndexMigrationTaskResult.FromString,
                _registered_method=True)
        self.CreateIndex = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/CreateIndex',
                request_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateIndexArg.SerializeToString,
                response_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateIndexResult.FromString,
                _registered_method=True)
        self.DeleteIndex = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/DeleteIndex',
                request_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.DeleteIndexArg.SerializeToString,
                response_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.DeleteIndexResult.FromString,
                _registered_method=True)
        self.UpdateIndex = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/UpdateIndex',
                request_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateIndexArg.SerializeToString,
                response_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateIndexResult.FromString,
                _registered_method=True)
        self.InsertOrUpdateDocuments = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/InsertOrUpdateDocuments',
                request_serializer=librarian_dot_base_dot_librarian__pb2.AddDocumentsArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.AddDocumentsResult.FromString,
                _registered_method=True)
        self.DeleteDocuments = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/DeleteDocuments',
                request_serializer=librarian_dot_base_dot_librarian__pb2.DeleteDocumentsArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.DeleteDocumentsResult.FromString,
                _registered_method=True)
        self.GetDocuments = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/GetDocuments',
                request_serializer=librarian_dot_base_dot_librarian__pb2.GetDocumentsArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.GetDocumentsResult.FromString,
                _registered_method=True)
        self.ScanDocuments = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/ScanDocuments',
                request_serializer=librarian_dot_base_dot_librarian__pb2.ScanDocumentsArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.GetDocumentsResult.FromString,
                _registered_method=True)
        self.UpdateDocuments = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/UpdateDocuments',
                request_serializer=librarian_dot_base_dot_librarian__pb2.UpdateDocumentsArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.UpdateDocumentsResult.FromString,
                _registered_method=True)
        self.ReplicateDocuments = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/ReplicateDocuments',
                request_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.ReplicateDocumentsArg.SerializeToString,
                response_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.ReplicateDocumentsResult.FromString,
                _registered_method=True)
        self.CreateReplicaHandle = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/CreateReplicaHandle',
                request_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateReplicaHandleArg.SerializeToString,
                response_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateReplicaHandleResult.FromString,
                _registered_method=True)
        self.ReleaseIndex = channel.unary_unary(
                '/cohesity.librarian.slave.stub.RpcService/ReleaseIndex',
                request_serializer=librarian_dot_base_dot_librarian__pb2.ReleaseIndexArg.SerializeToString,
                response_deserializer=librarian_dot_base_dot_librarian__pb2.ReleaseIndexResult.FromString,
                _registered_method=True)


class RpcServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpdateConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IndexMigrationTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteIndex(self, request, context):
        """RPC call to delete index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertOrUpdateDocuments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDocuments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDocuments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanDocuments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDocuments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicateDocuments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateReplicaHandle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConfig,
                    request_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateConfigArg.FromString,
                    response_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateConfigResult.SerializeToString,
            ),
            'IndexMigrationTask': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexMigrationTask,
                    request_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.IndexMigrationTaskArg.FromString,
                    response_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.IndexMigrationTaskResult.SerializeToString,
            ),
            'CreateIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIndex,
                    request_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateIndexArg.FromString,
                    response_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateIndexResult.SerializeToString,
            ),
            'DeleteIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteIndex,
                    request_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.DeleteIndexArg.FromString,
                    response_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.DeleteIndexResult.SerializeToString,
            ),
            'UpdateIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateIndex,
                    request_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateIndexArg.FromString,
                    response_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateIndexResult.SerializeToString,
            ),
            'InsertOrUpdateDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertOrUpdateDocuments,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.AddDocumentsArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.AddDocumentsResult.SerializeToString,
            ),
            'DeleteDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDocuments,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.DeleteDocumentsArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.DeleteDocumentsResult.SerializeToString,
            ),
            'GetDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocuments,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.GetDocumentsArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.GetDocumentsResult.SerializeToString,
            ),
            'ScanDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanDocuments,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.ScanDocumentsArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.GetDocumentsResult.SerializeToString,
            ),
            'UpdateDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDocuments,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.UpdateDocumentsArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.UpdateDocumentsResult.SerializeToString,
            ),
            'ReplicateDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicateDocuments,
                    request_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.ReplicateDocumentsArg.FromString,
                    response_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.ReplicateDocumentsResult.SerializeToString,
            ),
            'CreateReplicaHandle': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateReplicaHandle,
                    request_deserializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateReplicaHandleArg.FromString,
                    response_serializer=librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateReplicaHandleResult.SerializeToString,
            ),
            'ReleaseIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseIndex,
                    request_deserializer=librarian_dot_base_dot_librarian__pb2.ReleaseIndexArg.FromString,
                    response_serializer=librarian_dot_base_dot_librarian__pb2.ReleaseIndexResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.librarian.slave.stub.RpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.librarian.slave.stub.RpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RpcService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpdateConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/UpdateConfig',
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateConfigArg.SerializeToString,
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateConfigResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IndexMigrationTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/IndexMigrationTask',
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.IndexMigrationTaskArg.SerializeToString,
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.IndexMigrationTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/CreateIndex',
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateIndexArg.SerializeToString,
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateIndexResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/DeleteIndex',
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.DeleteIndexArg.SerializeToString,
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.DeleteIndexResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/UpdateIndex',
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateIndexArg.SerializeToString,
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.UpdateIndexResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InsertOrUpdateDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/InsertOrUpdateDocuments',
            librarian_dot_base_dot_librarian__pb2.AddDocumentsArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.AddDocumentsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/DeleteDocuments',
            librarian_dot_base_dot_librarian__pb2.DeleteDocumentsArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.DeleteDocumentsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/GetDocuments',
            librarian_dot_base_dot_librarian__pb2.GetDocumentsArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.GetDocumentsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ScanDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/ScanDocuments',
            librarian_dot_base_dot_librarian__pb2.ScanDocumentsArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.GetDocumentsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/UpdateDocuments',
            librarian_dot_base_dot_librarian__pb2.UpdateDocumentsArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.UpdateDocumentsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReplicateDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/ReplicateDocuments',
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.ReplicateDocumentsArg.SerializeToString,
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.ReplicateDocumentsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateReplicaHandle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/CreateReplicaHandle',
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateReplicaHandleArg.SerializeToString,
            librarian_dot_slave_dot_stub_dot_rpc__service__pb2.CreateReplicaHandleResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReleaseIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.librarian.slave.stub.RpcService/ReleaseIndex',
            librarian_dot_base_dot_librarian__pb2.ReleaseIndexArg.SerializeToString,
            librarian_dot_base_dot_librarian__pb2.ReleaseIndexResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
