# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from magneto.agents.stub import agent_base_pb2 as magneto_dot_agents_dot_stub_dot_agent__base__pb2
from magneto.agents.stub import agent_param_pb2 as magneto_dot_agents_dot_stub_dot_agent__param__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in magneto/agents/stub/agent_rpc_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class AgentRpcServiceStub(object):
    """-----------------------------------------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterAgent = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/RegisterAgent',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RegisterAgentArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RegisterAgentResult.FromString,
                _registered_method=True)
        self.UnregisterAgent = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/UnregisterAgent',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnregisterAgentArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.GetAgentInfo = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/GetAgentInfo',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetAgentInfoArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetAgentInfoResult.FromString,
                _registered_method=True)
        self.FetchVolumeInfo = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/FetchVolumeInfo',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeInfoArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeInfoResult.FromString,
                _registered_method=True)
        self.GetHostInfo = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/GetHostInfo',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetHostInfoArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetHostInfoResult.FromString,
                _registered_method=True)
        self.PrepareVolumeSnapshot = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/PrepareVolumeSnapshot',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.PrepareVolumeSnapshotArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.PrepareVolumeSnapshotResult.FromString,
                _registered_method=True)
        self.TakeVolumeSnapshot = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/TakeVolumeSnapshot',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.TakeVolumeSnapshotArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.TakeVolumeSnapshotResult.FromString,
                _registered_method=True)
        self.FetchVolumeSnapshotInfo = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/FetchVolumeSnapshotInfo',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeSnapshotInfoArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeSnapshotInfoResult.FromString,
                _registered_method=True)
        self.FinalizeVolumeSnapshotMetadata = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/FinalizeVolumeSnapshotMetadata',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FinalizeVolumeSnapshotMetadataArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FinalizeVolumeSnapshotMetadataResult.FromString,
                _registered_method=True)
        self.FetchSerializedData = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/FetchSerializedData',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSerializedDataArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSerializedDataResult.FromString,
                _registered_method=True)
        self.NotifyVolumeBackupComplete = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/NotifyVolumeBackupComplete',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyVolumeBackupCompleteArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyVolumeBackupCompleteResult.FromString,
                _registered_method=True)
        self.DeleteVolumeSnapshot = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/DeleteVolumeSnapshot',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotResult.FromString,
                _registered_method=True)
        self.DeleteVolumeSnapshotGroup = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/DeleteVolumeSnapshotGroup',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotGroupArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotGroupResult.FromString,
                _registered_method=True)
        self.AbortVolumeSnapshot = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/AbortVolumeSnapshot',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.AbortVolumeSnapshotArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.AbortVolumeSnapshotResult.FromString,
                _registered_method=True)
        self.RestoreFromSnapshot = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/RestoreFromSnapshot',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RestoreFromSnapshotArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RestoreFromSnapshotResult.FromString,
                _registered_method=True)
        self.GetRestoreFromSnapshotProgress = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/GetRestoreFromSnapshotProgress',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetRestoreFromSnapshotProgressArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetRestoreFromSnapshotProgressResult.FromString,
                _registered_method=True)
        self.InitApplyChangedAreas = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/InitApplyChangedAreas',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.InitApplyChangedAreasArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.InitApplyChangedAreasResult.FromString,
                _registered_method=True)
        self.ApplyChangedAreas = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/ApplyChangedAreas',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ApplyChangedAreasArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ApplyChangedAreasResult.FromString,
                _registered_method=True)
        self.QueryApplyChangedAreas = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/QueryApplyChangedAreas',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.QueryApplyChangedAreasArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.QueryApplyChangedAreasResult.FromString,
                _registered_method=True)
        self.NotifyApplyChangedAreasDone = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/NotifyApplyChangedAreasDone',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyApplyChangedAreasDoneArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyApplyChangedAreasDoneResult.FromString,
                _registered_method=True)
        self.CancelTask = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/CancelTask',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelTaskArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelTaskResult.FromString,
                _registered_method=True)
        self.GetCancelTaskProgress = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/GetCancelTaskProgress',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCancelTaskProgressArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCancelTaskProgressResult.FromString,
                _registered_method=True)
        self.BringDisksOnline = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/BringDisksOnline',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.BringDisksOnlineArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.BringDisksOnlineResult.FromString,
                _registered_method=True)
        self.RemountDisks = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/RemountDisks',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RemountDisksArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RemountDisksResult.FromString,
                _registered_method=True)
        self.StopCBTOnVolumes = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/StopCBTOnVolumes',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.StopCBTOnVolumesArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.StopCBTOnVolumesResult.FromString,
                _registered_method=True)
        self.ReadVolume = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/ReadVolume',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadVolumeArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadVolumeResult.FromString,
                _registered_method=True)
        self.LockVolume = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/LockVolume',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.LockVolumeArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.UnlockVolume = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/UnlockVolume',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnlockVolumeArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.WriteVolume = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/WriteVolume',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteVolumeArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteVolumeResult.FromString,
                _registered_method=True)
        self.MountVirtualVolume = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/MountVirtualVolume',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountVirtualVolumeArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountVirtualVolumeResult.FromString,
                _registered_method=True)
        self.UnmountVirtualVolume = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/UnmountVirtualVolume',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnmountVirtualVolumeArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.MountNAS = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/MountNAS',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountNASArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountNASResult.FromString,
                _registered_method=True)
        self.UnmountNAS = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/UnmountNAS',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnmountNASArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.ListFiles = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/ListFiles',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ListFilesArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ListFilesResult.FromString,
                _registered_method=True)
        self.FetchFiles = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/FetchFiles',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchFilesArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchFilesResult.FromString,
                _registered_method=True)
        self.RunDiagnostics = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/RunDiagnostics',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunDiagnosticsArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunDiagnosticsResult.FromString,
                _registered_method=True)
        self.GetGFlagSettings = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/GetGFlagSettings',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetGFlagSettingsArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetGFlagSettingsResult.FromString,
                _registered_method=True)
        self.UpdateGFlagSettings = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/UpdateGFlagSettings',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UpdateGFlagSettingsArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.ReadFileBurst = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/ReadFileBurst',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadFileBurstArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadFileBurstResult.FromString,
                _registered_method=True)
        self.PrepareForShutdown = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/PrepareForShutdown',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.PrepareForShutdownArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.Terminate = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/Terminate',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.TerminateArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.InstallUpdate = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/InstallUpdate',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.InstallUpdateArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.GetInstallUpdateProgress = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/GetInstallUpdateProgress',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetInstallUpdateProgressArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetInstallUpdateProgressResult.FromString,
                _registered_method=True)
        self.GetServiceState = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/GetServiceState',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetServiceStateArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetServiceStateResult.FromString,
                _registered_method=True)
        self.ControlService = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/ControlService',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ControlServiceArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.StartCBMR = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/StartCBMR',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.StartCBMRArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.CancelCBMR = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/CancelCBMR',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelCBMRArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.GetCBMRProgress = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/GetCBMRProgress',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCBMRProgressArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCBMRProgressResult.FromString,
                _registered_method=True)
        self.GetFileChangeAreas = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/GetFileChangeAreas',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetFileChangeAreasArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetFileChangeAreasResult.FromString,
                _registered_method=True)
        self.CloseDisk = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/CloseDisk',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CloseDiskArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.StartScriptExecution = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/StartScriptExecution',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.StartScriptExecutionArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.StartScriptExecutionResult.FromString,
                _registered_method=True)
        self.GetScriptExecutionStatus = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/GetScriptExecutionStatus',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetScriptExecutionStatusArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetScriptExecutionStatusResult.FromString,
                _registered_method=True)
        self.CancelScriptExecution = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/CancelScriptExecution',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelScriptExecutionArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelScriptExecutionResult.FromString,
                _registered_method=True)
        self.CleanupScriptExecutionState = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/CleanupScriptExecutionState',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CleanupScriptExecutionStateArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CleanupScriptExecutionStateResult.FromString,
                _registered_method=True)
        self.ExecuteAgentAction = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/ExecuteAgentAction',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ExecuteAgentActionArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ExecuteAgentActionResult.FromString,
                _registered_method=True)
        self.RunHostSettingsCheck = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/RunHostSettingsCheck',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunHostSettingsCheckArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunHostSettingsCheckResult.FromString,
                _registered_method=True)
        self.UploadCertToHost = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/UploadCertToHost',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UploadCertToHostArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.UpdateSourceThrottlingConfig = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/UpdateSourceThrottlingConfig',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UpdateSourceThrottlingConfigArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UpdateSourceThrottlingConfigResult.FromString,
                _registered_method=True)
        self.FetchSourceThrottlingConfig = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/FetchSourceThrottlingConfig',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSourceThrottlingConfigArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSourceThrottlingConfigResult.FromString,
                _registered_method=True)
        self.SaveAgentConfigToDisk = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/SaveAgentConfigToDisk',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.SaveAgentConfigToDiskArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.SaveAgentConfigToDiskResult.FromString,
                _registered_method=True)
        self.LoadAgentConfigFromDisk = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/LoadAgentConfigFromDisk',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.LoadAgentConfigFromDiskArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.LoadAgentConfigFromDiskResult.FromString,
                _registered_method=True)
        self.WriteFile = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/WriteFile',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteFileArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteFileResult.FromString,
                _registered_method=True)
        self.PerformCoBMRAction = channel.unary_unary(
                '/cohesity.magneto.agents.stub.AgentRpcService/PerformCoBMRAction',
                request_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.PerformCoBMRActionArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.PerformCoBMRActionResult.FromString,
                _registered_method=True)


class AgentRpcServiceServicer(object):
    """-----------------------------------------------------------------------------

    """

    def RegisterAgent(self, request, context):
        """Requests the agent to register with the cluster. If this is successful,
        calls are accepted only from this cluster and all others are rejected.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnregisterAgent(self, request, context):
        """Unregisters the agent with the cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAgentInfo(self, request, context):
        """Get information regarding the running agent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchVolumeInfo(self, request, context):
        """Fetch information regarding volumes on the system.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHostInfo(self, request, context):
        """Fetch information regarding the host system.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrepareVolumeSnapshot(self, request, context):
        """Prepare the volumes for taking the snapshot.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TakeVolumeSnapshot(self, request, context):
        """Take snapshot of the volumes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchVolumeSnapshotInfo(self, request, context):
        """Fetch volume snapshot information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinalizeVolumeSnapshotMetadata(self, request, context):
        """Finalizes the snapshot metadata.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchSerializedData(self, request, context):
        """Fetches serialized data.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyVolumeBackupComplete(self, request, context):
        """This method is invoked once the backup is complete.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteVolumeSnapshot(self, request, context):
        """Deletes the specified volume snapshot.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteVolumeSnapshotGroup(self, request, context):
        """Deletes the specified group of volume snapshots.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AbortVolumeSnapshot(self, request, context):
        """Aborts the specified volume snapshot.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreFromSnapshot(self, request, context):
        """Restores volumes, files, or applications from a snapshot.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRestoreFromSnapshotProgress(self, request, context):
        """Get the progress of restore volumes, files or application.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitApplyChangedAreas(self, request, context):
        """Initializes the target machine for applying changed areas.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyChangedAreas(self, request, context):
        """Applies changed areas to a file on the target machine.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryApplyChangedAreas(self, request, context):
        """Returns the progress for ApplyChangedAreas RPC.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyApplyChangedAreasDone(self, request, context):
        """Notifies that all changed areas have been applied on the target machine.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelTask(self, request, context):
        """Submits a request to cancel an ongoing backup or restore task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCancelTaskProgress(self, request, context):
        """Get the progress of a task cancellation request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BringDisksOnline(self, request, context):
        """Bring the specified disks online on the system.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemountDisks(self, request, context):
        """Unmounts and remounts the specified disks.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopCBTOnVolumes(self, request, context):
        """Stops CBT driver on the specified volumes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadVolume(self, request, context):
        """Method to read data from a volume.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LockVolume(self, request, context):
        """Method to lock a volume for writing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlockVolume(self, request, context):
        """Method to lock a volume for writing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteVolume(self, request, context):
        """Method to write data into a volume. Note, the volume must be locked first!
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MountVirtualVolume(self, request, context):
        """Mounts a volume from virtual disk(s) to local directory.
        Virtual disk can be .vhd/.vhdx/.vmdk format.
        Volume can be simple volume or span over multiple virtual disks (e.g.
        LVM).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnmountVirtualVolume(self, request, context):
        """Unmounts a previously mapped volume from virtual disks.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MountNAS(self, request, context):
        """Mounts a remote SMB/CIFS/NFS share to a local directory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnmountNAS(self, request, context):
        """Unmounts a previously remote share.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFiles(self, request, context):
        """Lists the files exposed by the Agent. These are retrievable via the
        FetchFiles() RPC.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchFiles(self, request, context):
        """Fetches the files listed by the Agent in FetchFeiles() RPC.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunDiagnostics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGFlagSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateGFlagSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadFileBurst(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrepareForShutdown(self, request, context):
        """Notify the agent that it is going to be shut down, so it can take any
        necessary actions before the shutdown.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Terminate(self, request, context):
        """Terminate the agent. Useful for testing purpose. This will be honoured
        only in debug builds.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstallUpdate(self, request, context):
        """Pulls the installer package and starts it.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstallUpdateProgress(self, request, context):
        """Fetches the update progress.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceState(self, request, context):
        """Fetches OS services along with their state.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ControlService(self, request, context):
        """Stops/starts the given service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartCBMR(self, request, context):
        """Starts a CBMR backup.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelCBMR(self, request, context):
        """Cancels a CBMR backup.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCBMRProgress(self, request, context):
        """Fetches progress of a CBMR backup.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileChangeAreas(self, request, context):
        """Method to obtain change areas of a file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseDisk(self, request, context):
        """Close the disk. Instruction to agent to close the given disk if it is
        open.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartScriptExecution(self, request, context):
        """Starts script execution.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScriptExecutionStatus(self, request, context):
        """Returns the status of a running script.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelScriptExecution(self, request, context):
        """Cancels a running script.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CleanupScriptExecutionState(self, request, context):
        """Cleans up the execution state of a script.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteAgentAction(self, request, context):
        """Generic gRPC that executes services exposed by adapters
        in an agent. This consolidation is done so that number of gRPCs from
        Magneto to agent would not mashroom for simple services originating from
        iris or Magneto as we add more adapters to agents. This executor
        dispatches the call to specific adapter service identified by 'env_type'
        field in the argument.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunHostSettingsCheck(self, request, context):
        """Performs host settings check during app registration, refresh.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadCertToHost(self, request, context):
        """Uploads server cert and private key to host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSourceThrottlingConfig(self, request, context):
        """Create/Update the throttling configuration for one or more resources.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchSourceThrottlingConfig(self, request, context):
        """Fetch the throttling configuration on the source.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveAgentConfigToDisk(self, request, context):
        """Dumps the agent configuration to a file in specified format.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadAgentConfigFromDisk(self, request, context):
        """Apply agent configuration from the specified file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteFile(self, request, context):
        """Write given data to a file for a given offset and length.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PerformCoBMRAction(self, request, context):
        """Performs a CoBMR related action like start or getting progress.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgentRpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterAgent': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterAgent,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RegisterAgentArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RegisterAgentResult.SerializeToString,
            ),
            'UnregisterAgent': grpc.unary_unary_rpc_method_handler(
                    servicer.UnregisterAgent,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnregisterAgentArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'GetAgentInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAgentInfo,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetAgentInfoArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetAgentInfoResult.SerializeToString,
            ),
            'FetchVolumeInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchVolumeInfo,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeInfoArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeInfoResult.SerializeToString,
            ),
            'GetHostInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHostInfo,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetHostInfoArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetHostInfoResult.SerializeToString,
            ),
            'PrepareVolumeSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.PrepareVolumeSnapshot,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.PrepareVolumeSnapshotArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.PrepareVolumeSnapshotResult.SerializeToString,
            ),
            'TakeVolumeSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.TakeVolumeSnapshot,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.TakeVolumeSnapshotArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.TakeVolumeSnapshotResult.SerializeToString,
            ),
            'FetchVolumeSnapshotInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchVolumeSnapshotInfo,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeSnapshotInfoArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeSnapshotInfoResult.SerializeToString,
            ),
            'FinalizeVolumeSnapshotMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.FinalizeVolumeSnapshotMetadata,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FinalizeVolumeSnapshotMetadataArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FinalizeVolumeSnapshotMetadataResult.SerializeToString,
            ),
            'FetchSerializedData': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchSerializedData,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSerializedDataArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSerializedDataResult.SerializeToString,
            ),
            'NotifyVolumeBackupComplete': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyVolumeBackupComplete,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyVolumeBackupCompleteArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyVolumeBackupCompleteResult.SerializeToString,
            ),
            'DeleteVolumeSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteVolumeSnapshot,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotResult.SerializeToString,
            ),
            'DeleteVolumeSnapshotGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteVolumeSnapshotGroup,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotGroupArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotGroupResult.SerializeToString,
            ),
            'AbortVolumeSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.AbortVolumeSnapshot,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.AbortVolumeSnapshotArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.AbortVolumeSnapshotResult.SerializeToString,
            ),
            'RestoreFromSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreFromSnapshot,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RestoreFromSnapshotArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RestoreFromSnapshotResult.SerializeToString,
            ),
            'GetRestoreFromSnapshotProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRestoreFromSnapshotProgress,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetRestoreFromSnapshotProgressArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetRestoreFromSnapshotProgressResult.SerializeToString,
            ),
            'InitApplyChangedAreas': grpc.unary_unary_rpc_method_handler(
                    servicer.InitApplyChangedAreas,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.InitApplyChangedAreasArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.InitApplyChangedAreasResult.SerializeToString,
            ),
            'ApplyChangedAreas': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyChangedAreas,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ApplyChangedAreasArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ApplyChangedAreasResult.SerializeToString,
            ),
            'QueryApplyChangedAreas': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryApplyChangedAreas,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.QueryApplyChangedAreasArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.QueryApplyChangedAreasResult.SerializeToString,
            ),
            'NotifyApplyChangedAreasDone': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyApplyChangedAreasDone,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyApplyChangedAreasDoneArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyApplyChangedAreasDoneResult.SerializeToString,
            ),
            'CancelTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelTask,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelTaskArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelTaskResult.SerializeToString,
            ),
            'GetCancelTaskProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCancelTaskProgress,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCancelTaskProgressArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCancelTaskProgressResult.SerializeToString,
            ),
            'BringDisksOnline': grpc.unary_unary_rpc_method_handler(
                    servicer.BringDisksOnline,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.BringDisksOnlineArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.BringDisksOnlineResult.SerializeToString,
            ),
            'RemountDisks': grpc.unary_unary_rpc_method_handler(
                    servicer.RemountDisks,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RemountDisksArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RemountDisksResult.SerializeToString,
            ),
            'StopCBTOnVolumes': grpc.unary_unary_rpc_method_handler(
                    servicer.StopCBTOnVolumes,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.StopCBTOnVolumesArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.StopCBTOnVolumesResult.SerializeToString,
            ),
            'ReadVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadVolume,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadVolumeArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadVolumeResult.SerializeToString,
            ),
            'LockVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.LockVolume,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.LockVolumeArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'UnlockVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlockVolume,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnlockVolumeArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'WriteVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteVolume,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteVolumeArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteVolumeResult.SerializeToString,
            ),
            'MountVirtualVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.MountVirtualVolume,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountVirtualVolumeArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountVirtualVolumeResult.SerializeToString,
            ),
            'UnmountVirtualVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.UnmountVirtualVolume,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnmountVirtualVolumeArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'MountNAS': grpc.unary_unary_rpc_method_handler(
                    servicer.MountNAS,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountNASArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountNASResult.SerializeToString,
            ),
            'UnmountNAS': grpc.unary_unary_rpc_method_handler(
                    servicer.UnmountNAS,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnmountNASArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'ListFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFiles,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ListFilesArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ListFilesResult.SerializeToString,
            ),
            'FetchFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchFiles,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchFilesArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchFilesResult.SerializeToString,
            ),
            'RunDiagnostics': grpc.unary_unary_rpc_method_handler(
                    servicer.RunDiagnostics,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunDiagnosticsArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunDiagnosticsResult.SerializeToString,
            ),
            'GetGFlagSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGFlagSettings,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetGFlagSettingsArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetGFlagSettingsResult.SerializeToString,
            ),
            'UpdateGFlagSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateGFlagSettings,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UpdateGFlagSettingsArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'ReadFileBurst': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadFileBurst,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadFileBurstArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadFileBurstResult.SerializeToString,
            ),
            'PrepareForShutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.PrepareForShutdown,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.PrepareForShutdownArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'Terminate': grpc.unary_unary_rpc_method_handler(
                    servicer.Terminate,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.TerminateArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'InstallUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.InstallUpdate,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.InstallUpdateArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'GetInstallUpdateProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstallUpdateProgress,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetInstallUpdateProgressArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetInstallUpdateProgressResult.SerializeToString,
            ),
            'GetServiceState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceState,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetServiceStateArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetServiceStateResult.SerializeToString,
            ),
            'ControlService': grpc.unary_unary_rpc_method_handler(
                    servicer.ControlService,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ControlServiceArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'StartCBMR': grpc.unary_unary_rpc_method_handler(
                    servicer.StartCBMR,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.StartCBMRArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'CancelCBMR': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelCBMR,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelCBMRArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'GetCBMRProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCBMRProgress,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCBMRProgressArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCBMRProgressResult.SerializeToString,
            ),
            'GetFileChangeAreas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileChangeAreas,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetFileChangeAreasArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetFileChangeAreasResult.SerializeToString,
            ),
            'CloseDisk': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseDisk,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CloseDiskArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'StartScriptExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.StartScriptExecution,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.StartScriptExecutionArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.StartScriptExecutionResult.SerializeToString,
            ),
            'GetScriptExecutionStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScriptExecutionStatus,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetScriptExecutionStatusArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetScriptExecutionStatusResult.SerializeToString,
            ),
            'CancelScriptExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelScriptExecution,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelScriptExecutionArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelScriptExecutionResult.SerializeToString,
            ),
            'CleanupScriptExecutionState': grpc.unary_unary_rpc_method_handler(
                    servicer.CleanupScriptExecutionState,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CleanupScriptExecutionStateArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.CleanupScriptExecutionStateResult.SerializeToString,
            ),
            'ExecuteAgentAction': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteAgentAction,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ExecuteAgentActionArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.ExecuteAgentActionResult.SerializeToString,
            ),
            'RunHostSettingsCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.RunHostSettingsCheck,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunHostSettingsCheckArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunHostSettingsCheckResult.SerializeToString,
            ),
            'UploadCertToHost': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadCertToHost,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UploadCertToHostArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'UpdateSourceThrottlingConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSourceThrottlingConfig,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UpdateSourceThrottlingConfigArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.UpdateSourceThrottlingConfigResult.SerializeToString,
            ),
            'FetchSourceThrottlingConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchSourceThrottlingConfig,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSourceThrottlingConfigArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSourceThrottlingConfigResult.SerializeToString,
            ),
            'SaveAgentConfigToDisk': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveAgentConfigToDisk,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.SaveAgentConfigToDiskArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.SaveAgentConfigToDiskResult.SerializeToString,
            ),
            'LoadAgentConfigFromDisk': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadAgentConfigFromDisk,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.LoadAgentConfigFromDiskArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.LoadAgentConfigFromDiskResult.SerializeToString,
            ),
            'WriteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteFile,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteFileArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteFileResult.SerializeToString,
            ),
            'PerformCoBMRAction': grpc.unary_unary_rpc_method_handler(
                    servicer.PerformCoBMRAction,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.PerformCoBMRActionArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__param__pb2.PerformCoBMRActionResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.magneto.agents.stub.AgentRpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.magneto.agents.stub.AgentRpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AgentRpcService(object):
    """-----------------------------------------------------------------------------

    """

    @staticmethod
    def RegisterAgent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/RegisterAgent',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.RegisterAgentArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.RegisterAgentResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnregisterAgent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/UnregisterAgent',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnregisterAgentArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAgentInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/GetAgentInfo',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetAgentInfoArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetAgentInfoResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchVolumeInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/FetchVolumeInfo',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeInfoArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeInfoResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetHostInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/GetHostInfo',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetHostInfoArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetHostInfoResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PrepareVolumeSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/PrepareVolumeSnapshot',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.PrepareVolumeSnapshotArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.PrepareVolumeSnapshotResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TakeVolumeSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/TakeVolumeSnapshot',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.TakeVolumeSnapshotArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.TakeVolumeSnapshotResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchVolumeSnapshotInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/FetchVolumeSnapshotInfo',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeSnapshotInfoArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchVolumeSnapshotInfoResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FinalizeVolumeSnapshotMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/FinalizeVolumeSnapshotMetadata',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FinalizeVolumeSnapshotMetadataArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FinalizeVolumeSnapshotMetadataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchSerializedData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/FetchSerializedData',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSerializedDataArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSerializedDataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyVolumeBackupComplete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/NotifyVolumeBackupComplete',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyVolumeBackupCompleteArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyVolumeBackupCompleteResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteVolumeSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/DeleteVolumeSnapshot',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteVolumeSnapshotGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/DeleteVolumeSnapshotGroup',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotGroupArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.DeleteVolumeSnapshotGroupResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AbortVolumeSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/AbortVolumeSnapshot',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.AbortVolumeSnapshotArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.AbortVolumeSnapshotResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RestoreFromSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/RestoreFromSnapshot',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.RestoreFromSnapshotArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.RestoreFromSnapshotResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRestoreFromSnapshotProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/GetRestoreFromSnapshotProgress',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetRestoreFromSnapshotProgressArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetRestoreFromSnapshotProgressResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitApplyChangedAreas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/InitApplyChangedAreas',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.InitApplyChangedAreasArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.InitApplyChangedAreasResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ApplyChangedAreas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/ApplyChangedAreas',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.ApplyChangedAreasArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.ApplyChangedAreasResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryApplyChangedAreas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/QueryApplyChangedAreas',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.QueryApplyChangedAreasArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.QueryApplyChangedAreasResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyApplyChangedAreasDone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/NotifyApplyChangedAreasDone',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyApplyChangedAreasDoneArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.NotifyApplyChangedAreasDoneResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/CancelTask',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelTaskArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCancelTaskProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/GetCancelTaskProgress',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCancelTaskProgressArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCancelTaskProgressResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BringDisksOnline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/BringDisksOnline',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.BringDisksOnlineArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.BringDisksOnlineResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemountDisks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/RemountDisks',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.RemountDisksArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.RemountDisksResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopCBTOnVolumes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/StopCBTOnVolumes',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.StopCBTOnVolumesArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.StopCBTOnVolumesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/ReadVolume',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadVolumeArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadVolumeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LockVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/LockVolume',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.LockVolumeArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnlockVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/UnlockVolume',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnlockVolumeArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/WriteVolume',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteVolumeArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteVolumeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MountVirtualVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/MountVirtualVolume',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountVirtualVolumeArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountVirtualVolumeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnmountVirtualVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/UnmountVirtualVolume',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnmountVirtualVolumeArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MountNAS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/MountNAS',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountNASArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.MountNASResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnmountNAS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/UnmountNAS',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.UnmountNASArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/ListFiles',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.ListFilesArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.ListFilesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/FetchFiles',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchFilesArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchFilesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RunDiagnostics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/RunDiagnostics',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunDiagnosticsArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunDiagnosticsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGFlagSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/GetGFlagSettings',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetGFlagSettingsArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetGFlagSettingsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateGFlagSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/UpdateGFlagSettings',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.UpdateGFlagSettingsArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadFileBurst(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/ReadFileBurst',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadFileBurstArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.ReadFileBurstResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PrepareForShutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/PrepareForShutdown',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.PrepareForShutdownArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Terminate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/Terminate',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.TerminateArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InstallUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/InstallUpdate',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.InstallUpdateArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInstallUpdateProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/GetInstallUpdateProgress',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetInstallUpdateProgressArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetInstallUpdateProgressResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetServiceState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/GetServiceState',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetServiceStateArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetServiceStateResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ControlService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/ControlService',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.ControlServiceArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartCBMR(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/StartCBMR',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.StartCBMRArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelCBMR(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/CancelCBMR',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelCBMRArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCBMRProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/GetCBMRProgress',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCBMRProgressArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetCBMRProgressResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFileChangeAreas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/GetFileChangeAreas',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetFileChangeAreasArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetFileChangeAreasResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloseDisk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/CloseDisk',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.CloseDiskArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartScriptExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/StartScriptExecution',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.StartScriptExecutionArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.StartScriptExecutionResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetScriptExecutionStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/GetScriptExecutionStatus',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetScriptExecutionStatusArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.GetScriptExecutionStatusResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelScriptExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/CancelScriptExecution',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelScriptExecutionArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.CancelScriptExecutionResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CleanupScriptExecutionState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/CleanupScriptExecutionState',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.CleanupScriptExecutionStateArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.CleanupScriptExecutionStateResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteAgentAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/ExecuteAgentAction',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.ExecuteAgentActionArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.ExecuteAgentActionResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RunHostSettingsCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/RunHostSettingsCheck',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunHostSettingsCheckArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.RunHostSettingsCheckResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadCertToHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/UploadCertToHost',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.UploadCertToHostArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateSourceThrottlingConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/UpdateSourceThrottlingConfig',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.UpdateSourceThrottlingConfigArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.UpdateSourceThrottlingConfigResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchSourceThrottlingConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/FetchSourceThrottlingConfig',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSourceThrottlingConfigArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.FetchSourceThrottlingConfigResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SaveAgentConfigToDisk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/SaveAgentConfigToDisk',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.SaveAgentConfigToDiskArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.SaveAgentConfigToDiskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoadAgentConfigFromDisk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/LoadAgentConfigFromDisk',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.LoadAgentConfigFromDiskArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.LoadAgentConfigFromDiskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/WriteFile',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteFileArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.WriteFileResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PerformCoBMRAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.stub.AgentRpcService/PerformCoBMRAction',
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.PerformCoBMRActionArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__param__pb2.PerformCoBMRActionResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
