# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from magneto.agents.stub import agent_base_pb2 as magneto_dot_agents_dot_stub_dot_agent__base__pb2
from magneto.agents.stub import oracle_param_pb2 as magneto_dot_agents_dot_stub_dot_oracle__param__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in magneto/agents/stub/oracle_rpc_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class OracleRpcServiceStub(object):
    """-----------------------------------------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DiscoverDBs = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/DiscoverDBs',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DiscoverDBsArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DiscoverDBsResult.FromString,
                _registered_method=True)
        self.BackupDB = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/BackupDB',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBResult.FromString,
                _registered_method=True)
        self.BackupDBProgress = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/BackupDBProgress',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBProgressArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBProgressResult.FromString,
                _registered_method=True)
        self.CancelDBBackup = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/CancelDBBackup',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.CancelDBBackupArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.CancelDBBackupResult.FromString,
                _registered_method=True)
        self.MountOracleNAS = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/MountOracleNAS',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MountOracleNASArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MountOracleNASResult.FromString,
                _registered_method=True)
        self.UnMountOracleNAS = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/UnMountOracleNAS',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.UnMountOracleNASArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.GetDBIncarnationInfo = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/GetDBIncarnationInfo',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.GetDBIncarnationInfoArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.GetDBIncarnationInfoResult.FromString,
                _registered_method=True)
        self.Catalog = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/Catalog',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.CatalogArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.UnCatalog = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/UnCatalog',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.UnCatalogArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
                _registered_method=True)
        self.RestoreDB = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/RestoreDB',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBResult.FromString,
                _registered_method=True)
        self.RestoreDBProgress = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/RestoreDBProgress',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBProgressArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBProgressResult.FromString,
                _registered_method=True)
        self.PostAltRestoreDB = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/PostAltRestoreDB',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.PostAltRestoreDBArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.PostAltRestoreDBResult.FromString,
                _registered_method=True)
        self.RestoreDBControlFile = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/RestoreDBControlFile',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBControlFileArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBControlFileResult.FromString,
                _registered_method=True)
        self.DBBackupDataFiles = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/DBBackupDataFiles',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DBBackupDataFilesArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DBBackupDataFilesResult.FromString,
                _registered_method=True)
        self.DropOracleDBs = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/DropOracleDBs',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DropOracleDBsArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DropOracleDBsResult.FromString,
                _registered_method=True)
        self.OracleEnvCheck = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/OracleEnvCheck',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.OracleEnvCheckArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.OracleEnvCheckResult.FromString,
                _registered_method=True)
        self.RestoreDBGranular = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/RestoreDBGranular',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBResult.FromString,
                _registered_method=True)
        self.MigrateDB = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/MigrateDB',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBResult.FromString,
                _registered_method=True)
        self.MigrateDBProgress = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/MigrateDBProgress',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBProgressResult.FromString,
                _registered_method=True)
        self.DeleteArchivelog = channel.unary_unary(
                '/cohesity.magneto.agents.oracle.stub.OracleRpcService/DeleteArchivelog',
                request_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DeleteArchivelogArg.SerializeToString,
                response_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DeleteArchivelogResult.FromString,
                _registered_method=True)


class OracleRpcServiceServicer(object):
    """-----------------------------------------------------------------------------

    """

    def DiscoverDBs(self, request, context):
        """Discover the Oracle DBs present on this host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BackupDB(self, request, context):
        """Start the Backup for the Oracle DB.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BackupDBProgress(self, request, context):
        """Backup Progress info.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelDBBackup(self, request, context):
        """Cancel DB backup job.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MountOracleNAS(self, request, context):
        """Mounts a remote NFS share to a local directory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnMountOracleNAS(self, request, context):
        """UnMounts a remote NFS share from local directory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDBIncarnationInfo(self, request, context):
        """Get the Database incarnation information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Catalog(self, request, context):
        """Catalog files to RMAN Catalog.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnCatalog(self, request, context):
        """Uncatalog files from RMAN Catalog.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreDB(self, request, context):
        """Start the Restore for the Oracle DB.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreDBProgress(self, request, context):
        """Restore Progress Info.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostAltRestoreDB(self, request, context):
        """Post Ops for alternate DB Restore.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreDBControlFile(self, request, context):
        """Restore Database control file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DBBackupDataFiles(self, request, context):
        """Get all datafiles information for database backup.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropOracleDBs(self, request, context):
        """Given a vector of Oracle Database SID, drop those DBs on the given Oracle
        host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OracleEnvCheck(self, request, context):
        """Give a Oracle Standalone Host/RAC check and report the environement
        compatability.
        The compatability checks are specific for a given workflow (backup,restore
        etc.)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreDBGranular(self, request, context):
        """Start the Granular (PDB/Tables) Restore for the Oracle DB.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MigrateDB(self, request, context):
        """Migrate Oracle Database from cohesity storage to primary storage.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MigrateDBProgress(self, request, context):
        """Migrate Oracle Database progress query.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteArchivelog(self, request, context):
        """Delete Oracle Database archive log.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OracleRpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DiscoverDBs': grpc.unary_unary_rpc_method_handler(
                    servicer.DiscoverDBs,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DiscoverDBsArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DiscoverDBsResult.SerializeToString,
            ),
            'BackupDB': grpc.unary_unary_rpc_method_handler(
                    servicer.BackupDB,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBResult.SerializeToString,
            ),
            'BackupDBProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.BackupDBProgress,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBProgressArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBProgressResult.SerializeToString,
            ),
            'CancelDBBackup': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelDBBackup,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.CancelDBBackupArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.CancelDBBackupResult.SerializeToString,
            ),
            'MountOracleNAS': grpc.unary_unary_rpc_method_handler(
                    servicer.MountOracleNAS,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MountOracleNASArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MountOracleNASResult.SerializeToString,
            ),
            'UnMountOracleNAS': grpc.unary_unary_rpc_method_handler(
                    servicer.UnMountOracleNAS,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.UnMountOracleNASArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'GetDBIncarnationInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDBIncarnationInfo,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.GetDBIncarnationInfoArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.GetDBIncarnationInfoResult.SerializeToString,
            ),
            'Catalog': grpc.unary_unary_rpc_method_handler(
                    servicer.Catalog,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.CatalogArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'UnCatalog': grpc.unary_unary_rpc_method_handler(
                    servicer.UnCatalog,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.UnCatalogArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.SerializeToString,
            ),
            'RestoreDB': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreDB,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBResult.SerializeToString,
            ),
            'RestoreDBProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreDBProgress,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBProgressArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBProgressResult.SerializeToString,
            ),
            'PostAltRestoreDB': grpc.unary_unary_rpc_method_handler(
                    servicer.PostAltRestoreDB,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.PostAltRestoreDBArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.PostAltRestoreDBResult.SerializeToString,
            ),
            'RestoreDBControlFile': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreDBControlFile,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBControlFileArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBControlFileResult.SerializeToString,
            ),
            'DBBackupDataFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.DBBackupDataFiles,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DBBackupDataFilesArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DBBackupDataFilesResult.SerializeToString,
            ),
            'DropOracleDBs': grpc.unary_unary_rpc_method_handler(
                    servicer.DropOracleDBs,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DropOracleDBsArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DropOracleDBsResult.SerializeToString,
            ),
            'OracleEnvCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.OracleEnvCheck,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.OracleEnvCheckArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.OracleEnvCheckResult.SerializeToString,
            ),
            'RestoreDBGranular': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreDBGranular,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBResult.SerializeToString,
            ),
            'MigrateDB': grpc.unary_unary_rpc_method_handler(
                    servicer.MigrateDB,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBResult.SerializeToString,
            ),
            'MigrateDBProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.MigrateDBProgress,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBProgressResult.SerializeToString,
            ),
            'DeleteArchivelog': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteArchivelog,
                    request_deserializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DeleteArchivelogArg.FromString,
                    response_serializer=magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DeleteArchivelogResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.magneto.agents.oracle.stub.OracleRpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.magneto.agents.oracle.stub.OracleRpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OracleRpcService(object):
    """-----------------------------------------------------------------------------

    """

    @staticmethod
    def DiscoverDBs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/DiscoverDBs',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DiscoverDBsArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DiscoverDBsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BackupDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/BackupDB',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BackupDBProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/BackupDBProgress',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBProgressArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.BackupDBProgressResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelDBBackup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/CancelDBBackup',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.CancelDBBackupArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.CancelDBBackupResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MountOracleNAS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/MountOracleNAS',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MountOracleNASArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MountOracleNASResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnMountOracleNAS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/UnMountOracleNAS',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.UnMountOracleNASArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDBIncarnationInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/GetDBIncarnationInfo',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.GetDBIncarnationInfoArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.GetDBIncarnationInfoResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Catalog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/Catalog',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.CatalogArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnCatalog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/UnCatalog',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.UnCatalogArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_agent__base__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RestoreDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/RestoreDB',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RestoreDBProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/RestoreDBProgress',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBProgressArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBProgressResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PostAltRestoreDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/PostAltRestoreDB',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.PostAltRestoreDBArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.PostAltRestoreDBResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RestoreDBControlFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/RestoreDBControlFile',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBControlFileArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBControlFileResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DBBackupDataFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/DBBackupDataFiles',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DBBackupDataFilesArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DBBackupDataFilesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DropOracleDBs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/DropOracleDBs',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DropOracleDBsArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DropOracleDBsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OracleEnvCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/OracleEnvCheck',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.OracleEnvCheckArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.OracleEnvCheckResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RestoreDBGranular(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/RestoreDBGranular',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.RestoreDBResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MigrateDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/MigrateDB',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MigrateDBProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/MigrateDBProgress',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.MigrateDBProgressResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteArchivelog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.agents.oracle.stub.OracleRpcService/DeleteArchivelog',
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DeleteArchivelogArg.SerializeToString,
            magneto_dot_agents_dot_stub_dot_oracle__param__pb2.DeleteArchivelogResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
