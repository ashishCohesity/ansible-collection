# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from magneto.api import magneto_external_base_pb2 as magneto_dot_api_dot_magneto__external__base__pb2
from magneto.api import magneto_external_debug_pb2 as magneto_dot_api_dot_magneto__external__debug__pb2
from magneto.api import magneto_external_pb2 as magneto_dot_api_dot_magneto__external__pb2
from magneto.api import magneto_failover_pb2 as magneto_dot_api_dot_magneto__failover__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in magneto/api/grpc_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class GRpcServiceStub(object):
    """Magneto gRPC service definition.
    -----------------------PLEASE READ------------------------------------------
    If a new rpc method is added here. Please add the method name to
    grpc_endpoints_ in magneto/stats/stats.h for stats collection.
    ----------------------------------------------------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LocateMaster = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/LocateMaster',
                request_serializer=magneto_dot_api_dot_magneto__external__base__pb2.ArgumentBase.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.LocateMasterResult.FromString,
                _registered_method=True)
        self.FetchEntityHierarchy = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/FetchEntityHierarchy',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.FetchEntityHierarchyArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.FetchEntityHierarchyResult.FromString,
                _registered_method=True)
        self.AddOrUpdateEntitiesMetadata = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/AddOrUpdateEntitiesMetadata',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.AddOrUpdateEntitiesMetadataArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.AddOrUpdateEntitiesMetadataResult.FromString,
                _registered_method=True)
        self.FetchClonesSummary = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/FetchClonesSummary',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.FetchClonesSummaryArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.FetchClonesSummaryResult.FromString,
                _registered_method=True)
        self.FetchAppTdmTasksSummary = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/FetchAppTdmTasksSummary',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTasksSummaryArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTasksSummaryResult.FromString,
                _registered_method=True)
        self.FetchAppTdmTaskDetails = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/FetchAppTdmTaskDetails',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTaskDetailsArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTaskDetailsResult.FromString,
                _registered_method=True)
        self.FetchTimelineForClone = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/FetchTimelineForClone',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.FetchTimelineForCloneArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.FetchTimelineForCloneResult.FromString,
                _registered_method=True)
        self.GetNasAnalysisStats = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/GetNasAnalysisStats',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisStatsArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisStatsResult.FromString,
                _registered_method=True)
        self.GetNasAnalysisDefaultConfig = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/GetNasAnalysisDefaultConfig',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisDefaultConfigArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisDefaultConfigResult.FromString,
                _registered_method=True)
        self.CreateSnapshotOfClones = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/CreateSnapshotOfClones',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.CreateSnapshotOfClonesArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.CreateSnapshotOfClonesResult.FromString,
                _registered_method=True)
        self.UpdateSnapshotOfClone = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/UpdateSnapshotOfClone',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.UpdateSnapshotOfCloneArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.UpdateSnapshotOfCloneResult.FromString,
                _registered_method=True)
        self.DeleteSnapshotsOfClones = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/DeleteSnapshotsOfClones',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.DeleteSnapshotsOfClonesArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.DeleteSnapshotsOfClonesResult.FromString,
                _registered_method=True)
        self.CreateClone = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/CreateClone',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.CreateCloneArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.CreateCloneResult.FromString,
                _registered_method=True)
        self.DestroyClone = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/DestroyClone',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.DestroyCloneArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.DestroyCloneResult.FromString,
                _registered_method=True)
        self.LookupEntities = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/LookupEntities',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.LookupEntitiesArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.LookupEntitiesResult.FromString,
                _registered_method=True)
        self.InitiateFailoverRx = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/InitiateFailoverRx',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateFailoverRxArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateFailoverRxResult.FromString,
                _registered_method=True)
        self.ScheduleFailoverBackupAndReplication = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/ScheduleFailoverBackupAndReplication',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.ScheduleFailoverBackupAndReplicationArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.ScheduleFailoverBackupAndReplicationResult.FromString,
                _registered_method=True)
        self.PollScheduledFailoverBackupAndReplication = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/PollScheduledFailoverBackupAndReplication',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.PollScheduledFailoverBackupAndReplicationArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.PollScheduledFailoverBackupAndReplicationResult.FromString,
                _registered_method=True)
        self.FinalizeFailoverTx = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/FinalizeFailoverTx',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverTxArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverTxResult.FromString,
                _registered_method=True)
        self.LinkFailedOverEntities = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/LinkFailedOverEntities',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.LinkFailedOverEntitiesArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.LinkFailedOverEntitiesResult.FromString,
                _registered_method=True)
        self.UpdateEntityProvenanceEdges = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/UpdateEntityProvenanceEdges',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.UpdateEntityProvenanceEdgesArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.UpdateEntityProvenanceEdgesResult.FromString,
                _registered_method=True)
        self.FinalizeFailoverRx = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/FinalizeFailoverRx',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverRxArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverRxResult.FromString,
                _registered_method=True)
        self.CancelFailover = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/CancelFailover',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.CancelFailoverArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.CancelFailoverResult.FromString,
                _registered_method=True)
        self.GetProtectionGroupRuns = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/GetProtectionGroupRuns',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.GetProtectionGroupRunsArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetProtectionGroupRunsResult.FromString,
                _registered_method=True)
        self.GetObjectRuns = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/GetObjectRuns',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.GetObjectRunsArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetObjectRunsResult.FromString,
                _registered_method=True)
        self.GetObjectsLastRun = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/GetObjectsLastRun',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.GetObjectsLastRunArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetObjectsLastRunResult.FromString,
                _registered_method=True)
        self.CreateObjectBackup = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/CreateObjectBackup',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.CreateObjectBackupArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.CreateObjectBackupResult.FromString,
                _registered_method=True)
        self.UpdateObjectBackup = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/UpdateObjectBackup',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.UpdateObjectBackupArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.UpdateObjectBackupResult.FromString,
                _registered_method=True)
        self.GetProtectedObjects = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/GetProtectedObjects',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.GetProtectedObjectsArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetProtectedObjectsResult.FromString,
                _registered_method=True)
        self.PerformObjectBackupAction = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/PerformObjectBackupAction',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.PerformObjectBackupActionArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.PerformObjectBackupActionResult.FromString,
                _registered_method=True)
        self.GetSnapshotLivenessInfo = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/GetSnapshotLivenessInfo',
                request_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.GetSnapshotLivenessInfoArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.GetSnapshotLivenessInfoResult.FromString,
                _registered_method=True)
        self.CancelObjectSnapshot = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/CancelObjectSnapshot',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.CancelObjectSnapshotArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.CancelObjectSnapshotResult.FromString,
                _registered_method=True)
        self.LookupFailovers = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/LookupFailovers',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.LookupFailoversArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.LookupFailoversResult.FromString,
                _registered_method=True)
        self.GetBackupRunsInternalState = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/GetBackupRunsInternalState',
                request_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.GetBackupRunsInternalStateArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.GetBackupRunsInternalStateResult.FromString,
                _registered_method=True)
        self.InitiateTenantFailover = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/InitiateTenantFailover',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateTenantFailoverArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateTenantFailoverResult.FromString,
                _registered_method=True)
        self.InitiateSnapshotMigration = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/InitiateSnapshotMigration',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateSnapshotMigrationArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateSnapshotMigrationResult.FromString,
                _registered_method=True)
        self.FetchCloudSnapshotDone = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/FetchCloudSnapshotDone',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.FetchCloudSnapshotDoneArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.FetchCloudSnapshotDoneResult.FromString,
                _registered_method=True)
        self.CancelTenantFailover = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/CancelTenantFailover',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.CancelTenantFailoverArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.CancelTenantFailoverResult.FromString,
                _registered_method=True)
        self.CleanupTenantData = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/CleanupTenantData',
                request_serializer=magneto_dot_api_dot_magneto__failover__pb2.CleanupTenantDataArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__failover__pb2.CleanupTenantDataResult.FromString,
                _registered_method=True)
        self.PauseProtectionGroupRuns = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/PauseProtectionGroupRuns',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.PauseProtectionGroupRunsArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.PauseProtectionGroupRunsResult.FromString,
                _registered_method=True)
        self.ListProtectionGroups = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/ListProtectionGroups',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.ListProtectionGroupsArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.ListProtectionGroupsResult.FromString,
                _registered_method=True)
        self.ResumeProtectionGroupRuns = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/ResumeProtectionGroupRuns',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.ResumeProtectionGroupRunsArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.ResumeProtectionGroupRunsResult.FromString,
                _registered_method=True)
        self.StartExternallyTriggeredBackup = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/StartExternallyTriggeredBackup',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.StartExternallyTriggeredBackupArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.StartExternallyTriggeredBackupResult.FromString,
                _registered_method=True)
        self.EndExternallyTriggeredBackup = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/EndExternallyTriggeredBackup',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.EndExternallyTriggeredBackupArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.EndExternallyTriggeredBackupResult.FromString,
                _registered_method=True)
        self.ExternallyTriggeredKeepAlive = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/ExternallyTriggeredKeepAlive',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.ExternallyTriggeredKeepAliveArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.ExternallyTriggeredKeepAliveResult.FromString,
                _registered_method=True)
        self.ExportMetadata = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/ExportMetadata',
                request_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.ExportMetadataArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.ExportMetadataResult.FromString,
                _registered_method=True)
        self.QueryExportMetadataStatus = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/QueryExportMetadataStatus',
                request_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryExportMetadataStatusArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryExportMetadataStatusResult.FromString,
                _registered_method=True)
        self.ImportMetadata = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/ImportMetadata',
                request_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.ImportMetadataArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.ImportMetadataResult.FromString,
                _registered_method=True)
        self.QueryImportMetadataStatus = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/QueryImportMetadataStatus',
                request_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryImportMetadataStatusArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryImportMetadataStatusResult.FromString,
                _registered_method=True)
        self.ExpandObjectBackupSource = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/ExpandObjectBackupSource',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.CreateObjectBackupArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.ExpandObjectBackupSourceResult.FromString,
                _registered_method=True)
        self.RestrictSourceEntities = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/RestrictSourceEntities',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.RestrictSourceEntitiesArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.RestrictSourceEntitiesResult.FromString,
                _registered_method=True)
        self.ValidateTenantMigrationMetadata = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/ValidateTenantMigrationMetadata',
                request_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.ValidateTenantMigrationMetadataArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.ValidateTenantMigrationMetadataResult.FromString,
                _registered_method=True)
        self.QueryTenantMigrationValidationStatus = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/QueryTenantMigrationValidationStatus',
                request_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryTenantMigrationValidationStatusArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryTenantMigrationValidationStatusResult.FromString,
                _registered_method=True)
        self.EditObjectBackupRunsMetadata = channel.unary_unary(
                '/cohesity.magneto.api.GRpcService/EditObjectBackupRunsMetadata',
                request_serializer=magneto_dot_api_dot_magneto__external__pb2.EditObjectBackupRunsMetadataArg.SerializeToString,
                response_deserializer=magneto_dot_api_dot_magneto__external__pb2.EditObjectBackupRunsMetadataResult.FromString,
                _registered_method=True)


class GRpcServiceServicer(object):
    """Magneto gRPC service definition.
    -----------------------PLEASE READ------------------------------------------
    If a new rpc method is added here. Please add the method name to
    grpc_endpoints_ in magneto/stats/stats.h for stats collection.
    ----------------------------------------------------------------------------
    """

    def LocateMaster(self, request, context):
        """Locate the Magneto master endpoint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchEntityHierarchy(self, request, context):
        """Fetch the entity hierarchy.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddOrUpdateEntitiesMetadata(self, request, context):
        """AddOrUpdateEntitiesMetadata adds or updates the external entity metadata
        for an existing entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchClonesSummary(self, request, context):
        """Fetch the set of clone objects given a (list of) environment(s).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchAppTdmTasksSummary(self, request, context):
        """Fetch the summarized list of App TDM tasks.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchAppTdmTaskDetails(self, request, context):
        """Fetch the details of a single App TDM task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchTimelineForClone(self, request, context):
        """Fetch the detailed timeline events of a given clone entity (e.g., clone,
        refresh or rewind history).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNasAnalysisStats(self, request, context):
        """Fetch the statistics gathered during analysis of a NAS share.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNasAnalysisDefaultConfig(self, request, context):
        """Fetch the default bucket config for analysis job.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSnapshotOfClones(self, request, context):
        """Create a snapshot of the specified clones.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSnapshotOfClone(self, request, context):
        """Update the details of a single snapshot of clone.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSnapshotsOfClones(self, request, context):
        """Delete a bunch of snapshots of clones.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateClone(self, request, context):
        """Create a clone from backup run / clone snapshot.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyClone(self, request, context):
        """Destroy a clone from given clone uid.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupEntities(self, request, context):
        """Perform entity lookup based on metadata.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitiateFailoverRx(self, request, context):
        """Failover related RPCs.

        Initiates a planned or unplanned failover on Rx cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScheduleFailoverBackupAndReplication(self, request, context):
        """Schedules a backup and replication on Tx cluster in planned failover.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PollScheduledFailoverBackupAndReplication(self, request, context):
        """Poll for completion of ScheduleFailoverBackupAndReplication RPC.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinalizeFailoverTx(self, request, context):
        """Makes the backup of failed over entities inactive on Tx cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LinkFailedOverEntities(self, request, context):
        """Links failed over entities on the Rx cluster.
        Note: This rpc will be deprecated going forward. Please use
        UpdateEntityProvenanceEdges.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEntityProvenanceEdges(self, request, context):
        """Updated entity provenance by linking/unlinking edges.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinalizeFailoverRx(self, request, context):
        """Makes the backup of failed over entities active on Rx cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelFailover(self, request, context):
        """Cancels an ongoing failover.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProtectionGroupRuns(self, request, context):
        """Fetches the Protection Group Run Info at object level as well.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetObjectRuns(self, request, context):
        """Fetches the runs contain the given object and pass the filters in
        GetObjectRunsArg.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetObjectsLastRun(self, request, context):
        """Fetches the last run for each of the object that pass the filters in
        GetObjectsLastRunArg.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateObjectBackup(self, request, context):
        """Endpoint to protect a set of objects.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateObjectBackup(self, request, context):
        """Endpoint to update protection parameters for an object.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProtectedObjects(self, request, context):
        """Fetches the protected objects information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PerformObjectBackupAction(self, request, context):
        """Endpoint to perform actions on object backups.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSnapshotLivenessInfo(self, request, context):
        """Endpoint to fetch snapshot liveness information for debugging purposes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelObjectSnapshot(self, request, context):
        """Endpoint to cancel object based backup/copy snapshots.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupFailovers(self, request, context):
        """Looks up the failovers and gets the replication stats for planned
        failovers of a view-based failover.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBackupRunsInternalState(self, request, context):
        """Endpoint to fetch backup runs internal state for debugging purposes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitiateTenantFailover(self, request, context):
        """Initiates tenant failover flow on Rx.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitiateSnapshotMigration(self, request, context):
        """Initiates backup snapshot migration during Tenant Failover.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchCloudSnapshotDone(self, request, context):
        """Notifies Failover Service about completed snapshot fetch from cloud.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelTenantFailover(self, request, context):
        """Cancels the given Tenant Failover.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CleanupTenantData(self, request, context):
        """Cleans up all the data of the given tenant.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseProtectionGroupRuns(self, request, context):
        """Pauses an active backup run.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProtectionGroups(self, request, context):
        """List all Protection groups.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeProtectionGroupRuns(self, request, context):
        """Resumes a paused backup run.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartExternallyTriggeredBackup(self, request, context):
        """Start an externally triggered backup session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndExternallyTriggeredBackup(self, request, context):
        """End an externally triggered backup session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExternallyTriggeredKeepAlive(self, request, context):
        """Handle keep alive request for an externally triggered backup session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportMetadata(self, request, context):
        """Handle exporting magneto master's metadata to a specified location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryExportMetadataStatus(self, request, context):
        """Fetches the status of the exporting metadata task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportMetadata(self, request, context):
        """Handle importing magneto master's metadata from a specified location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryImportMetadataStatus(self, request, context):
        """Fetches the status of the importing metadata task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExpandObjectBackupSource(self, request, context):
        """Endpoint to get leaf entities to be protected by an object protection.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestrictSourceEntities(self, request, context):
        """Endpoint to RestrictSourceEntities.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateTenantMigrationMetadata(self, request, context):
        """Handle validation of tenant-migrated state with state imported from
        previous cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryTenantMigrationValidationStatus(self, request, context):
        """Fetches the status of the tenant migration validation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditObjectBackupRunsMetadata(self, request, context):
        """EditObjectBackupRunsMetadata updates one or more runs of one or more
        objects in CCS.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GRpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LocateMaster': grpc.unary_unary_rpc_method_handler(
                    servicer.LocateMaster,
                    request_deserializer=magneto_dot_api_dot_magneto__external__base__pb2.ArgumentBase.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.LocateMasterResult.SerializeToString,
            ),
            'FetchEntityHierarchy': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchEntityHierarchy,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.FetchEntityHierarchyArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.FetchEntityHierarchyResult.SerializeToString,
            ),
            'AddOrUpdateEntitiesMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.AddOrUpdateEntitiesMetadata,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.AddOrUpdateEntitiesMetadataArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.AddOrUpdateEntitiesMetadataResult.SerializeToString,
            ),
            'FetchClonesSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchClonesSummary,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.FetchClonesSummaryArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.FetchClonesSummaryResult.SerializeToString,
            ),
            'FetchAppTdmTasksSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchAppTdmTasksSummary,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTasksSummaryArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTasksSummaryResult.SerializeToString,
            ),
            'FetchAppTdmTaskDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchAppTdmTaskDetails,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTaskDetailsArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTaskDetailsResult.SerializeToString,
            ),
            'FetchTimelineForClone': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchTimelineForClone,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.FetchTimelineForCloneArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.FetchTimelineForCloneResult.SerializeToString,
            ),
            'GetNasAnalysisStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNasAnalysisStats,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisStatsArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisStatsResult.SerializeToString,
            ),
            'GetNasAnalysisDefaultConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNasAnalysisDefaultConfig,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisDefaultConfigArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisDefaultConfigResult.SerializeToString,
            ),
            'CreateSnapshotOfClones': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSnapshotOfClones,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.CreateSnapshotOfClonesArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.CreateSnapshotOfClonesResult.SerializeToString,
            ),
            'UpdateSnapshotOfClone': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSnapshotOfClone,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.UpdateSnapshotOfCloneArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.UpdateSnapshotOfCloneResult.SerializeToString,
            ),
            'DeleteSnapshotsOfClones': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSnapshotsOfClones,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.DeleteSnapshotsOfClonesArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.DeleteSnapshotsOfClonesResult.SerializeToString,
            ),
            'CreateClone': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateClone,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.CreateCloneArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.CreateCloneResult.SerializeToString,
            ),
            'DestroyClone': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyClone,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.DestroyCloneArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.DestroyCloneResult.SerializeToString,
            ),
            'LookupEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupEntities,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.LookupEntitiesArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.LookupEntitiesResult.SerializeToString,
            ),
            'InitiateFailoverRx': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateFailoverRx,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateFailoverRxArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateFailoverRxResult.SerializeToString,
            ),
            'ScheduleFailoverBackupAndReplication': grpc.unary_unary_rpc_method_handler(
                    servicer.ScheduleFailoverBackupAndReplication,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.ScheduleFailoverBackupAndReplicationArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.ScheduleFailoverBackupAndReplicationResult.SerializeToString,
            ),
            'PollScheduledFailoverBackupAndReplication': grpc.unary_unary_rpc_method_handler(
                    servicer.PollScheduledFailoverBackupAndReplication,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.PollScheduledFailoverBackupAndReplicationArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.PollScheduledFailoverBackupAndReplicationResult.SerializeToString,
            ),
            'FinalizeFailoverTx': grpc.unary_unary_rpc_method_handler(
                    servicer.FinalizeFailoverTx,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverTxArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverTxResult.SerializeToString,
            ),
            'LinkFailedOverEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.LinkFailedOverEntities,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.LinkFailedOverEntitiesArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.LinkFailedOverEntitiesResult.SerializeToString,
            ),
            'UpdateEntityProvenanceEdges': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEntityProvenanceEdges,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.UpdateEntityProvenanceEdgesArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.UpdateEntityProvenanceEdgesResult.SerializeToString,
            ),
            'FinalizeFailoverRx': grpc.unary_unary_rpc_method_handler(
                    servicer.FinalizeFailoverRx,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverRxArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverRxResult.SerializeToString,
            ),
            'CancelFailover': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelFailover,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.CancelFailoverArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.CancelFailoverResult.SerializeToString,
            ),
            'GetProtectionGroupRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProtectionGroupRuns,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetProtectionGroupRunsArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.GetProtectionGroupRunsResult.SerializeToString,
            ),
            'GetObjectRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.GetObjectRuns,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetObjectRunsArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.GetObjectRunsResult.SerializeToString,
            ),
            'GetObjectsLastRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetObjectsLastRun,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetObjectsLastRunArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.GetObjectsLastRunResult.SerializeToString,
            ),
            'CreateObjectBackup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateObjectBackup,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.CreateObjectBackupArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.CreateObjectBackupResult.SerializeToString,
            ),
            'UpdateObjectBackup': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateObjectBackup,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.UpdateObjectBackupArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.UpdateObjectBackupResult.SerializeToString,
            ),
            'GetProtectedObjects': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProtectedObjects,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.GetProtectedObjectsArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.GetProtectedObjectsResult.SerializeToString,
            ),
            'PerformObjectBackupAction': grpc.unary_unary_rpc_method_handler(
                    servicer.PerformObjectBackupAction,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.PerformObjectBackupActionArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.PerformObjectBackupActionResult.SerializeToString,
            ),
            'GetSnapshotLivenessInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSnapshotLivenessInfo,
                    request_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.GetSnapshotLivenessInfoArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.GetSnapshotLivenessInfoResult.SerializeToString,
            ),
            'CancelObjectSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelObjectSnapshot,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.CancelObjectSnapshotArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.CancelObjectSnapshotResult.SerializeToString,
            ),
            'LookupFailovers': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupFailovers,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.LookupFailoversArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.LookupFailoversResult.SerializeToString,
            ),
            'GetBackupRunsInternalState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBackupRunsInternalState,
                    request_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.GetBackupRunsInternalStateArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.GetBackupRunsInternalStateResult.SerializeToString,
            ),
            'InitiateTenantFailover': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateTenantFailover,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateTenantFailoverArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateTenantFailoverResult.SerializeToString,
            ),
            'InitiateSnapshotMigration': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateSnapshotMigration,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateSnapshotMigrationArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.InitiateSnapshotMigrationResult.SerializeToString,
            ),
            'FetchCloudSnapshotDone': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchCloudSnapshotDone,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.FetchCloudSnapshotDoneArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.FetchCloudSnapshotDoneResult.SerializeToString,
            ),
            'CancelTenantFailover': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelTenantFailover,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.CancelTenantFailoverArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.CancelTenantFailoverResult.SerializeToString,
            ),
            'CleanupTenantData': grpc.unary_unary_rpc_method_handler(
                    servicer.CleanupTenantData,
                    request_deserializer=magneto_dot_api_dot_magneto__failover__pb2.CleanupTenantDataArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__failover__pb2.CleanupTenantDataResult.SerializeToString,
            ),
            'PauseProtectionGroupRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseProtectionGroupRuns,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.PauseProtectionGroupRunsArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.PauseProtectionGroupRunsResult.SerializeToString,
            ),
            'ListProtectionGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProtectionGroups,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.ListProtectionGroupsArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.ListProtectionGroupsResult.SerializeToString,
            ),
            'ResumeProtectionGroupRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeProtectionGroupRuns,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.ResumeProtectionGroupRunsArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.ResumeProtectionGroupRunsResult.SerializeToString,
            ),
            'StartExternallyTriggeredBackup': grpc.unary_unary_rpc_method_handler(
                    servicer.StartExternallyTriggeredBackup,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.StartExternallyTriggeredBackupArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.StartExternallyTriggeredBackupResult.SerializeToString,
            ),
            'EndExternallyTriggeredBackup': grpc.unary_unary_rpc_method_handler(
                    servicer.EndExternallyTriggeredBackup,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.EndExternallyTriggeredBackupArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.EndExternallyTriggeredBackupResult.SerializeToString,
            ),
            'ExternallyTriggeredKeepAlive': grpc.unary_unary_rpc_method_handler(
                    servicer.ExternallyTriggeredKeepAlive,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.ExternallyTriggeredKeepAliveArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.ExternallyTriggeredKeepAliveResult.SerializeToString,
            ),
            'ExportMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportMetadata,
                    request_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.ExportMetadataArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.ExportMetadataResult.SerializeToString,
            ),
            'QueryExportMetadataStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryExportMetadataStatus,
                    request_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryExportMetadataStatusArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryExportMetadataStatusResult.SerializeToString,
            ),
            'ImportMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportMetadata,
                    request_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.ImportMetadataArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.ImportMetadataResult.SerializeToString,
            ),
            'QueryImportMetadataStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryImportMetadataStatus,
                    request_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryImportMetadataStatusArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryImportMetadataStatusResult.SerializeToString,
            ),
            'ExpandObjectBackupSource': grpc.unary_unary_rpc_method_handler(
                    servicer.ExpandObjectBackupSource,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.CreateObjectBackupArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.ExpandObjectBackupSourceResult.SerializeToString,
            ),
            'RestrictSourceEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.RestrictSourceEntities,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.RestrictSourceEntitiesArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.RestrictSourceEntitiesResult.SerializeToString,
            ),
            'ValidateTenantMigrationMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateTenantMigrationMetadata,
                    request_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.ValidateTenantMigrationMetadataArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.ValidateTenantMigrationMetadataResult.SerializeToString,
            ),
            'QueryTenantMigrationValidationStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryTenantMigrationValidationStatus,
                    request_deserializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryTenantMigrationValidationStatusArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__debug__pb2.QueryTenantMigrationValidationStatusResult.SerializeToString,
            ),
            'EditObjectBackupRunsMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.EditObjectBackupRunsMetadata,
                    request_deserializer=magneto_dot_api_dot_magneto__external__pb2.EditObjectBackupRunsMetadataArg.FromString,
                    response_serializer=magneto_dot_api_dot_magneto__external__pb2.EditObjectBackupRunsMetadataResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.magneto.api.GRpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.magneto.api.GRpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GRpcService(object):
    """Magneto gRPC service definition.
    -----------------------PLEASE READ------------------------------------------
    If a new rpc method is added here. Please add the method name to
    grpc_endpoints_ in magneto/stats/stats.h for stats collection.
    ----------------------------------------------------------------------------
    """

    @staticmethod
    def LocateMaster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/LocateMaster',
            magneto_dot_api_dot_magneto__external__base__pb2.ArgumentBase.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.LocateMasterResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchEntityHierarchy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/FetchEntityHierarchy',
            magneto_dot_api_dot_magneto__external__pb2.FetchEntityHierarchyArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.FetchEntityHierarchyResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddOrUpdateEntitiesMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/AddOrUpdateEntitiesMetadata',
            magneto_dot_api_dot_magneto__external__pb2.AddOrUpdateEntitiesMetadataArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.AddOrUpdateEntitiesMetadataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchClonesSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/FetchClonesSummary',
            magneto_dot_api_dot_magneto__external__pb2.FetchClonesSummaryArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.FetchClonesSummaryResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchAppTdmTasksSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/FetchAppTdmTasksSummary',
            magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTasksSummaryArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTasksSummaryResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchAppTdmTaskDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/FetchAppTdmTaskDetails',
            magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTaskDetailsArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.FetchAppTdmTaskDetailsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchTimelineForClone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/FetchTimelineForClone',
            magneto_dot_api_dot_magneto__external__pb2.FetchTimelineForCloneArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.FetchTimelineForCloneResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNasAnalysisStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/GetNasAnalysisStats',
            magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisStatsArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisStatsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetNasAnalysisDefaultConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/GetNasAnalysisDefaultConfig',
            magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisDefaultConfigArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.GetNasAnalysisDefaultConfigResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateSnapshotOfClones(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/CreateSnapshotOfClones',
            magneto_dot_api_dot_magneto__external__pb2.CreateSnapshotOfClonesArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.CreateSnapshotOfClonesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateSnapshotOfClone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/UpdateSnapshotOfClone',
            magneto_dot_api_dot_magneto__external__pb2.UpdateSnapshotOfCloneArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.UpdateSnapshotOfCloneResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteSnapshotsOfClones(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/DeleteSnapshotsOfClones',
            magneto_dot_api_dot_magneto__external__pb2.DeleteSnapshotsOfClonesArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.DeleteSnapshotsOfClonesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateClone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/CreateClone',
            magneto_dot_api_dot_magneto__external__pb2.CreateCloneArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.CreateCloneResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DestroyClone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/DestroyClone',
            magneto_dot_api_dot_magneto__external__pb2.DestroyCloneArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.DestroyCloneResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/LookupEntities',
            magneto_dot_api_dot_magneto__external__pb2.LookupEntitiesArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.LookupEntitiesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitiateFailoverRx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/InitiateFailoverRx',
            magneto_dot_api_dot_magneto__failover__pb2.InitiateFailoverRxArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.InitiateFailoverRxResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ScheduleFailoverBackupAndReplication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/ScheduleFailoverBackupAndReplication',
            magneto_dot_api_dot_magneto__failover__pb2.ScheduleFailoverBackupAndReplicationArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.ScheduleFailoverBackupAndReplicationResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PollScheduledFailoverBackupAndReplication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/PollScheduledFailoverBackupAndReplication',
            magneto_dot_api_dot_magneto__failover__pb2.PollScheduledFailoverBackupAndReplicationArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.PollScheduledFailoverBackupAndReplicationResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FinalizeFailoverTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/FinalizeFailoverTx',
            magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverTxArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverTxResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LinkFailedOverEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/LinkFailedOverEntities',
            magneto_dot_api_dot_magneto__failover__pb2.LinkFailedOverEntitiesArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.LinkFailedOverEntitiesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEntityProvenanceEdges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/UpdateEntityProvenanceEdges',
            magneto_dot_api_dot_magneto__external__pb2.UpdateEntityProvenanceEdgesArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.UpdateEntityProvenanceEdgesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FinalizeFailoverRx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/FinalizeFailoverRx',
            magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverRxArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.FinalizeFailoverRxResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelFailover(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/CancelFailover',
            magneto_dot_api_dot_magneto__failover__pb2.CancelFailoverArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.CancelFailoverResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProtectionGroupRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/GetProtectionGroupRuns',
            magneto_dot_api_dot_magneto__external__pb2.GetProtectionGroupRunsArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.GetProtectionGroupRunsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetObjectRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/GetObjectRuns',
            magneto_dot_api_dot_magneto__external__pb2.GetObjectRunsArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.GetObjectRunsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetObjectsLastRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/GetObjectsLastRun',
            magneto_dot_api_dot_magneto__external__pb2.GetObjectsLastRunArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.GetObjectsLastRunResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateObjectBackup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/CreateObjectBackup',
            magneto_dot_api_dot_magneto__external__pb2.CreateObjectBackupArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.CreateObjectBackupResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateObjectBackup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/UpdateObjectBackup',
            magneto_dot_api_dot_magneto__external__pb2.UpdateObjectBackupArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.UpdateObjectBackupResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProtectedObjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/GetProtectedObjects',
            magneto_dot_api_dot_magneto__external__pb2.GetProtectedObjectsArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.GetProtectedObjectsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PerformObjectBackupAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/PerformObjectBackupAction',
            magneto_dot_api_dot_magneto__external__pb2.PerformObjectBackupActionArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.PerformObjectBackupActionResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSnapshotLivenessInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/GetSnapshotLivenessInfo',
            magneto_dot_api_dot_magneto__external__debug__pb2.GetSnapshotLivenessInfoArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__debug__pb2.GetSnapshotLivenessInfoResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelObjectSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/CancelObjectSnapshot',
            magneto_dot_api_dot_magneto__external__pb2.CancelObjectSnapshotArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.CancelObjectSnapshotResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LookupFailovers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/LookupFailovers',
            magneto_dot_api_dot_magneto__failover__pb2.LookupFailoversArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.LookupFailoversResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBackupRunsInternalState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/GetBackupRunsInternalState',
            magneto_dot_api_dot_magneto__external__debug__pb2.GetBackupRunsInternalStateArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__debug__pb2.GetBackupRunsInternalStateResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitiateTenantFailover(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/InitiateTenantFailover',
            magneto_dot_api_dot_magneto__failover__pb2.InitiateTenantFailoverArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.InitiateTenantFailoverResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitiateSnapshotMigration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/InitiateSnapshotMigration',
            magneto_dot_api_dot_magneto__failover__pb2.InitiateSnapshotMigrationArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.InitiateSnapshotMigrationResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchCloudSnapshotDone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/FetchCloudSnapshotDone',
            magneto_dot_api_dot_magneto__failover__pb2.FetchCloudSnapshotDoneArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.FetchCloudSnapshotDoneResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelTenantFailover(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/CancelTenantFailover',
            magneto_dot_api_dot_magneto__failover__pb2.CancelTenantFailoverArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.CancelTenantFailoverResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CleanupTenantData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/CleanupTenantData',
            magneto_dot_api_dot_magneto__failover__pb2.CleanupTenantDataArg.SerializeToString,
            magneto_dot_api_dot_magneto__failover__pb2.CleanupTenantDataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PauseProtectionGroupRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/PauseProtectionGroupRuns',
            magneto_dot_api_dot_magneto__external__pb2.PauseProtectionGroupRunsArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.PauseProtectionGroupRunsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProtectionGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/ListProtectionGroups',
            magneto_dot_api_dot_magneto__external__pb2.ListProtectionGroupsArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.ListProtectionGroupsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResumeProtectionGroupRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/ResumeProtectionGroupRuns',
            magneto_dot_api_dot_magneto__external__pb2.ResumeProtectionGroupRunsArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.ResumeProtectionGroupRunsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartExternallyTriggeredBackup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/StartExternallyTriggeredBackup',
            magneto_dot_api_dot_magneto__external__pb2.StartExternallyTriggeredBackupArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.StartExternallyTriggeredBackupResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EndExternallyTriggeredBackup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/EndExternallyTriggeredBackup',
            magneto_dot_api_dot_magneto__external__pb2.EndExternallyTriggeredBackupArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.EndExternallyTriggeredBackupResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExternallyTriggeredKeepAlive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/ExternallyTriggeredKeepAlive',
            magneto_dot_api_dot_magneto__external__pb2.ExternallyTriggeredKeepAliveArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.ExternallyTriggeredKeepAliveResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExportMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/ExportMetadata',
            magneto_dot_api_dot_magneto__external__debug__pb2.ExportMetadataArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__debug__pb2.ExportMetadataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryExportMetadataStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/QueryExportMetadataStatus',
            magneto_dot_api_dot_magneto__external__debug__pb2.QueryExportMetadataStatusArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__debug__pb2.QueryExportMetadataStatusResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ImportMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/ImportMetadata',
            magneto_dot_api_dot_magneto__external__debug__pb2.ImportMetadataArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__debug__pb2.ImportMetadataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryImportMetadataStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/QueryImportMetadataStatus',
            magneto_dot_api_dot_magneto__external__debug__pb2.QueryImportMetadataStatusArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__debug__pb2.QueryImportMetadataStatusResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExpandObjectBackupSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/ExpandObjectBackupSource',
            magneto_dot_api_dot_magneto__external__pb2.CreateObjectBackupArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.ExpandObjectBackupSourceResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RestrictSourceEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/RestrictSourceEntities',
            magneto_dot_api_dot_magneto__external__pb2.RestrictSourceEntitiesArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.RestrictSourceEntitiesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateTenantMigrationMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/ValidateTenantMigrationMetadata',
            magneto_dot_api_dot_magneto__external__debug__pb2.ValidateTenantMigrationMetadataArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__debug__pb2.ValidateTenantMigrationMetadataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryTenantMigrationValidationStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/QueryTenantMigrationValidationStatus',
            magneto_dot_api_dot_magneto__external__debug__pb2.QueryTenantMigrationValidationStatusArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__debug__pb2.QueryTenantMigrationValidationStatusResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EditObjectBackupRunsMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.api.GRpcService/EditObjectBackupRunsMetadata',
            magneto_dot_api_dot_magneto__external__pb2.EditObjectBackupRunsMetadataArg.SerializeToString,
            magneto_dot_api_dot_magneto__external__pb2.EditObjectBackupRunsMetadataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
