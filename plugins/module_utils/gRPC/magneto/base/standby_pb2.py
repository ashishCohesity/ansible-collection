# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: magneto/base/standby.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from atom.base import event_pb2 as atom_dot_base_dot_event__pb2
from magneto.base import magneto_pb2 as magneto_dot_base_dot_magneto__pb2
try:
  magneto_dot_base_dot_env__params__pb2 = magneto_dot_base_dot_magneto__pb2.magneto_dot_base_dot_env__params__pb2
except AttributeError:
  magneto_dot_base_dot_env__params__pb2 = magneto_dot_base_dot_magneto__pb2.magneto.base.env_params_pb2
from magneto.base import sub_task_pb2 as magneto_dot_base_dot_sub__task__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1amagneto/base/standby.proto\x12\x18\x63ohesity.magneto.standby\x1a\x15\x61tom/base/event.proto\x1a\x1amagneto/base/magneto.proto\x1a\x1bmagneto/base/sub_task.proto\"\xd4\x02\n\x15LogApplyRestoreParams\x12\x1e\n\x12restore_time_usecs\x18\x01 \x01(\x03:\x02-1\x12\x44\n\x10virtual_disk_vec\x18\x02 \x03(\x0b\x32*.cohesity.magneto.VirtualDiskHydrationInfo\x12x\n\x1f\x62\x61\x63kup_to_standby_disk_uuid_map\x18\x03 \x03(\x0b\x32O.cohesity.magneto.standby.LogApplyRestoreParams.BackupToStandbyDiskUuidMapEntry\x1a\x41\n\x1f\x42\x61\x63kupToStandbyDiskUuidMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01J\x04\x08\x04\x10\x05R\x12is_journal_sharded\"\xf9\x01\n\x1aLogApplyRestoreSubTaskInfo\x12\x1d\n\x11\x61pplied_log_index\x18\x01 \x01(\x03:\x02-1\x12>\n\x1clast_applied_sequence_number\x18\x02 \x01(\x0b\x32\x18.cohesity.atom.Sequencer2|\n\x1flog_apply_restore_sub_task_info\x12\x1d.cohesity.magneto.SubTaskInfo\x18t \x01(\x0b\x32\x34.cohesity.magneto.standby.LogApplyRestoreSubTaskInfo\"\xc3\x03\n\x18ReHydrateVMRestoreParams\x12$\n\x15rehydrate_full_backup\x18\x03 \x01(\x08:\x05\x66\x61lse\x12 \n\x12is_cdp_rehydration\x18\x04 \x01(\x08:\x04true\x12{\n\x1f\x62\x61\x63kup_to_standby_disk_uuid_map\x18\x05 \x03(\x0b\x32R.cohesity.magneto.standby.ReHydrateVMRestoreParams.BackupToStandbyDiskUuidMapEntry\x12O\n#latest_cdp_standby_hydration_params\x18\x01 \x01(\x0b\x32\".cohesity.magneto.CDPRestoreParams\x12N\n\"latest_cdp_backup_hydration_params\x18\x02 \x01(\x0b\x32\".cohesity.magneto.CDPRestoreParams\x1a\x41\n\x1f\x42\x61\x63kupToStandbyDiskUuidMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'magneto.base.standby_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_LOGAPPLYRESTOREPARAMS_BACKUPTOSTANDBYDISKUUIDMAPENTRY']._loaded_options = None
  _globals['_LOGAPPLYRESTOREPARAMS_BACKUPTOSTANDBYDISKUUIDMAPENTRY']._serialized_options = b'8\001'
  _globals['_REHYDRATEVMRESTOREPARAMS_BACKUPTOSTANDBYDISKUUIDMAPENTRY']._loaded_options = None
  _globals['_REHYDRATEVMRESTOREPARAMS_BACKUPTOSTANDBYDISKUUIDMAPENTRY']._serialized_options = b'8\001'
  _globals['_LOGAPPLYRESTOREPARAMS']._serialized_start=137
  _globals['_LOGAPPLYRESTOREPARAMS']._serialized_end=477
  _globals['_LOGAPPLYRESTOREPARAMS_BACKUPTOSTANDBYDISKUUIDMAPENTRY']._serialized_start=386
  _globals['_LOGAPPLYRESTOREPARAMS_BACKUPTOSTANDBYDISKUUIDMAPENTRY']._serialized_end=451
  _globals['_LOGAPPLYRESTORESUBTASKINFO']._serialized_start=480
  _globals['_LOGAPPLYRESTORESUBTASKINFO']._serialized_end=729
  _globals['_REHYDRATEVMRESTOREPARAMS']._serialized_start=732
  _globals['_REHYDRATEVMRESTOREPARAMS']._serialized_end=1183
  _globals['_REHYDRATEVMRESTOREPARAMS_BACKUPTOSTANDBYDISKUUIDMAPENTRY']._serialized_start=386
  _globals['_REHYDRATEVMRESTOREPARAMS_BACKUPTOSTANDBYDISKUUIDMAPENTRY']._serialized_end=451
# @@protoc_insertion_point(module_scope)
