# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from bifrost.task import bifrost_task_pb2 as bifrost_dot_task_dot_bifrost__task__pb2
from magneto.slave.stub import bridge_updates_pb2 as magneto_dot_slave_dot_stub_dot_bridge__updates__pb2
from magneto.slave.stub import stub_pb2 as magneto_dot_slave_dot_stub_dot_stub__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in magneto/slave/stub/stub_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RpcServiceStub(object):
    """-----------------------------------------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartBackupTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/StartBackupTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartBackupTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartBackupTaskResult.FromString,
                _registered_method=True)
        self.CancelBackupTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/CancelBackupTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelBackupTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelBackupTaskResult.FromString,
                _registered_method=True)
        self.PauseBackupTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/PauseBackupTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.PauseBackupTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.PauseBackupTaskResult.FromString,
                _registered_method=True)
        self.StartFetchStorageInfoTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/StartFetchStorageInfoTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartFetchStorageInfoTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartFetchStorageInfoTaskResult.FromString,
                _registered_method=True)
        self.CancelFetchStorageInfoTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/CancelFetchStorageInfoTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelFetchStorageInfoTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelFetchStorageInfoTaskResult.FromString,
                _registered_method=True)
        self.StartTakeGroupSnapshotTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/StartTakeGroupSnapshotTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartTakeGroupSnapshotTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartTakeGroupSnapshotTaskResult.FromString,
                _registered_method=True)
        self.CancelTakeGroupSnapshotTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/CancelTakeGroupSnapshotTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelTakeGroupSnapshotTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelTakeGroupSnapshotTaskResult.FromString,
                _registered_method=True)
        self.StartTeardownGroupSnapshotTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/StartTeardownGroupSnapshotTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartTeardownGroupSnapshotTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartTeardownGroupSnapshotTaskResult.FromString,
                _registered_method=True)
        self.StartRestoreTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/StartRestoreTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartRestoreTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartRestoreTaskResult.FromString,
                _registered_method=True)
        self.CancelRestoreTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/CancelRestoreTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelRestoreTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelRestoreTaskResult.FromString,
                _registered_method=True)
        self.StartDestroyCloneTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/StartDestroyCloneTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartDestroyCloneTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartDestroyCloneTaskResult.FromString,
                _registered_method=True)
        self.StartDeactivateJobEntities = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/StartDeactivateJobEntities',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartDeactivateJobEntitiesArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartDeactivateJobEntitiesResult.FromString,
                _registered_method=True)
        self.StartConversionTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/StartConversionTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartConversionTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartConversionTaskResult.FromString,
                _registered_method=True)
        self.ActionUpdate = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/ActionUpdate',
                request_serializer=magneto_dot_slave_dot_stub_dot_bridge__updates__pb2.ActionUpdateArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_bridge__updates__pb2.ActionUpdateResult.FromString,
                _registered_method=True)
        self.UpdateDatastoreLatencies = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/UpdateDatastoreLatencies',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.UpdateDatastoreLatenciesArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.UpdateDatastoreLatenciesResult.FromString,
                _registered_method=True)
        self.PermitTaskUpdate = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/PermitTaskUpdate',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.PermitTaskUpdateArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.PermitTaskUpdateResult.FromString,
                _registered_method=True)
        self.ExecRemoteReplicationActions = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/ExecRemoteReplicationActions',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.ExecRemoteReplicationActionsArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.ExecRemoteReplicationActionsResult.FromString,
                _registered_method=True)
        self.StartVerifyEntityRegistration = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/StartVerifyEntityRegistration',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartVerifyEntityRegistrationArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartVerifyEntityRegistrationResult.FromString,
                _registered_method=True)
        self.StartCloudDeployTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/StartCloudDeployTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartCloudDeployTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartCloudDeployTaskResult.FromString,
                _registered_method=True)
        self.CancelCloudDeployTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/CancelCloudDeployTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelCloudDeployTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelCloudDeployTaskResult.FromString,
                _registered_method=True)
        self.UpdateBifrostTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/UpdateBifrostTask',
                request_serializer=bifrost_dot_task_dot_bifrost__task__pb2.UpdateBifrostTaskArg.SerializeToString,
                response_deserializer=bifrost_dot_task_dot_bifrost__task__pb2.UpdateBifrostTaskResult.FromString,
                _registered_method=True)
        self.NotifySlaveTask = channel.unary_unary(
                '/cohesity.magneto.slave.stub.RpcService/NotifySlaveTask',
                request_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.NotifySlaveTaskArg.SerializeToString,
                response_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.NotifySlaveTaskResult.FromString,
                _registered_method=True)


class RpcServiceServicer(object):
    """-----------------------------------------------------------------------------

    """

    def StartBackupTask(self, request, context):
        """RPC called by the magneto master to start a backup task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelBackupTask(self, request, context):
        """RPC called by the magneto master to cancel a backup task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseBackupTask(self, request, context):
        """RPC called by the magneto master to pause a backup task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartFetchStorageInfoTask(self, request, context):
        """RPC called by the magneto master to start fetch storage info task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelFetchStorageInfoTask(self, request, context):
        """RPC called by the magneto master to cancel fetch storage info task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartTakeGroupSnapshotTask(self, request, context):
        """RPC called by the magneto master to start a group snapshot task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelTakeGroupSnapshotTask(self, request, context):
        """RPC called by the magneto master to cancel a group snapshot task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartTeardownGroupSnapshotTask(self, request, context):
        """RPC called by the magneto master to teardown group snapshot task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartRestoreTask(self, request, context):
        """RPC called by the magneto master to start a restore task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelRestoreTask(self, request, context):
        """RPC called by the magneto master to cancel a restore task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartDestroyCloneTask(self, request, context):
        """RPC called by the magneto master to start a destruction of a clone task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartDeactivateJobEntities(self, request, context):
        """RPC called by the magneto master to start deactivation of job entities
        task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartConversionTask(self, request, context):
        """RPC called by the magneto master to start the VM conversion task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActionUpdate(self, request, context):
        """RPC called by the Bridge module to update the slave about an
        action that it previously issued to the module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDatastoreLatencies(self, request, context):
        """RPC called by the Magneto master to update the slave about observed
        latencies for the datastores within a registered entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PermitTaskUpdate(self, request, context):
        """RPC called by the Magneto master to allow a task/sub-task to proceed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecRemoteReplicationActions(self, request, context):
        """RPC called by the Magneto master on remote cluster to perform replication
        related actions. This RPC is meant for the local Magneto master. Slave
        should forward this RPC to the master.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartVerifyEntityRegistration(self, request, context):
        """RPC called by the Magneto master on entity registration, to start
        verifying that the provided credentials are correct and can give Magneto
        the necessary priviledges.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartCloudDeployTask(self, request, context):
        """RPC called by the magneto master to start the cloud deploy task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelCloudDeployTask(self, request, context):
        """RPC called by the magneto master to cancel a cloud deploy task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBifrostTask(self, request, context):
        """RPC called by the bifrost-broker to send task-result (scheduled) in
        bifrost-server, by an rpc earlier by the current Magneto slave.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifySlaveTask(self, request, context):
        """RPC called by the magneto master to update a slave task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartBackupTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartBackupTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartBackupTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartBackupTaskResult.SerializeToString,
            ),
            'CancelBackupTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelBackupTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelBackupTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelBackupTaskResult.SerializeToString,
            ),
            'PauseBackupTask': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseBackupTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.PauseBackupTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.PauseBackupTaskResult.SerializeToString,
            ),
            'StartFetchStorageInfoTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartFetchStorageInfoTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartFetchStorageInfoTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartFetchStorageInfoTaskResult.SerializeToString,
            ),
            'CancelFetchStorageInfoTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelFetchStorageInfoTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelFetchStorageInfoTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelFetchStorageInfoTaskResult.SerializeToString,
            ),
            'StartTakeGroupSnapshotTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartTakeGroupSnapshotTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartTakeGroupSnapshotTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartTakeGroupSnapshotTaskResult.SerializeToString,
            ),
            'CancelTakeGroupSnapshotTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelTakeGroupSnapshotTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelTakeGroupSnapshotTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelTakeGroupSnapshotTaskResult.SerializeToString,
            ),
            'StartTeardownGroupSnapshotTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartTeardownGroupSnapshotTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartTeardownGroupSnapshotTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartTeardownGroupSnapshotTaskResult.SerializeToString,
            ),
            'StartRestoreTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartRestoreTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartRestoreTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartRestoreTaskResult.SerializeToString,
            ),
            'CancelRestoreTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelRestoreTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelRestoreTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelRestoreTaskResult.SerializeToString,
            ),
            'StartDestroyCloneTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartDestroyCloneTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartDestroyCloneTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartDestroyCloneTaskResult.SerializeToString,
            ),
            'StartDeactivateJobEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.StartDeactivateJobEntities,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartDeactivateJobEntitiesArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartDeactivateJobEntitiesResult.SerializeToString,
            ),
            'StartConversionTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartConversionTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartConversionTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartConversionTaskResult.SerializeToString,
            ),
            'ActionUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.ActionUpdate,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_bridge__updates__pb2.ActionUpdateArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_bridge__updates__pb2.ActionUpdateResult.SerializeToString,
            ),
            'UpdateDatastoreLatencies': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDatastoreLatencies,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.UpdateDatastoreLatenciesArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.UpdateDatastoreLatenciesResult.SerializeToString,
            ),
            'PermitTaskUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.PermitTaskUpdate,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.PermitTaskUpdateArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.PermitTaskUpdateResult.SerializeToString,
            ),
            'ExecRemoteReplicationActions': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecRemoteReplicationActions,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.ExecRemoteReplicationActionsArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.ExecRemoteReplicationActionsResult.SerializeToString,
            ),
            'StartVerifyEntityRegistration': grpc.unary_unary_rpc_method_handler(
                    servicer.StartVerifyEntityRegistration,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartVerifyEntityRegistrationArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartVerifyEntityRegistrationResult.SerializeToString,
            ),
            'StartCloudDeployTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartCloudDeployTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartCloudDeployTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.StartCloudDeployTaskResult.SerializeToString,
            ),
            'CancelCloudDeployTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelCloudDeployTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelCloudDeployTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.CancelCloudDeployTaskResult.SerializeToString,
            ),
            'UpdateBifrostTask': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBifrostTask,
                    request_deserializer=bifrost_dot_task_dot_bifrost__task__pb2.UpdateBifrostTaskArg.FromString,
                    response_serializer=bifrost_dot_task_dot_bifrost__task__pb2.UpdateBifrostTaskResult.SerializeToString,
            ),
            'NotifySlaveTask': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifySlaveTask,
                    request_deserializer=magneto_dot_slave_dot_stub_dot_stub__pb2.NotifySlaveTaskArg.FromString,
                    response_serializer=magneto_dot_slave_dot_stub_dot_stub__pb2.NotifySlaveTaskResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.magneto.slave.stub.RpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.magneto.slave.stub.RpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RpcService(object):
    """-----------------------------------------------------------------------------

    """

    @staticmethod
    def StartBackupTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/StartBackupTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartBackupTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartBackupTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelBackupTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/CancelBackupTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.CancelBackupTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.CancelBackupTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PauseBackupTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/PauseBackupTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.PauseBackupTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.PauseBackupTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartFetchStorageInfoTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/StartFetchStorageInfoTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartFetchStorageInfoTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartFetchStorageInfoTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelFetchStorageInfoTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/CancelFetchStorageInfoTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.CancelFetchStorageInfoTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.CancelFetchStorageInfoTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartTakeGroupSnapshotTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/StartTakeGroupSnapshotTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartTakeGroupSnapshotTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartTakeGroupSnapshotTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelTakeGroupSnapshotTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/CancelTakeGroupSnapshotTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.CancelTakeGroupSnapshotTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.CancelTakeGroupSnapshotTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartTeardownGroupSnapshotTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/StartTeardownGroupSnapshotTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartTeardownGroupSnapshotTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartTeardownGroupSnapshotTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartRestoreTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/StartRestoreTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartRestoreTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartRestoreTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelRestoreTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/CancelRestoreTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.CancelRestoreTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.CancelRestoreTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartDestroyCloneTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/StartDestroyCloneTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartDestroyCloneTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartDestroyCloneTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartDeactivateJobEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/StartDeactivateJobEntities',
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartDeactivateJobEntitiesArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartDeactivateJobEntitiesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartConversionTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/StartConversionTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartConversionTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartConversionTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ActionUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/ActionUpdate',
            magneto_dot_slave_dot_stub_dot_bridge__updates__pb2.ActionUpdateArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_bridge__updates__pb2.ActionUpdateResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDatastoreLatencies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/UpdateDatastoreLatencies',
            magneto_dot_slave_dot_stub_dot_stub__pb2.UpdateDatastoreLatenciesArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.UpdateDatastoreLatenciesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PermitTaskUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/PermitTaskUpdate',
            magneto_dot_slave_dot_stub_dot_stub__pb2.PermitTaskUpdateArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.PermitTaskUpdateResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecRemoteReplicationActions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/ExecRemoteReplicationActions',
            magneto_dot_slave_dot_stub_dot_stub__pb2.ExecRemoteReplicationActionsArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.ExecRemoteReplicationActionsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartVerifyEntityRegistration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/StartVerifyEntityRegistration',
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartVerifyEntityRegistrationArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartVerifyEntityRegistrationResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartCloudDeployTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/StartCloudDeployTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartCloudDeployTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.StartCloudDeployTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelCloudDeployTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/CancelCloudDeployTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.CancelCloudDeployTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.CancelCloudDeployTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateBifrostTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/UpdateBifrostTask',
            bifrost_dot_task_dot_bifrost__task__pb2.UpdateBifrostTaskArg.SerializeToString,
            bifrost_dot_task_dot_bifrost__task__pb2.UpdateBifrostTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifySlaveTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.magneto.slave.stub.RpcService/NotifySlaveTask',
            magneto_dot_slave_dot_stub_dot_stub__pb2.NotifySlaveTaskArg.SerializeToString,
            magneto_dot_slave_dot_stub_dot_stub__pb2.NotifySlaveTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
