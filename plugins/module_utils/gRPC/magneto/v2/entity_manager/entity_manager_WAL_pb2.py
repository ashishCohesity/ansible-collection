# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: magneto/v2/entity_manager/entity_manager_WAL.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from magneto.base import error_pb2 as magneto_dot_base_dot_error__pb2
from magneto.v2.entity_manager import entity_external_pb2 as magneto_dot_v2_dot_entity__manager_dot_entity__external__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n2magneto/v2/entity_manager/entity_manager_WAL.proto\x12\x17\x63ohesity.magneto.entity\x1a\x18magneto/base/error.proto\x1a/magneto/v2/entity_manager/entity_external.proto\"G\n\x19\x45ntityManagerVersionProto\x12\x12\n\x07version\x18\x01 \x01(\x03:\x01\x30\x12\x16\n\x0b\x61pi_version\x18\x02 \x01(\x03:\x01\x30\"@\n\x11SourceTaskIdProto\x12\x0f\n\x07task_id\x18\x01 \x01(\x03\x12\x1a\n\x12source_primary_key\x18\x02 \x01(\t\"\xe4\x03\n\x1e\x45ntityManagerRefreshStateProto\x12T\n\x18start_source_refresh_arg\x18\x01 \x01(\x0b\x32\x32.cohesity.magneto.api.entity.StartSourceRefreshArg\x12\x43\n\x0frefresh_task_id\x18\x02 \x01(\x0b\x32*.cohesity.magneto.entity.SourceTaskIdProto\x12g\n\x0erefresh_status\x18\x03 \x01(\x0e\x32\x45.cohesity.magneto.entity.EntityManagerRefreshStateProto.RefreshStatus:\x08kWaiting\x12\x19\n\x11pagination_cookie\x18\x04 \x01(\t\x12\x19\n\x11last_updated_secs\x18\x05 \x01(\x03\x12+\n\x05\x65rror\x18\x06 \x01(\x0b\x32\x1c.cohesity.magneto.ErrorProto\"[\n\rRefreshStatus\x12\x0c\n\x08kWaiting\x10\x00\x12\x0c\n\x08kStarted\x10\x01\x12\x11\n\rkRefreshedDAG\x10\x02\x12\r\n\tkFinished\x10\x03\x12\x0c\n\x08kAborted\x10\x04\"\xfc\x02\n!EntityManagerUnregisterStateProto\x12H\n\x0eunregister_arg\x18\x01 \x01(\x0b\x32\x30.cohesity.magneto.api.entity.UnregisterSourceArg\x12s\n\x11unregister_status\x18\x03 \x01(\x0e\x32O.cohesity.magneto.entity.EntityManagerUnregisterStateProto.UnregistrationStatus:\x07kNotSet\x12\x19\n\x11last_updated_secs\x18\x04 \x01(\x03\x12+\n\x05\x65rror\x18\x05 \x01(\x0b\x32\x1c.cohesity.magneto.ErrorProto\"P\n\x14UnregistrationStatus\x12\x0b\n\x07kNotSet\x10\x00\x12\x0c\n\x08kPending\x10\x01\x12\x0e\n\nkDetaching\x10\x02\x12\r\n\tkFinished\x10\x03\"\x92\x02\n\x0eWALRecordProto\x12R\n\x16\x65ntity_manager_version\x18\x01 \x01(\x0b\x32\x32.cohesity.magneto.entity.EntityManagerVersionProto\x12R\n\x11refresh_state_vec\x18\x02 \x03(\x0b\x32\x37.cohesity.magneto.entity.EntityManagerRefreshStateProto\x12X\n\x14unregister_state_vec\x18\x03 \x03(\x0b\x32:.cohesity.magneto.entity.EntityManagerUnregisterStateProto')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'magneto.v2.entity_manager.entity_manager_WAL_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_ENTITYMANAGERVERSIONPROTO']._serialized_start=154
  _globals['_ENTITYMANAGERVERSIONPROTO']._serialized_end=225
  _globals['_SOURCETASKIDPROTO']._serialized_start=227
  _globals['_SOURCETASKIDPROTO']._serialized_end=291
  _globals['_ENTITYMANAGERREFRESHSTATEPROTO']._serialized_start=294
  _globals['_ENTITYMANAGERREFRESHSTATEPROTO']._serialized_end=778
  _globals['_ENTITYMANAGERREFRESHSTATEPROTO_REFRESHSTATUS']._serialized_start=687
  _globals['_ENTITYMANAGERREFRESHSTATEPROTO_REFRESHSTATUS']._serialized_end=778
  _globals['_ENTITYMANAGERUNREGISTERSTATEPROTO']._serialized_start=781
  _globals['_ENTITYMANAGERUNREGISTERSTATEPROTO']._serialized_end=1161
  _globals['_ENTITYMANAGERUNREGISTERSTATEPROTO_UNREGISTRATIONSTATUS']._serialized_start=1081
  _globals['_ENTITYMANAGERUNREGISTERSTATEPROTO_UNREGISTRATIONSTATUS']._serialized_end=1161
  _globals['_WALRECORDPROTO']._serialized_start=1164
  _globals['_WALRECORDPROTO']._serialized_end=1438
# @@protoc_insertion_point(module_scope)
