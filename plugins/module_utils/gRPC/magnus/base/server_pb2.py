# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: magnus/base/server.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from magnus.api.v1 import public_vmware_data_pb2 as magnus_dot_api_dot_v1_dot_public__vmware__data__pb2
from magnus.base import error_pb2 as magnus_dot_base_dot_error__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18magnus/base/server.proto\x12\x0f\x63ohesity.magnus\x1a&magnus/api/v1/public_vmware_data.proto\x1a\x17magnus/base/error.proto\"M\n\x17MagnusServerConfigProto\x12\x32\n\x11gandalf_owner_key\x18\x01 \x01(\t:\x17magnus_server_owner_key\"\"\n\x0b\x45nvironment\"\x13\n\x04Type\x12\x0b\n\x07kVMware\x10\x00\"M\n\x08TaskType\"A\n\x04Type\x12\x0c\n\x08kUnknown\x10\x00\x12\x11\n\rkVMwareVMTask\x10\x01\x12\x18\n\x14kVMwareDatastoreTask\x10\x02\"^\n\nTaskStatus\"P\n\x04Type\x12\x0c\n\x08kUnknown\x10\x00\x12\r\n\tkAccepted\x10\x01\x12\x0e\n\nkScheduled\x10\x02\x12\x0c\n\x08kRunning\x10\x03\x12\r\n\tkFinished\x10\x04\"\xee\x02\n\x08TaskBase\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12.\n\x03\x65nv\x18\x02 \x01(\x0e\x32!.cohesity.magnus.Environment.Type\x12,\n\x04type\x18\x03 \x01(\x0e\x32\x1e.cohesity.magnus.TaskType.Type\x12\x30\n\x06status\x18\x04 \x01(\x0e\x32 .cohesity.magnus.TaskStatus.Type\x12*\n\x05\x65rror\x18\x05 \x01(\x0b\x32\x1b.cohesity.magnus.ErrorProto\x12>\n\x0e\x61ssigned_actor\x18\x06 \x01(\x0b\x32&.cohesity.magnus.ActorIncarnationProto\x12\x18\n\x10start_time_usecs\x18\x07 \x01(\x03\x12\x16\n\x0e\x65nd_time_usecs\x18\x08 \x01(\x03\x12#\n\x14is_garbage_collected\x18\t \x01(\x08:\x05\x66\x61lse\"\xc7\x01\n\x0eTaskStateProto\x12\'\n\x04\x62\x61se\x18\x01 \x01(\x0b\x32\x19.cohesity.magnus.TaskBase\x12>\n\x0evmware_vm_task\x18\x02 \x01(\x0b\x32&.cohesity.magnus.VMwareVMPersistedTask\x12L\n\x15vmware_datastore_task\x18\x03 \x01(\x0b\x32-.cohesity.magnus.VMwareDatastorePersistedTask\"A\n\x15\x41\x63torIncarnationProto\x12\x10\n\x08\x61\x63tor_id\x18\x01 \x01(\t\x12\x16\n\x0eincarnation_id\x18\x02 \x01(\x03\"\x8c\x02\n\x1cVMwareDatastorePersistedTask\x12\x41\n\x07request\x18\x01 \x01(\x0b\x32\x30.cohesity.magnus.api.v1.VMwareDatastoreActionArg\x12\x44\n\x06result\x18\x02 \x01(\x0b\x32\x34.cohesity.magnus.VMwareDatastorePersistedTask.Result\x1a\x63\n\x06Result\x12Y\n\x1amount_nas_datastore_result\x18\x01 \x01(\x0b\x32\x35.cohesity.magnus.api.v1.MountVMwareNasDatastoreResult\"\xf9\x02\n\x15VMwareVMPersistedTask\x12:\n\x07request\x18\x01 \x01(\x0b\x32).cohesity.magnus.api.v1.VMwareVMActionArg\x12=\n\x06result\x18\x02 \x01(\x0b\x32-.cohesity.magnus.VMwareVMPersistedTask.Result\x1a\xe4\x01\n\x06Result\x12\x43\n\rcreate_result\x18\x01 \x01(\x0b\x32,.cohesity.magnus.api.v1.CreateVMwareVMResult\x12G\n\x0frelocate_result\x18\x02 \x01(\x0b\x32..cohesity.magnus.api.v1.RelocateVMwareVMResult\x12L\n\x12run_program_result\x18\x03 \x01(\x0b\x32\x30.cohesity.magnus.api.v1.RunProgramVMwareVMResult\"\xc9\x01\n\x0f\x41\x63torStateProto\x12\x35\n\x05\x61\x63tor\x18\x01 \x01(\x0b\x32&.cohesity.magnus.ActorIncarnationProto\x12\x32\n*idle_actor_expiry_duration_at_server_msecs\x18\x02 \x01(\x03\x12\x15\n\x08\x63\x61pacity\x18\x03 \x01(\r:\x03\x31\x32\x38\x12\x12\n\nis_expired\x18\x04 \x01(\x08\x12 \n\x14last_received_msg_id\x18\x05 \x01(\x03:\x02-1\"\x1e\n\x10IncarnationProto\x12\n\n\x02id\x18\x01 \x01(\x03\"\xbc\x01\n\x16ServerPersistenceProto\x12\x31\n\x08task_vec\x18\x01 \x03(\x0b\x32\x1f.cohesity.magnus.TaskStateProto\x12\x33\n\tactor_vec\x18\x02 \x03(\x0b\x32 .cohesity.magnus.ActorStateProto\x12:\n\x0fincarnation_vec\x18\x03 \x03(\x0b\x32!.cohesity.magnus.IncarnationProto')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'magnus.base.server_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_MAGNUSSERVERCONFIGPROTO']._serialized_start=110
  _globals['_MAGNUSSERVERCONFIGPROTO']._serialized_end=187
  _globals['_ENVIRONMENT']._serialized_start=189
  _globals['_ENVIRONMENT']._serialized_end=223
  _globals['_ENVIRONMENT_TYPE']._serialized_start=204
  _globals['_ENVIRONMENT_TYPE']._serialized_end=223
  _globals['_TASKTYPE']._serialized_start=225
  _globals['_TASKTYPE']._serialized_end=302
  _globals['_TASKTYPE_TYPE']._serialized_start=237
  _globals['_TASKTYPE_TYPE']._serialized_end=302
  _globals['_TASKSTATUS']._serialized_start=304
  _globals['_TASKSTATUS']._serialized_end=398
  _globals['_TASKSTATUS_TYPE']._serialized_start=318
  _globals['_TASKSTATUS_TYPE']._serialized_end=398
  _globals['_TASKBASE']._serialized_start=401
  _globals['_TASKBASE']._serialized_end=767
  _globals['_TASKSTATEPROTO']._serialized_start=770
  _globals['_TASKSTATEPROTO']._serialized_end=969
  _globals['_ACTORINCARNATIONPROTO']._serialized_start=971
  _globals['_ACTORINCARNATIONPROTO']._serialized_end=1036
  _globals['_VMWAREDATASTOREPERSISTEDTASK']._serialized_start=1039
  _globals['_VMWAREDATASTOREPERSISTEDTASK']._serialized_end=1307
  _globals['_VMWAREDATASTOREPERSISTEDTASK_RESULT']._serialized_start=1208
  _globals['_VMWAREDATASTOREPERSISTEDTASK_RESULT']._serialized_end=1307
  _globals['_VMWAREVMPERSISTEDTASK']._serialized_start=1310
  _globals['_VMWAREVMPERSISTEDTASK']._serialized_end=1687
  _globals['_VMWAREVMPERSISTEDTASK_RESULT']._serialized_start=1459
  _globals['_VMWAREVMPERSISTEDTASK_RESULT']._serialized_end=1687
  _globals['_ACTORSTATEPROTO']._serialized_start=1690
  _globals['_ACTORSTATEPROTO']._serialized_end=1891
  _globals['_INCARNATIONPROTO']._serialized_start=1893
  _globals['_INCARNATIONPROTO']._serialized_end=1923
  _globals['_SERVERPERSISTENCEPROTO']._serialized_start=1926
  _globals['_SERVERPERSISTENCEPROTO']._serialized_end=2114
# @@protoc_insertion_point(module_scope)
