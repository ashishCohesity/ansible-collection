# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from plugins.common.data_service import data_service_pb2 as plugins_dot_common_dot_data__service_dot_data__service__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in plugins/common/data_service/data_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class DataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Open = channel.unary_unary(
                '/cohesity.connector.grpc.stub.DataService/Open',
                request_serializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceOpenRequest.SerializeToString,
                response_deserializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceOpenResponse.FromString,
                _registered_method=True)
        self.Write = channel.unary_unary(
                '/cohesity.connector.grpc.stub.DataService/Write',
                request_serializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceWriteRequest.SerializeToString,
                response_deserializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceWriteResponse.FromString,
                _registered_method=True)
        self.Read = channel.unary_unary(
                '/cohesity.connector.grpc.stub.DataService/Read',
                request_serializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceReadRequest.SerializeToString,
                response_deserializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceReadResponse.FromString,
                _registered_method=True)
        self.Close = channel.unary_unary(
                '/cohesity.connector.grpc.stub.DataService/Close',
                request_serializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseRequest.SerializeToString,
                response_deserializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseResponse.FromString,
                _registered_method=True)
        self.RenameClose = channel.unary_unary(
                '/cohesity.connector.grpc.stub.DataService/RenameClose',
                request_serializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseRequest.SerializeToString,
                response_deserializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseResponse.FromString,
                _registered_method=True)


class DataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Open(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Write(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Close(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameClose(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Open': grpc.unary_unary_rpc_method_handler(
                    servicer.Open,
                    request_deserializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceOpenRequest.FromString,
                    response_serializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceOpenResponse.SerializeToString,
            ),
            'Write': grpc.unary_unary_rpc_method_handler(
                    servicer.Write,
                    request_deserializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceWriteRequest.FromString,
                    response_serializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceWriteResponse.SerializeToString,
            ),
            'Read': grpc.unary_unary_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceReadRequest.FromString,
                    response_serializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceReadResponse.SerializeToString,
            ),
            'Close': grpc.unary_unary_rpc_method_handler(
                    servicer.Close,
                    request_deserializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseRequest.FromString,
                    response_serializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseResponse.SerializeToString,
            ),
            'RenameClose': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameClose,
                    request_deserializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseRequest.FromString,
                    response_serializer=plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.connector.grpc.stub.DataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.connector.grpc.stub.DataService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Open(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.connector.grpc.stub.DataService/Open',
            plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceOpenRequest.SerializeToString,
            plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceOpenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Write(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.connector.grpc.stub.DataService/Write',
            plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceWriteRequest.SerializeToString,
            plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceWriteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.connector.grpc.stub.DataService/Read',
            plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceReadRequest.SerializeToString,
            plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.connector.grpc.stub.DataService/Close',
            plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseRequest.SerializeToString,
            plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RenameClose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.connector.grpc.stub.DataService/RenameClose',
            plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseRequest.SerializeToString,
            plugins_dot_common_dot_data__service_dot_data__service__pb2.DataServiceCloseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
