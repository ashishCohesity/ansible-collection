# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qa/environment/base/cohesity.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from qa.lib.cohesityConnector.base import platform_pb2 as qa_dot_lib_dot_cohesityConnector_dot_base_dot_platform__pb2
from qa.lib.cohesityConnector.base import backup_pb2 as qa_dot_lib_dot_cohesityConnector_dot_base_dot_backup__pb2
from qa.environment.base import common_pb2 as qa_dot_environment_dot_base_dot_common__pb2
from qa.environment.base import vmware_pb2 as qa_dot_environment_dot_base_dot_vmware__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"qa/environment/base/cohesity.proto\x12\x17\x63ohesity.qa.environment\x1a,qa/lib/cohesityConnector/base/platform.proto\x1a*qa/lib/cohesityConnector/base/backup.proto\x1a qa/environment/base/common.proto\x1a qa/environment/base/vmware.proto\"\x98\x01\n\x14\x43ohesitySoftwareInfo\x12\x0b\n\x03oid\x18\x01 \x01(\t\x12\x0f\n\x07oid_ref\x18\x02 \x01(\t\x12\x14\n\x0cversion_name\x18\x03 \x01(\t\x12\x18\n\x10package_location\x18\x04 \x01(\t\x12\x1b\n\x13latest_package_info\x18\x05 \x01(\t\x12\x15\n\rhalo_location\x18\x06 \x01(\t\"\x95\x02\n\x08NodeInfo\x12\x0b\n\x03oid\x18\x01 \x01(\t\x12\x0f\n\x07oid_ref\x18\x02 \x01(\t\x12\n\n\x02ip\x18\x03 \x01(\t\x12\x38\n\nlogin_info\x18\x04 \x01(\x0b\x32$.cohesity.qa.environment.Credentials\x12\x0c\n\x04type\x18\x05 \x01(\t\x12\x0f\n\x07ipmi_ip\x18\x06 \x01(\t\x12=\n\x0fipmi_login_info\x18\x07 \x01(\x0b\x32$.cohesity.qa.environment.Credentials\x12G\n\x10software_package\x18\x08 \x01(\x0b\x32-.cohesity.qa.environment.CohesitySoftwareInfo\"\x80\x01\n\x0bViewBoxInfo\x12\x0b\n\x03oid\x18\x01 \x01(\t\x12\x0f\n\x07oid_ref\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x45\n\x0estorage_policy\x18\x04 \x01(\x0b\x32-.cohesity.qa.cohesity_connector.StoragePolicy\"\xd5\x01\n\x14\x43lusterPartitionInfo\x12\x0b\n\x03oid\x18\x01 \x01(\t\x12\x0f\n\x07oid_ref\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x33\n\x08node_vec\x18\x04 \x03(\x0b\x32!.cohesity.qa.environment.NodeInfo\x12\x0f\n\x07vip_vec\x18\x05 \x03(\t\x12\x10\n\x08hostname\x18\x06 \x01(\t\x12\x39\n\x0bviewbox_vec\x18\x07 \x03(\x0b\x32$.cohesity.qa.environment.ViewBoxInfo\"\xec\x04\n\x0b\x43lusterInfo\x12\x0b\n\x03oid\x18\x01 \x01(\t\x12\x0f\n\x07oid_ref\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x38\n\nlogin_info\x18\x04 \x01(\x0b\x32$.cohesity.qa.environment.Credentials\x12\x0f\n\x07\x64ns_vec\x18\x05 \x03(\t\x12\x17\n\x0f\x64omain_name_vec\x18\x06 \x03(\t\x12\x0f\n\x07ntp_vec\x18\x07 \x03(\t\x12\x33\n\x08node_vec\x18\x08 \x03(\x0b\x32!.cohesity.qa.environment.NodeInfo\x12\x33\n\x06subnet\x18\t \x01(\x0b\x32#.cohesity.qa.environment.SubnetInfo\x12\x38\n\x0bipmi_subnet\x18\n \x01(\x0b\x32#.cohesity.qa.environment.SubnetInfo\x12 \n\x11\x65nable_encryption\x18\x0b \x01(\x08:\x05\x66\x61lse\x12,\n\x1e\x65ncryption_rotation_period_sec\x18\x0c \x01(\x05:\x04\x33\x36\x30\x30\x12L\n\x15\x63luster_partition_vec\x18\r \x03(\x0b\x32-.cohesity.qa.environment.ClusterPartitionInfo\x12\x43\n\x15protected_vcenter_vec\x18\x0e \x03(\x0b\x32$.cohesity.qa.environment.VCenterInfo\x12\x35\n\x07job_vec\x18\x0f \x03(\x0b\x32$.cohesity.qa.environment.CohesityJob\"\x99\x01\n\x15JobPolicyCustomFields\x12\x13\n\x0bpolicy_name\x18\x01 \x01(\t\x12\'\n\x1freplication_cluster_oid_ref_vec\x18\x02 \x03(\t\x12\"\n\x1areplication_cluster_id_vec\x18\x03 \x03(\x03\x12\x1e\n\x12schedule_end_usecs\x18\x04 \x01(\x03:\x02-1\"\xa8\x01\n\tJobPolicy\x12\x0b\n\x03oid\x18\x01 \x01(\t\x12\x0f\n\x07oid_ref\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x1a\n\x12template_file_name\x18\x05 \x01(\t\x12\x45\n\rcustom_fields\x18\x06 \x01(\x0b\x32..cohesity.qa.environment.JobPolicyCustomFields\"\x92\x03\n\x0b\x43ohesityJob\x12\x0b\n\x03oid\x18\x01 \x01(\t\x12\x0f\n\x07oid_ref\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x35\n\x07vcenter\x18\x05 \x01(\x0b\x32$.cohesity.qa.environment.VCenterInfo\x12\x35\n\x07viewbox\x18\x06 \x01(\x0b\x32$.cohesity.qa.environment.ViewBoxInfo\x12G\n\x0findexing_policy\x18\x07 \x01(\x0b\x32..cohesity.qa.cohesity_connector.IndexingPolicy\x12\x1e\n\x16\x65nable_app_consistency\x18\x08 \x01(\x08\x12\x36\n\njob_policy\x18\t \x01(\x0b\x32\".cohesity.qa.environment.JobPolicy\x12:\n\x0cvm_setup_vec\x18\n \x03(\x0b\x32$.cohesity.qa.environment.VMSetupInfoB!Z\x1fqa/environment/base/cohesity.pb')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'qa.environment.base.cohesity_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\037qa/environment/base/cohesity.pb'
  _globals['_COHESITYSOFTWAREINFO']._serialized_start=222
  _globals['_COHESITYSOFTWAREINFO']._serialized_end=374
  _globals['_NODEINFO']._serialized_start=377
  _globals['_NODEINFO']._serialized_end=654
  _globals['_VIEWBOXINFO']._serialized_start=657
  _globals['_VIEWBOXINFO']._serialized_end=785
  _globals['_CLUSTERPARTITIONINFO']._serialized_start=788
  _globals['_CLUSTERPARTITIONINFO']._serialized_end=1001
  _globals['_CLUSTERINFO']._serialized_start=1004
  _globals['_CLUSTERINFO']._serialized_end=1624
  _globals['_JOBPOLICYCUSTOMFIELDS']._serialized_start=1627
  _globals['_JOBPOLICYCUSTOMFIELDS']._serialized_end=1780
  _globals['_JOBPOLICY']._serialized_start=1783
  _globals['_JOBPOLICY']._serialized_end=1951
  _globals['_COHESITYJOB']._serialized_start=1954
  _globals['_COHESITYJOB']._serialized_end=2356
# @@protoc_insertion_point(module_scope)
