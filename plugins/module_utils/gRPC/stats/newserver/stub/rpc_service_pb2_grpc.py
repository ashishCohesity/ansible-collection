# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from stats.base import pulse_pb2 as stats_dot_base_dot_pulse__pb2
from stats.base import stats_pb2 as stats_dot_base_dot_stats__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in stats/newserver/stub/rpc_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RpcServiceStub(object):
    """-----------------------------------------------------------------------------

    RPC service used by the Stats server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMaster = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/GetMaster',
                request_serializer=stats_dot_base_dot_stats__pb2.GetMasterArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.GetMasterResult.FromString,
                _registered_method=True)
        self.CreateOrUpdateEntitySchema = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/CreateOrUpdateEntitySchema',
                request_serializer=stats_dot_base_dot_stats__pb2.CreateOrUpdateEntitySchemaArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.CreateOrUpdateEntitySchemaResult.FromString,
                _registered_method=True)
        self.GetEntitiesSchema = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/GetEntitiesSchema',
                request_serializer=stats_dot_base_dot_stats__pb2.GetEntitiesSchemaArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.GetEntitiesSchemaResult.FromString,
                _registered_method=True)
        self.AddOrUpdateEntity = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/AddOrUpdateEntity',
                request_serializer=stats_dot_base_dot_stats__pb2.AddOrUpdateEntityArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.AddOrUpdateEntityResult.FromString,
                _registered_method=True)
        self.GetEntities = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/GetEntities',
                request_serializer=stats_dot_base_dot_stats__pb2.GetEntitiesArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.GetEntitiesResult.FromString,
                _registered_method=True)
        self.NewGetEntities = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/NewGetEntities',
                request_serializer=stats_dot_base_dot_stats__pb2.GetEntitiesArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.GetEntitiesResult.FromString,
                _registered_method=True)
        self.GetEntitiesById = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/GetEntitiesById',
                request_serializer=stats_dot_base_dot_stats__pb2.GetEntitiesByIdArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.GetEntitiesByIdResult.FromString,
                _registered_method=True)
        self.NewGetEntitiesById = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/NewGetEntitiesById',
                request_serializer=stats_dot_base_dot_stats__pb2.GetEntitiesByIdArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.GetEntitiesByIdResult.FromString,
                _registered_method=True)
        self.DeleteEntity = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/DeleteEntity',
                request_serializer=stats_dot_base_dot_stats__pb2.DeleteEntityArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.DeleteEntityResult.FromString,
                _registered_method=True)
        self.DeleteClusterInstance = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/DeleteClusterInstance',
                request_serializer=stats_dot_base_dot_stats__pb2.DeleteClusterInstanceArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.DeleteClusterInstanceResult.FromString,
                _registered_method=True)
        self.AddEntityStats = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/AddEntityStats',
                request_serializer=stats_dot_base_dot_stats__pb2.AddEntityStatsArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.AddEntityStatsResult.FromString,
                _registered_method=True)
        self.AddEntitiesStats = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/AddEntitiesStats',
                request_serializer=stats_dot_base_dot_stats__pb2.AddEntitiesStatsArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.AddEntitiesStatsResult.FromString,
                _registered_method=True)
        self.GetTimeSeriesStats = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/GetTimeSeriesStats',
                request_serializer=stats_dot_base_dot_stats__pb2.GetTimeSeriesStatsArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.GetTimeSeriesStatsResult.FromString,
                _registered_method=True)
        self.CreateCounters = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/CreateCounters',
                request_serializer=stats_dot_base_dot_stats__pb2.CreateCountersArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.CreateCountersResult.FromString,
                _registered_method=True)
        self.GetCounters = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/GetCounters',
                request_serializer=stats_dot_base_dot_stats__pb2.GetCountersArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.GetCountersResult.FromString,
                _registered_method=True)
        self.UpdateCounters = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/UpdateCounters',
                request_serializer=stats_dot_base_dot_stats__pb2.UpdateCountersArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.UpdateCountersResult.FromString,
                _registered_method=True)
        self.DeleteCounters = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/DeleteCounters',
                request_serializer=stats_dot_base_dot_stats__pb2.DeleteCountersArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.DeleteCountersResult.FromString,
                _registered_method=True)
        self.CreateStatsContainers = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/CreateStatsContainers',
                request_serializer=stats_dot_base_dot_stats__pb2.CreateStatsContainersArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.CreateStatsContainersResult.FromString,
                _registered_method=True)
        self.GetStatsContainers = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/GetStatsContainers',
                request_serializer=stats_dot_base_dot_stats__pb2.GetStatsContainersArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.GetStatsContainersResult.FromString,
                _registered_method=True)
        self.UpdateStatsContainers = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/UpdateStatsContainers',
                request_serializer=stats_dot_base_dot_stats__pb2.UpdateStatsContainersArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.UpdateStatsContainersResult.FromString,
                _registered_method=True)
        self.DeleteStatsContainers = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/DeleteStatsContainers',
                request_serializer=stats_dot_base_dot_stats__pb2.DeleteStatsContainersArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.DeleteStatsContainersResult.FromString,
                _registered_method=True)
        self.GetAlertPolicies = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/GetAlertPolicies',
                request_serializer=stats_dot_base_dot_stats__pb2.GetAlertPoliciesArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.GetAlertPoliciesResult.FromString,
                _registered_method=True)
        self.UpdateAlertPolicies = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/UpdateAlertPolicies',
                request_serializer=stats_dot_base_dot_stats__pb2.UpdateAlertPoliciesArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.UpdateAlertPoliciesResult.FromString,
                _registered_method=True)
        self.GetEntityMetadata = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/GetEntityMetadata',
                request_serializer=stats_dot_base_dot_stats__pb2.GetEntityMetadataArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_stats__pb2.GetEntityMetadataResult.FromString,
                _registered_method=True)
        self.CreateTask = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/CreateTask',
                request_serializer=stats_dot_base_dot_pulse__pb2.CreateTaskArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_pulse__pb2.CreateTaskResult.FromString,
                _registered_method=True)
        self.ReportTaskProgress = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/ReportTaskProgress',
                request_serializer=stats_dot_base_dot_pulse__pb2.ReportTaskProgressArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_pulse__pb2.ReportTaskProgressResult.FromString,
                _registered_method=True)
        self.GetTasks = channel.unary_unary(
                '/cohesity.stats.newserver.stub.RpcService/GetTasks',
                request_serializer=stats_dot_base_dot_pulse__pb2.GetTasksArg.SerializeToString,
                response_deserializer=stats_dot_base_dot_pulse__pb2.GetTasksResult.FromString,
                _registered_method=True)


class RpcServiceServicer(object):
    """-----------------------------------------------------------------------------

    RPC service used by the Stats server.
    """

    def GetMaster(self, request, context):
        """Message sent to get the current Stats server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrUpdateEntitySchema(self, request, context):
        """Message sent to create or update an entity schema.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntitiesSchema(self, request, context):
        """Message sent to get an entity schema.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddOrUpdateEntity(self, request, context):
        """Message sent to add or update an entity in an entity schema.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntities(self, request, context):
        """Message sent to get entities in an entity schema.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewGetEntities(self, request, context):
        """New implementation of 'GetEntities(...)'. 'GetEntitiesArg' has the list of
        metrics needed in 'GetEntitiesResult'.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntitiesById(self, request, context):
        """Message sent to get entities by their ids.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewGetEntitiesById(self, request, context):
        """New implementation of 'GetEntitiesById(...)'. 'GetEntitiesByIdArg' has the
        list of metrics needed in 'GetEntitiesByIdResult'.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEntity(self, request, context):
        """Message sent to delete an entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteClusterInstance(self, request, context):
        """Message sent to delete a cluster instance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddEntityStats(self, request, context):
        """Message sent to add stats for an entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddEntitiesStats(self, request, context):
        """Message sent to add stats for multiple metrics of multiple entities.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeSeriesStats(self, request, context):
        """Message sent to get time series stats for entities.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCounters(self, request, context):
        """Message sent to create one ore more counters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCounters(self, request, context):
        """Message sent to get counters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCounters(self, request, context):
        """Message sent to update counters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCounters(self, request, context):
        """Message sent to delete counters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateStatsContainers(self, request, context):
        """Message sent to create one ore more Stats containers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatsContainers(self, request, context):
        """Message sent to get Stats containers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStatsContainers(self, request, context):
        """Message sent to update counters associated with Stats containers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteStatsContainers(self, request, context):
        """Message sent to delete Stats containers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlertPolicies(self, request, context):
        """Message sent to get the policies of stats based alert types.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAlertPolicies(self, request, context):
        """Message sent to update the policies of one or more stats based alert
        types.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntityMetadata(self, request, context):
        """Message sent to get the meta data of an entity and its metrics.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTask(self, request, context):
        """Message sent to create a Pulse task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportTaskProgress(self, request, context):
        """Message sent to report progress of Pulse tasks.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTasks(self, request, context):
        """Message sent to get Pulse tasks.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RpcServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMaster': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMaster,
                    request_deserializer=stats_dot_base_dot_stats__pb2.GetMasterArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.GetMasterResult.SerializeToString,
            ),
            'CreateOrUpdateEntitySchema': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrUpdateEntitySchema,
                    request_deserializer=stats_dot_base_dot_stats__pb2.CreateOrUpdateEntitySchemaArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.CreateOrUpdateEntitySchemaResult.SerializeToString,
            ),
            'GetEntitiesSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntitiesSchema,
                    request_deserializer=stats_dot_base_dot_stats__pb2.GetEntitiesSchemaArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.GetEntitiesSchemaResult.SerializeToString,
            ),
            'AddOrUpdateEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.AddOrUpdateEntity,
                    request_deserializer=stats_dot_base_dot_stats__pb2.AddOrUpdateEntityArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.AddOrUpdateEntityResult.SerializeToString,
            ),
            'GetEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntities,
                    request_deserializer=stats_dot_base_dot_stats__pb2.GetEntitiesArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.GetEntitiesResult.SerializeToString,
            ),
            'NewGetEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.NewGetEntities,
                    request_deserializer=stats_dot_base_dot_stats__pb2.GetEntitiesArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.GetEntitiesResult.SerializeToString,
            ),
            'GetEntitiesById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntitiesById,
                    request_deserializer=stats_dot_base_dot_stats__pb2.GetEntitiesByIdArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.GetEntitiesByIdResult.SerializeToString,
            ),
            'NewGetEntitiesById': grpc.unary_unary_rpc_method_handler(
                    servicer.NewGetEntitiesById,
                    request_deserializer=stats_dot_base_dot_stats__pb2.GetEntitiesByIdArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.GetEntitiesByIdResult.SerializeToString,
            ),
            'DeleteEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEntity,
                    request_deserializer=stats_dot_base_dot_stats__pb2.DeleteEntityArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.DeleteEntityResult.SerializeToString,
            ),
            'DeleteClusterInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteClusterInstance,
                    request_deserializer=stats_dot_base_dot_stats__pb2.DeleteClusterInstanceArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.DeleteClusterInstanceResult.SerializeToString,
            ),
            'AddEntityStats': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEntityStats,
                    request_deserializer=stats_dot_base_dot_stats__pb2.AddEntityStatsArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.AddEntityStatsResult.SerializeToString,
            ),
            'AddEntitiesStats': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEntitiesStats,
                    request_deserializer=stats_dot_base_dot_stats__pb2.AddEntitiesStatsArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.AddEntitiesStatsResult.SerializeToString,
            ),
            'GetTimeSeriesStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeSeriesStats,
                    request_deserializer=stats_dot_base_dot_stats__pb2.GetTimeSeriesStatsArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.GetTimeSeriesStatsResult.SerializeToString,
            ),
            'CreateCounters': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCounters,
                    request_deserializer=stats_dot_base_dot_stats__pb2.CreateCountersArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.CreateCountersResult.SerializeToString,
            ),
            'GetCounters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCounters,
                    request_deserializer=stats_dot_base_dot_stats__pb2.GetCountersArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.GetCountersResult.SerializeToString,
            ),
            'UpdateCounters': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCounters,
                    request_deserializer=stats_dot_base_dot_stats__pb2.UpdateCountersArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.UpdateCountersResult.SerializeToString,
            ),
            'DeleteCounters': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCounters,
                    request_deserializer=stats_dot_base_dot_stats__pb2.DeleteCountersArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.DeleteCountersResult.SerializeToString,
            ),
            'CreateStatsContainers': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStatsContainers,
                    request_deserializer=stats_dot_base_dot_stats__pb2.CreateStatsContainersArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.CreateStatsContainersResult.SerializeToString,
            ),
            'GetStatsContainers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatsContainers,
                    request_deserializer=stats_dot_base_dot_stats__pb2.GetStatsContainersArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.GetStatsContainersResult.SerializeToString,
            ),
            'UpdateStatsContainers': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStatsContainers,
                    request_deserializer=stats_dot_base_dot_stats__pb2.UpdateStatsContainersArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.UpdateStatsContainersResult.SerializeToString,
            ),
            'DeleteStatsContainers': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteStatsContainers,
                    request_deserializer=stats_dot_base_dot_stats__pb2.DeleteStatsContainersArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.DeleteStatsContainersResult.SerializeToString,
            ),
            'GetAlertPolicies': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlertPolicies,
                    request_deserializer=stats_dot_base_dot_stats__pb2.GetAlertPoliciesArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.GetAlertPoliciesResult.SerializeToString,
            ),
            'UpdateAlertPolicies': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAlertPolicies,
                    request_deserializer=stats_dot_base_dot_stats__pb2.UpdateAlertPoliciesArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.UpdateAlertPoliciesResult.SerializeToString,
            ),
            'GetEntityMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntityMetadata,
                    request_deserializer=stats_dot_base_dot_stats__pb2.GetEntityMetadataArg.FromString,
                    response_serializer=stats_dot_base_dot_stats__pb2.GetEntityMetadataResult.SerializeToString,
            ),
            'CreateTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTask,
                    request_deserializer=stats_dot_base_dot_pulse__pb2.CreateTaskArg.FromString,
                    response_serializer=stats_dot_base_dot_pulse__pb2.CreateTaskResult.SerializeToString,
            ),
            'ReportTaskProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportTaskProgress,
                    request_deserializer=stats_dot_base_dot_pulse__pb2.ReportTaskProgressArg.FromString,
                    response_serializer=stats_dot_base_dot_pulse__pb2.ReportTaskProgressResult.SerializeToString,
            ),
            'GetTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTasks,
                    request_deserializer=stats_dot_base_dot_pulse__pb2.GetTasksArg.FromString,
                    response_serializer=stats_dot_base_dot_pulse__pb2.GetTasksResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cohesity.stats.newserver.stub.RpcService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cohesity.stats.newserver.stub.RpcService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RpcService(object):
    """-----------------------------------------------------------------------------

    RPC service used by the Stats server.
    """

    @staticmethod
    def GetMaster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/GetMaster',
            stats_dot_base_dot_stats__pb2.GetMasterArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.GetMasterResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateOrUpdateEntitySchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/CreateOrUpdateEntitySchema',
            stats_dot_base_dot_stats__pb2.CreateOrUpdateEntitySchemaArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.CreateOrUpdateEntitySchemaResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEntitiesSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/GetEntitiesSchema',
            stats_dot_base_dot_stats__pb2.GetEntitiesSchemaArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.GetEntitiesSchemaResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddOrUpdateEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/AddOrUpdateEntity',
            stats_dot_base_dot_stats__pb2.AddOrUpdateEntityArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.AddOrUpdateEntityResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/GetEntities',
            stats_dot_base_dot_stats__pb2.GetEntitiesArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.GetEntitiesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NewGetEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/NewGetEntities',
            stats_dot_base_dot_stats__pb2.GetEntitiesArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.GetEntitiesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEntitiesById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/GetEntitiesById',
            stats_dot_base_dot_stats__pb2.GetEntitiesByIdArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.GetEntitiesByIdResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NewGetEntitiesById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/NewGetEntitiesById',
            stats_dot_base_dot_stats__pb2.GetEntitiesByIdArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.GetEntitiesByIdResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/DeleteEntity',
            stats_dot_base_dot_stats__pb2.DeleteEntityArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.DeleteEntityResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteClusterInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/DeleteClusterInstance',
            stats_dot_base_dot_stats__pb2.DeleteClusterInstanceArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.DeleteClusterInstanceResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddEntityStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/AddEntityStats',
            stats_dot_base_dot_stats__pb2.AddEntityStatsArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.AddEntityStatsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddEntitiesStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/AddEntitiesStats',
            stats_dot_base_dot_stats__pb2.AddEntitiesStatsArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.AddEntitiesStatsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTimeSeriesStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/GetTimeSeriesStats',
            stats_dot_base_dot_stats__pb2.GetTimeSeriesStatsArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.GetTimeSeriesStatsResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCounters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/CreateCounters',
            stats_dot_base_dot_stats__pb2.CreateCountersArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.CreateCountersResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCounters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/GetCounters',
            stats_dot_base_dot_stats__pb2.GetCountersArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.GetCountersResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCounters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/UpdateCounters',
            stats_dot_base_dot_stats__pb2.UpdateCountersArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.UpdateCountersResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCounters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/DeleteCounters',
            stats_dot_base_dot_stats__pb2.DeleteCountersArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.DeleteCountersResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateStatsContainers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/CreateStatsContainers',
            stats_dot_base_dot_stats__pb2.CreateStatsContainersArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.CreateStatsContainersResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStatsContainers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/GetStatsContainers',
            stats_dot_base_dot_stats__pb2.GetStatsContainersArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.GetStatsContainersResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateStatsContainers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/UpdateStatsContainers',
            stats_dot_base_dot_stats__pb2.UpdateStatsContainersArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.UpdateStatsContainersResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteStatsContainers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/DeleteStatsContainers',
            stats_dot_base_dot_stats__pb2.DeleteStatsContainersArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.DeleteStatsContainersResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAlertPolicies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/GetAlertPolicies',
            stats_dot_base_dot_stats__pb2.GetAlertPoliciesArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.GetAlertPoliciesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateAlertPolicies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/UpdateAlertPolicies',
            stats_dot_base_dot_stats__pb2.UpdateAlertPoliciesArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.UpdateAlertPoliciesResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEntityMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/GetEntityMetadata',
            stats_dot_base_dot_stats__pb2.GetEntityMetadataArg.SerializeToString,
            stats_dot_base_dot_stats__pb2.GetEntityMetadataResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/CreateTask',
            stats_dot_base_dot_pulse__pb2.CreateTaskArg.SerializeToString,
            stats_dot_base_dot_pulse__pb2.CreateTaskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReportTaskProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/ReportTaskProgress',
            stats_dot_base_dot_pulse__pb2.ReportTaskProgressArg.SerializeToString,
            stats_dot_base_dot_pulse__pb2.ReportTaskProgressResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cohesity.stats.newserver.stub.RpcService/GetTasks',
            stats_dot_base_dot_pulse__pb2.GetTasksArg.SerializeToString,
            stats_dot_base_dot_pulse__pb2.GetTasksResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
